/******************Frameworks must have code start*******************/
var flag = "N"; var validate = true;
/*jsp functions starts here*/
var Qualificationresult = ""; var prevCheckboxList = ""; var tablecheckboxid = ""; var finalCheck = "true"; var applicationData = new Array();
function tabsSwitchBack() {
   var tab = 0; $('.checktabback').on('click', function tabswitchInner() {
      var getCurrTabId = $(this).attr('id'); var getCurrAction = getCurrTabId.split('-'); var getCurrTabNo = Number(getCurrAction[2]); if (getCurrAction[0].toUpperCase() == "BACK") {
         $('#fragment-' + getCurrTabNo).removeClass('active in'); $('.efrmgen-navli#tab-' + getCurrTabNo).removeClass('active'); if (ConfigurationObj.TestCityReq.split('~')[0] == 'NN' && getCurrTabNo == 33) { getCurrTabNo = getCurrTabNo - 1; }
         $('#fragment-' + Number(getCurrTabNo - 1)).addClass('active in'); $('.efrmgen-navli#tab-' + Number(getCurrTabNo - 1)).addClass('active')
      } else { return !1 }
   })
}
function tabsSwitch(id, newid) {
   $('#fragment-' + id).removeClass('active in');
   $('.efrmgen-navli#tab-' + id).removeClass('active'); $('.efrmgen-navli#tab-' + id + ' a').addClass('tabSaved');
   $('#fragment-' + newid).addClass('active in');
   $('.efrmgen-navli#tab-' + newid).addClass('active'); $('.efrmgen-navli#tab-' + newid).removeClass('tabli');
};
function checkForSavedTabs() {
   var noOfTabs = $('input[id^="txtTab"]');
   for (let i = 0; i <= noOfTabs.length; i++) {
      if ($(noOfTabs[i]).val() == 'Saved') {
         $('.efrmgen-navli#tab-' + (28 + i) + ' a').addClass('tabSaved');
         $('.efrmgen-navli#tab-' + (28 + i)).removeClass('tabli');
         $('.efrmgen-navli#tab-' + (29 + i)).removeClass('tabli');
      }
   }
}
function callFnsavetab(getCurrTabId) {
   var getCurrTabNo = getCurrTabId;
   if (getCurrTabNo == "28") {
      tab1saveCall(getCurrTabNo)
   } else if (getCurrTabNo == "29") {
      tab2saveCall(getCurrTabNo)
   } else if (getCurrTabNo == "30") {
      tab3saveCall(getCurrTabNo)
   } else if (getCurrTabNo == "31") {
      tab4saveCall(getCurrTabNo)
   } else if (getCurrTabNo == "32") {
      tab5saveCall(getCurrTabNo)
   } else {
      return false;
   }
}
const currPageName = window.location.pathname.split("/").filter(function (c) { return c.length; }).pop();
document.addEventListener('DOMContentLoaded', (event) => {
   //Don't Change
   $("table").first().css("width", "100%");
   $("td").first().removeAttr("width");
   $("td div").first().removeAttr("style");
   // alert error------------
   $('input').on('blur', function () {
      var j = this.id.split('_R')[0];
      if ($("#" + j).val() != "") {
         $('#' + this.id).parents('.efmCls').find('.errortxt').css('display', 'none');
      }
      $(".max-counter").hide();
   });
   $('.reverify').on('change', function () { reverifyData(this.id); });
   $('select').on('changed.bs.select', function () {
      if ($(this).next().find('button .filter-option').text() != $(this).attr('title')) {
         $(this).parents('.efmCls').find('.errortxt').css('display', 'none');
      }
   });
   // max length counter
   $("input").keydown(function () {
      charCountrId = this.id;
      //need to use a timeout in order to allow the input to be updated
      setTimeout(function () {
         fnMaxCharConter(charCountrId);
      }, 5);
   });
   $(".max-counter").hide();
   //for responsive tab hover**********************
   let noOfTabCount = $(".efrmgen-navli");
   if (noOfTabCount.length <= 1) {
      $(".efrmgen-navli a").css("cursor", "default");
   }
   //pagesubmit
   if (currPageName == "Registration.html") {
      //Registration page Modal
      document.getElementById('RegSubmit').addEventListener("click", function () {
         validateRegistration();
      }, true);
   }
   if (currPageName == "editApplication.do" || currPageName == "application.html" || currPageName == "onlineApplicationAction.do") {
      document.getElementById('Submit').addEventListener("click", function () {
         doValidate('Submitted', this.id);
      }, true);
      document.getElementById('previewSubmit').addEventListener("click", function () {
         // fnShowPreview();
         setTimeout('fnShowPreview();', 1000);
      }, true);
      // For edit window data table 
      $('[href^="#fragment-"]').on('hover', () => { fnSetEditWindowFields(); });
      $("#forward-tab-" + ($('[id^="forward-tab-"]').length + 27)).on('hover', () => { fnSetEditWindowFields(); });
   }
   setTimeout("checkBrowser()", 1000);//check browser compatibility
   fnTabToggleText(); //for responsive tab toggle alert text
   switchView();//for mobile responsive tab 
   tabsSwitchBack(); //go Back to previous tab
   fnSetPageVersion();//update version for all pages.
   fnStartLoader();//start loader
   $('[data-toggle="tooltip"]').tooltip();// tooltip js
   setTimeout('$(".bs-searchbox input").attr("maxlength","20")', 5000); //set dropdown searchbox limit
});
// /********************************************* must have functions************Akash*********************************/
function fnTabToggleText() {
   // ----------for responsive tab toggle msg.----------------
   $(".efrmgen-collapse-heading").append("<span class='toggle-head-txt'></span>");
   $(".efrmgen-collapse-heading").mouseenter(function () {
      var classNames = $(this).attr("class");
      if (classNames != undefined && classNames != "") {
         $(this).children(".toggle-head-txt").show();
         if (classNames.includes("collapsed")) {
            $(this).children(".toggle-head-txt").html("Expand ");
         } else {
            $(this).children(".toggle-head-txt").html("Collapse ");
         }
      }
   });
   $(".efrmgen-collapse-heading").click(function () {
      var classNames = $(this).attr("class");
      if (classNames != undefined && classNames != "") {
         if (classNames.includes("collapsed")) {
            $(this).children(".toggle-head-txt").html("Collapse ");
         } else {
            $(this).children(".toggle-head-txt").html("Expand ");
         }
      }
   });
   $(".toggle-head-txt").hover(function () { $(this).show(); });
   $(".efrmgen-collapse-heading").mouseout(function () {
      $(this).children(".toggle-head-txt").hide();
   });
}
function fnStartLoader() {
   var ssL = 0;
   if ($("#progres_label").length > 0) {
      var e = $("#progres_label");
      a = 0; e.width(a);
      var r = setInterval(function () {
         a += 1;
         e.css("width", a + "%");
         $("#progres_label").html(ssL);
         ssL = document.getElementById('progres_label').style.width
         if (a >= 100) {
            setTimeout(`$("#progres_label").html('100%');`, 400);
            clearInterval(r); $(".efrmgen-loader-outer").fadeOut();
            "Registration.html" == currPageName && $("#myModal").modal("show"), "editApplication.do" != currPageName && "application.html" != currPageName || $("#myModal").modal("show")
         }
      }, 50);
   }
}
function fnSetPageVersion() { var getVersionnumber = 'Version 15.00.01'; if (getVersionnumber) { $('#version-tag-login,#version-tag-changePass').html(getVersionnumber) } }
/***mobile responsive menu***///ON resize
window.addEventListener("resize", function (event) {
   switchView();
});
function switchView() {
   if ($(window).width() <= 767) {
      $('.efrmgen-navli').on('click', function addAbsMob() {// addAbsMob() for addition of more functionalities
         $('.efrmgen-navul').removeClass('efrmgen-navul-abs');
      });
      //add mobile class
      $('.efrmgen-container-nav-sticky').addClass('efrmgen-mobile-class');//future use
      $('.efrmgen-navul').addClass('efrmgen-navul-mob');
      $('.efrmgen-mobilemenu.hidden').removeClass('hidden');
      let noOfTabCount = $(".efrmgen-navli");
      if (noOfTabCount.length <= 1) {
         $('.efrmgen-mobilemenu').addClass('hidden');
         // $('.efrmgen-navul').addClass('efrmgen-navul-abs');
      }
   } else {
      $('.efrmgen-container-nav-sticky').removeClass('efrmgen-mobile-class');//future use
      $('.efrmgen-navul').removeClass('efrmgen-navul-mob');
      $('.efrmgen-mobilemenu').addClass('hidden');
   }
}
function toggleMobileMenu() {
   $('.efrmgen-navul').toggleClass('efrmgen-navul-abs');
}
/***mobile responsive menu***//*dont remove below functions*/
var trimSpacesFromAllTextBox = () => {
   var inputs = document.getElementsByTagName('input'); for (var k = 0; k < inputs.length; k++) {
      var input = inputs[k]
      if (input.type != 'text')
         continue; input.value = trim(input.value)
   }
}
function fnDownload(id) {
   window.open($("#" + id + "_div").html(), "", "status=yes,height=400,width=800,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes,top=100; left=100; ");
}
//***********-global variables----dont change********************akash**************
var charCountrId = ""; var gblAfterFocusId = ""; let maxExpRows = 3;
// max length counter-----------------------------
function fnMaxCharConter(id) {
   var classNames = $("#" + id).next().attr("class");
   if (classNames != undefined && classNames != "") {
      if (classNames.includes("max-counter")) {
         var maxLength = $("#" + id).attr("maxLength");
         if (!(maxLength == undefined || maxLength == "")) {
            $("#" + id).next(".max-counter").show();
            $("#" + id).next(".max-counter").html((maxLength - $("#" + id).val().length) + " Characters left");
            $("#" + id).next(".max-counter").css("color", "rgb(7, 7, 90)");
         }
         if ((maxLength - $("#" + id).val().length) == 0) {
            $("#" + id).next(".max-counter").css("color", "red");
         }
      }
   }
}
function fnHitEnter(e, id) {
   if (e.keyCode === 13) {
      $("#" + id).click();
   }
}
//----- custom alert---------------------
function dissmissPopup() { $("#confirm-submit").addClass("fade").fadeOut(), $("#confirm-submit").removeClass("fadeIn"), $(".webeform_modal_alert_subtitle").html(""), "" != gblAfterFocusId && ($("#" + gblAfterFocusId).parents(".collapse").collapse("show"), $("#" + gblAfterFocusId).focus()) } function alert_if(e) { $(".efrmgen_alert_subtitle").html(e), gblAfterFocusId = "", $("#confirm-submit").addClass("fadeIn").fadeIn(), $("#confirm-submit").removeClass("fade") }
function input_if(e, t) { $(".efrmgen_alert_subtitle").html(t), gblAfterFocusId = e, $("#" + e).parents(".efmCls").find(".errortxt").css("display", "block"), $("#" + e).parents(".efmCls").find(".errortxt").html(t), $("#confirm-submit").addClass("fadeIn").fadeIn(), $("#confirm-submit").removeClass("fade"); validate = false; }
function input_else(e) { $("#confirm-submit").addClass("fade").fadeOut(), $("#confirm-submit").removeClass("fadeIn"), $(".efrmgen_alert_subtitle").html(""), $("#" + e).parents(".efmCls").find(".errortxt").css("display", "none"); validate = true; }
function drop_select_if(e, t) { $(".efrmgen_alert_subtitle").html(t), gblAfterFocusId = e, $("#" + e).parents(".efmCls").find(".errortxt").css("display", "block"), $("#" + e).parents(".efmCls").find(".errortxt").html(t), $(window).scrollTop($('[data-id="' + e + '"]').offset().top - 200), $("#confirm-submit").addClass("fadeIn").fadeIn(), $("#confirm-submit").removeClass("fade"); validate = false; }
function drop_select_else(e) { input_else(e) }
function drop_check_if(e, t) { $(".efrmgen_alert_subtitle").html(t), gblAfterFocusId = e, $("#" + e).parents(".efmCls").find(".errortxt").css("display", "block"), $("#" + e).parents(".efmCls").find(".errortxt").html(t), $(window).scrollTop($("#" + gblAfterFocusId).offset().top - 200), $("#confirm-submit").addClass("fadeIn").fadeIn(), $("#confirm-submit").removeClass("fade"); validate = false; }
function drop_check_else(e) { input_else(e) }
function Dob_if(e, t) { input_if(e, t) } function Dob_else(e) { input_else(e) }
function drop_radio_if(e, t) { $(".efrmgen_alert_subtitle").html(t), gblAfterFocusId = e, $("#" + e).parents(".efmCls").find(".errortxt").css("display", "block"), $("#" + e).parents(".efmCls").find(".errortxt").html(t), $("#" + e + "_R")[0].focus(), $("#confirm-submit").addClass("fadeIn").fadeIn(), $("#confirm-submit").removeClass("fade"); validate = false; }
function drop_radio_else(e) { input_else(e) } function fnCheckDateValue(e) { "" != $("#" + e).val() && $("#" + e).parents(".efmCls").find(".errortxt").css("display", "none") }
/***Print***/
function print_view() {
   set_viewContent();
   setTimeout('window.print()', 200);
   setTimeout('reset_viewContent()', 2000);
}
function set_viewContent() {
   $('.efrmgen-fullbanner').hide();
   $('.efrmgen-header').hide();
}
function reset_viewContent() {
   $('.efrmgen-fullbanner').show();
   $('.efrmgen-header').show();
}
/*End Print*/
/*dont remove above functions*/
function splituploadDocsString(stringToSplit, separator, elementToSearch) {
   var arrayOfStrings = stringToSplit.split(separator);
   stringToSplit1 = document.getElementById("txtFileName").value;
   var arrayOfStrings1 = stringToSplit1.split(separator);
   var a = 0;
   for (var i = 0; i < arrayOfStrings1.length; i++) {
      if (elementToSearch == arrayOfStrings1[i]) {
         if ("null" == arrayOfStrings[i] || " " == arrayOfStrings[i] || "undefined" == arrayOfStrings[i]) {
            return 0;
         } else {
            return 1;
         }
      }
   }
   return 0;
}
// consent -------
function ins_check() {
   $("#myModalConsent").modal("show");
   // var obj = []; var jsondata = ''; var tmp1 = { 'Forms_32664': 'EForms_   ' };
   // obj.push(tmp1);
   // jsondata = JSON.stringify(obj);
   // getAllPolicies(jsondata);
   // setTimeout('CreateEventForConsent()', 4000);
}
function getAllPoliciesjs() {
   var obj = []; var jsondata = ""; var tmp1 = { Forms_32664: "EForms_83978" };
   obj.push(tmp1);
   jsondata = JSON.stringify(obj);
   getAllPolicies(jsondata);
}
function validateIonCaptchaConsent(e, a) { var t = document.getElementById("captchaService_imageKey").value, n = document.getElementById("captchaService_answer").value, c = "captchaService_imageKey=" + t + "&captchaService_answer=" + n + "&appId=30"; if ("" == n) return alert("Please enter the Captcha."), !1; var o = fnGetXMLHttpObject(); if (null != o) { "/EForms/IonCaptchaValidation", o.open("POST", "/EForms/IonCaptchaValidation", !0), o.onreadystatechange = function () { handleCaptchaResponseForIonCaptchaConsent(o, e, a) }, o.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), o.send(c) } }
function handleCaptchaResponseForIonCaptchaConsent(http_request, submitType, button_id) {
   var ERRORStr = new Array(); var responseError = ""; var fields; var flag = ""; var check = "";
   if (http_request.readyState == 4) {
      if (http_request.status == 200) {
         if (http_request.responseText != null) {
            check = http_request.responseText;
            if (check.indexOf("Valid") != -1) {
               var obj = [];
               var jsondata = "";
               var tmp1 = { Forms_32664: "EForms_83978" };
               obj.push(tmp1);
               var jsondata = JSON.stringify(obj);
               getConsentFromFrameworkSubmit(jsondata, submitType);
            } else {
               alert("Please enter correct text shown in image");
               document.getElementById("captchaService_answer").value = "";
               init_captcha();
               document.getElementById(button_id).removeAttribute("disabled");
               return false;
            }
         }
      }
   }
}
function ClosepoliciesCustom() {
   $('.efrmgen-viewhederbar').css('z-index', 9);
   $('.efrmgen-container-nav-sticky').css('z-index', 9);
}
function CreateEventForConsent() {
   // $("#consent-popup").contents().find("[onclick='Closepolicies()']").attr("onclick","window.top.ClosepoliciesCustom();Closepolicies();");
   $("#consent-popup").contents().find("#createApplicationPopup").css('width', '90%');
   var r = document.querySelector(':root');
   var rs = getComputedStyle(r);
   var rcolor = rs.getPropertyValue('--main-bg-color-white');
   // $("#consent-popup").contents().find(".button").css('background-color', rcolor);
}
/*datepicker related*/
//var datepicker_arr = ConfigurationObj.Datepicker.split('~');

function WEDateTime(id) {
   $('#' + id).datepicker({
      startDate: datepicker_arr[1].split('_')[1],
      endDate: datepicker_arr[1].split('_')[2],
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "dd/mm/yyyy"
   }).on('change', function () { fnCheckDateValue(id); });;
   $('#' + id).focus();
}

function datePicker1(id) {
   $('#' + id).datepicker({
      startDate: "01/01/1975",
      endDate: "31/12/2040",
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "dd/mm/yyyy",
      // viewMode: "years",
      // minViewMode: "years"
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function datePicker10R(id) {
   $('#' + id).datepicker({
      startDate: "1975",
      endDate: "2023",
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "yyyy",
      viewMode: "years",
      minViewMode: "years",
      maxViewMode: "years"
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function datePicker10(id) {
   $('#' + id).datepicker({
      startDate: datepicker_arr[6].split('_')[1],
      endDate: new Date(),
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "dd/mm/yyyy",
      // viewMode: "years",
      // minViewMode: "years"
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function DateTimeExp(id) {
   $('#' + id).datepicker({
      format: "dd/mm/yyyy",
      startDate: datepicker_arr[3].split('_')[1],
      endDate: datepicker_arr[3].split('_')[2],
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top'
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function DateTimeExpEX(id) {
   $('#' + id).datepicker({
      format: "dd/mm/yyyy",
      startDate: datepicker_arr[5].split('_')[1],
      endDate: datepicker_arr[5].split('_')[2],
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top'
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function appDobDate(id) {
   $('#' + id).datepicker({
      startDate: "17/07/1966",
      endDate: "17/07/2005",
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "dd/mm/yyyy"
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function SSCYOPDate(id) {
   $('#' + id).datepicker({
      startDate: "1960",
      endDate: "2023",
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "yyyy",
      viewMode: "years",
      minViewMode: "years",
      maxViewMode: "years"
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function startFromToday(id) {
   $('#' + id).datepicker({
      startDate: new Date(),
      endDate: datepicker_arr[4].split('_')[1],
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "dd/mm/yyyy"
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
function MarDate(id) {
   $('#' + id).datepicker({
      startDate: "01/01/1960",
      endDate: "30/04/2023",
      todayBtn: "linked",
      clearBtn: true,
      autoclose: true,
      todayHighlight: true,
      toolbarPlacement: 'top',
      format: "dd/mm/yyyy"
   }).on('change', function () { fnCheckDateValue(id); });
   $('#' + id).focus();
}
/*datepicker related*/
/*Must have functions*/
function hideShowSections() {
   var noOfSections = $('.efrmgen-viewvalidator').length;
   var sections = $('.efrmgen-viewvalidator');
   for (var i = 0; i < noOfSections; i++) {
      var currsec = $(sections[i]).find("[id*='_div']");
      var count = 0;
      for (var j = 0; j < currsec.length; j++) {
         if ($(currsec[j]).html().trim() != "") {
            count++;
            var ID = $(currsec[j]).attr("id").replace("_div", "_tr");
            $('#' + ID).show();
         } else {
            var ID = $(currsec[j]).attr("id").replace("_div", "_tr");
            $('#' + ID).hide();
         }
      }
      if (count == 0) {
         $(sections[i]).hide();
      }
   }

}
//for previw hide and show+++=++++++++
function hideShowPriviewSections() {
   var noOfSections = window.frame2.$('.efrmgen-viewvalidator').length;
   var sections = window.frame2.$('.efrmgen-viewvalidator');
   for (var i = 0; i < noOfSections; i++) {
      var currsec = window.frame2.$(sections[i]).find("[id*='_div']");
      var count = 0;
      for (var j = 0; j < currsec.length; j++) {
         if (window.frame2.$(currsec[j]).html().trim() != "") {
            count++;
            var ID = window.frame2.$(currsec[j]).attr("id").replace("_div", "_tr");
            window.frame2.$('#' + ID).show();
         } else {
            var ID = window.frame2.$(currsec[j]).attr("id").replace("_div", "_tr");
            window.frame2.$('#' + ID).hide();
         }
      }
      if (count == 0) {
         window.frame2.$(sections[i]).hide();
      } else {
         window.frame2.$(sections[i]).show();
      }
   }
}



function fnHideEmptyFields() {
   $('#app_seq_no1_div').html($('#app_seq_no_div').html());
   var urlToken = document.location.search;
   urlToken = urlToken.split('=');
   seqNo = urlToken[1];
   // $("#verifyPageName").val("View");
   if ($("#verifyPageName").val() == "View") {
      hideShowSections();
   }
   
   // if($('#txtCandSubDateTime_div').html()!="" && $('#payment_status_div').html()!="" && ($('#payment_status_div').html()!="S")){
      // var currentDate = new Date();
      // var submissionDate = new Date($('#txtCandSubDateTime_div').html());
      // var minutes = ((currentDate.getTime() - submissionDate.getTime()) / 1000)/60;
      // if(Number(minutes)<(24*60)){
         // $('#Edit').remove();
         // $('.failure-wait').show();
      // }
   // }
   // if($('#txtCandSubDateTime_div').html()=="" && ($('#payment_status_div').html()==="F" || $('#payment_status_div').html()=="Payment Failure")){
	   // alert("If the amount deducted from your account, and application is showing payment failed status, kindly wait for 24 hours.");$('#Edit').remove();$('.failure-wait').show();
   // }
   
   if ($('#app_status_div').html() == 'Registration' && seqNo != 'DisplayProfileAfterLogin&orgId') {
      $("#app_seq_no_div1").html($("#app_seq_no_div").html());
       $("#Print").hide(); $("#Edit").show();$("#decl1").hide();
   } else {
      if ($('#app_status_div').html() == "Registration") {
         $("#Print").hide(); $("#Edit").show();$("#decl1").hide();
      }
      else if ($('#app_status_div').html() == "SubmittedOffline" || $('#payment_mode_div').html() == "offline") {
         $("#submitModal p strong").html("Your Application form has been submitted Successfully.");
         $("#submitModal").modal("show"); $("#Print").show(); $("#Edit").hide();
      }
      else if ($('#app_status_div').html() == "Submitted" || $('#app_status_div').html() == "PaymentFail") {
         $("#submitModal p strong").html("Your Application form has been submitted Successfully. Payment is Pending. / तुमचा अर्ज यशस्वीरित्या सबमिट केला गेला आहे. पेमेंट प्रलंबित आहे.");
         $("#submitModal").modal("show"); $("#Print").hide(); $("#Edit").show();$("#decl1").show();
      } else if ($('#app_status_div').html() == 'PaymentSuccess' || ($('#payment_status_div').html() == 'S')) {
         $("#submitModal p strong").html("Your Application form has been submitted Successfully. Payment is successful.");
         $("#submitModal").modal("show"); $("#Print").show(); $("#Edit").hide();$("#decl1").show();
      } else if ($('#app_status_div').html() == 'UpdateSubmitted' && ($('#payment_status_div').html() == 'S')) {
         $("#submitModal p strong").html("Your Application form has benn updated Successfully.");
         $("#submitModal").modal("show"); $("#Print").show(); $("#Edit").hide();$("#decl1").show();
      }
   }
   if ($('#NOC1_div').html() != "") {
      $('.OtherCourse_col').show();
   } else {
      $('.OtherCourse_col').hide();
   }
   if ($('#payment_mode_div').html() == "Challan") {
      $('#payment_status_div').html('Offline Submitted');
      $('#paymentTransactionNo_tr').hide();
      $('#txtTransactionNum_tr').show();
      $('#txtTransactionReceipt_span').show();
   }
   else if ($('#payment_mode_div').html() == "offline") {
      $('#payment_status_tr').hide();
      $('#paymentTransactionNo_tr').hide();
   }
   //'txtPhotoPath',,'txtSignaturePath'
   $("#txtPhotoPath_Upload").attr("src", $("#txtPhotoPath_Upload_div").html()); $("#txtPhotoPath_Upload_div").hide()
   var fieldsArray = new Array('txtPhotoPath_Upload', 'txt10ClassMarksheet', 'txt12ClassMarksheet', 'txt10thCert', 'txt12thCert', 'txtGraduationCert', 'txtGraduationMark', 'txtPostGradCert', 'txtPostGradMark', 'txtAddQualCert', 'txtStateDomicile', 'txtExpCerti', 'txtOHigherQualCert', 'txtNocCert', 'txtCastCerti', 'txtESMCerti', 'txtEWSCerti', 'txtSportCerti', 'txtDisabilityCert', 'txtOtherDoc', 'txtDiplomaMark', 'txtDiplomaCert', 'txtExpCerti2', 'txtExpCerti3', 'txtNonCreamLayerCert', 'txtOrphaneCert', 'txtNameCerti', 'txtIDProof1','txtMarathiCerti','txt789ClassMarksheet','txtPartTimeCerti');
   for (var i = 0; i < fieldsArray.length; i++) {
      if (document.getElementById(fieldsArray[i] + '_div').innerHTML != "") {
         $('#' + fieldsArray[i] + '_span').show();
      } else {
         $('#' + fieldsArray[i] + '_span').hide();
      }
   }
   var SPath = document.getElementById("appSignaturePath").src;
   if (SPath.indexOf("Upload") >= 0) {
      $('#txtSignaturePath_span').show();
      $("#txtSignaturePath_div").parents(".efrmgen-viewvalidator").show();
      // $("#txt10thCert_span").parents(".webeform-flexrow").hide();
   }
   else {
      $('#txtSignaturePath_span').hide();
      $("#txtSignaturePath_div").parents(".efrmgen-viewvalidator").hide();
      // $("#txt10thCert_span").parents(".webeform-flexrow").hide();
   }
   //Always at last of fnhide function
   var payStatus = $('#payment_status_div').html();
   setViewPaymentStatusTxt(payStatus);
   var PPath = document.getElementById("appPhotoImgPath").src;
   if (PPath.indexOf("Upload") >= 0) {
      $("#txtPhotoPath_span").parents(".efmCls").show();
   } else {
      $("#txtPhotoPath_span").parents(".efmCls").hide();
   }
}
function setViewPaymentStatusTxt(value) {
   if (value) {
      if (value == "F") {
         $('#payment_status_div').html('Payment Failure');
      } else if (value == "S") {
         $('#payment_status_div').html('Payment Success');
      } else if (value == "") {
         $('#payment_status_div').html('Pending');
      }
   }
}

function doTaskAfterListingKeyPopulate() {
   // if($('#app_seq_no').val() == ''){
      // fnGetCandidateSavedDetails();
   // }
   setTimeout("doTaskInEdit()", 2000);
}

// function PaymentIssue(){
 // if($('#txtCandSubDateTime').val()!=""&&$('#payment_status').val()!=""&&$('#payment_status').val()!="S"){
      // var currentDate = new Date();
      // var submissionDate   = new Date($('#txtCandSubDateTime').val());
      // var minutes = ((currentDate.getTime() - submissionDate.getTime()) / 1000)/60;
      // if(Number(minutes)<48*60){
         // alert("Since your last payment attempt was failed, Your next payment attempt will be activated after two hours. If your amount is deducted from your account, and application is showing payment failed status, kindly wait for 48 hours.");
         // logoutWithFormIdOrgId('logout');
      // }
	// }
// }

function doTaskInEdit() {
	$('#PhotoCheck').val("Viewed");
   $('#CaptureCheck').val("Viewed");
   $('#SignCheck').val("Viewed");
   $("#txtChildFormId").val("83978");
   getConfigurationDetails();
   setTimeout("setFeeWithRespectiveCourse()", 3000);
   // setTimeout("PaymentIssue()", 3000);
   setTimeout("checkGatewayType()", 4000);
   // removedisableCheck('payment_mode');
   // removeCheck('payment_mode');
   //showpaymenttable();
   $('input[id$="_txtbox"]').hide();
   if ($('input:input').is('[readonly]')) { $('input:input').css('color', 'black !important'); }
   if ($('input:input')) { $('input:input').attr('oncopy', 'return false').attr('onpaste', 'return false').attr('autocomplete', 'off'); }
   setaddressedit();
   SetCAdressInEdit();
   SetPAddressInEdit();
   // akash-- trial and err
   $("#verifyPageName").val("Application");

   // setTimeout("myShowHide()",3500);

   //showSportDec();
   setUploadMessage();
   // onloadSetDetails();
   setTimeout("hideShowApp()", 2000);
   setTimeout("setSportCategory()", 2000);
   setTimeout("hideShowQualDetails()", 2500);
   // hideShowApp();
   // no.of Child-- below three functions and related code needs to be optimized
   fnFillAge();
   setTimeout("reverifyDataInEdit()", 4000);
   setTimeout("SetDropdownValues()", 4500);
   // setTimeout("SetRadioValues()", 4500);
   // setTimeout('setTestCity("txtTestState1","TestCity1")', 5000);
   // setTimeout('setTestCity("txtTestState2","TestCity2")', 5000);
   // setTimeout('setTestCity("txtTestState3","TestCity3")', 5000);
   // setTimeout('setTestCity("txtTestState4","TestCity4")', 5000);
   // setTimeout('setTestCity("txtTestState5","TestCity5")', 5000);
   // setTimeout('setTestCity("txtTestState6","TestCity6")', 5000);

   setTimeout('$(".selectpicker").selectpicker("refresh")', 6000);
   $('.selectpicker').selectpicker('refresh');
   // setTimeout('checkForSavedTabs();', 5000);

   if ($('#txtTab1Saved').val() == 'Saved') {
      document.getElementById("acceptanceCHKprof1").checked = true;document.getElementById("acceptanceDist").checked = true;
   }
   if ($('#txtTab2Saved').val() == 'Saved') {
      document.getElementById("acceptanceScribe").checked = true;
   }
   //edit verify check flat
   editWindowCheckReq = false;
   setTimeout('fnEditWindowConfig()', 6000);
   $("#10thYOP").val($("#txt10thYOP").val());
   $('#10thYOP').attr("disabled", true);
   $('#10thYOP').selectpicker("refresh");
   $('#txtPostName').val('Commissioner Land Records');
   $('#PostName').val('Commissioner Land Records / तलाठी');
   $('#PostName').attr("disabled", true);
   $('#PostName').selectpicker("refresh");
   $('#DistValue').html($('#txtPostDistrict').val());
   $('.DistrictValue').html($('#txtPostDistrict').val());
   $('.AppNameValue').html($('#txtAppFirstName').val());
}
function showConfigInfo() {
   var infoTag = ` <span class="fa fa-info-circle" data-toggle="tooltip" data-placement="top" title="" data-original-title="Field/Section/value/visibility is configurable"> </span>`;
   $("#MaritialStatus,#txtDomicile,#txtCategory,#txtApplyCategory,#txtExServiceman,#txtSportPerson,#txtPWD,#txtWarHero,#txtGovtEmp,#txtMatricSubject,#txtGradDegree,#txtPGDegree,#txtHighQual1Degree,#txtHighQual2Degree,#TestCity1,#TestCity2,#TestCity3,#TestCity4,#TestCity5,#TestCity6,#txtDisabilityType").parents(".efmCls").find(".efrmgen-label").append(infoTag);
   $('[href="#efrmgen-RegNotewrapper"],[href="#PostDetails"],[href="#AdditionalDetail1s"],[href="#QualificationDetails"],[href="#SSCDetails"],[href="#HscDetails"],[href="#DiplomaDetails"],[href="#GraduationDetails"],[href="#PGDegreeDET"],[href="#HighQual1HigherQual"],[href="#HighQual2HigherQual"],[href="#ExperienceDetails"],[href="#testcity"],[href="#documentdet"],[href="#payment"],[href="#paymentmode"],[href="#A1"]').append(infoTag);
   $('[data-toggle="tooltip"]').tooltip();

   setTimeout("removeRadinfo()", 5000);
}
function removeRadinfo() {
   $('[type="radio"]').parent().find(".fa-info-circle").remove();
}
function previewissue(){
	$('.pop_body').css('height','inherit');
}
function fnAfterPreview() {
   window.frame2.$('.efrmgen-viewhederbar,.efrmgen-container-nav-sticky,.appViewNote').hide();
   window.frame2.$("#verifyPageName").val("Preview");
   window.frame2.$("#app_status_tr").hide();
   window.frame2.$(".popupBtnPanel").addClass('efrmgen-submit-wrapper');
   window.frame2.$(".popCancelBtn").addClass('btn efrmgen-common-btn');
   hideShowPriviewSections();
   setTimeout('previewissue();', 1500);
   // setTimeout('SetPhotoSignInPreview()',2000);
   var fieldsArray = new Array('txtPhotoPath','txtPhotoPath_Upload', 'txtSignaturePath', 'txt10ClassMarksheet', 'txt12ClassMarksheet', 'txt10thCert', 'txt12thCert', 'txtGraduationCert', 'txtGraduationMark', 'txtPostGradCert', 'txtPostGradMark', 'txtAddQualCert', 'txtStateDomicile', 'txtExpCerti', 'txtOHigherQualCert', 'txtNocCert', 'txtCastCerti', 'txtESMCerti', 'txtEWSCerti', 'txtSportCerti', 'txtDisabilityCert', 'txtOtherDoc', 'txtDiplomaMark', 'txtDiplomaCert', 'txtExpCerti2', 'txtExpCerti3', 'txtNonCreamLayerCert', 'txtOrphaneCert', 'txtNameCerti', 'txtIDProof1','txtMarathiCerti','txt789ClassMarksheet','txtPartTimeCerti');
   for (var i = 0; i < fieldsArray.length; i++) {
      if (window.frame2.document.getElementById(fieldsArray[i] + '_tr').innerHTML != "") {
         window.frame2.$('#' + fieldsArray[i] + '_div').html(window.frame2.document.getElementById('app' + fieldsArray[i]).src);
         window.frame2.$('#' + fieldsArray[i] + '_span').show();
         window.frame2.$('#app' + fieldsArray[i]).hide();
      } else {
         window.frame2.$('#' + fieldsArray[i] + '_span').hide();
         window.frame2.$('#app' + fieldsArray[i]).hide();
      }
   }
   if (window.frame2.$('#apptxtPhotoPath_Upload').attr('src') != "") {
      window.frame2.$('#txtPhotoPath_Upload_span,#txtPhotoPath_Upload_tr,#apptxtPhotoPath_Upload').show();
   } else {
      window.frame2.$('#txtPhotoPath_Upload_span,#txtPhotoPath_Upload_tr,#apptxtPhotoPath_Upload').hide();
   }
   if (window.frame2.$('#apptxtPhotoPath').attr('src') != "") {
      window.frame2.$('#txtPhotoPath_span,#txtPhotoPath_tr,#apptxtPhotoPath').show();
      window.frame2.$('#txtPhotoPath_tr').parents('.efmCls').show();
   } else {
      window.frame2.$('#txtPhotoPath_span,#txtPhotoPath_tr,#apptxtPhotoPath').hide();
      window.frame2.$('#txtPhotoPath_tr').parents('.efmCls').hide();
   }
   if (window.frame2.$('#apptxtSignaturePath').attr('src') != "") {
      window.frame2.$('#txtSignaturePath_span,#txtSignaturePath_tr,#apptxtSignaturePath').show();
   } else {
      window.frame2.$('#txtSignaturePath_span,#txtSignaturePath_tr,#apptxtSignaturePath').hide();
   }
   if (window.frame2.$('#NOC1_div').html() != "") {
      window.frame2.$('.OtherCourse_col').show();
   } else {
      window.frame2.$('.OtherCourse_col').hide();
   }
   if (window.frame2.$('#payment_mode_div').html() == "Challan") {
      window.frame2.$('#payment_status_tr,#paymentTransactionNo_tr').hide();
      window.frame2.$('#txtTransactionNum_tr,#txtTransactionReceipt_span').show();
      window.frame2.$('#payment_status_div').html('Offline Submitted');

   } else if (window.frame2.$('#payment_mode_div').html() == "offline") {
      window.frame2.$('#payment_status_tr,#paymentTransactionNo_tr').hide();
      window.frame2.$('#txtTransactionNum_tr,#txtTransactionReceipt_span').hide();
   } else {
      window.frame2.$('#payment_status_div').html('Payment Pending');
      window.frame2.$('#txtTransactionNum_tr,#txtTransactionReceipt_span').hide();
   }
   hideShowPriviewSections();
   window.frame2.$('#appSignaturePath,#appPhotoImgPath').hide();
}
function SetPhotoSignInPreview() {
   // window.frame2.$("#appSignaturePath").attr("src",window.frame2.document.getElementById('apptxtSignaturePath').src);

   // try{window.frame2.$("#appPhotoImgPath").attr("src",window.frame2.document.getElementById('apptxtPhotoPath').src);}
   // catch(err){}
}
// solution function overwrite++++++++++++++
function fnClosePopupPreview() {
   jQuery('#defineSequencePopup, .shadow').fadeOut('fast');
   // $('.pop_body').CSS({overflow:'auto'});
   $("#frame2").attr('src', "");
   $("#verifyPageName").val("Application");
}

function tab1saveCall(currid) {
   $('#billing_cust_name').val($('#txtAppName').val());
   fnSaveTabDataFWNew('Personal Details', 'validatePersonalDetails()', 'fragment-28','N');
   if (setTabNo == "28") {
      tabsSwitch(currid, '29')
      setTabNo = "";
   }
     $(window).scrollTop($('#fragment-29').offset().top - 100);
}
function tab2saveCall(currid) {
   fnSaveTabDataFW('Additional Details', 'validateAdditionalDetails()', 'fragment-29');
   if (setTabNo == "29") {
      tabsSwitch(currid, '30');
      setTabNo = "";
   }
     $(window).scrollTop($('#fragment-30').offset().top - 100);
}
function tab3saveCall(currid) {
   fnSaveTabDataFW('Communication Details', 'validateCommunicationDetails()', 'fragment-30');
   if (setTabNo == "30") {
      tabsSwitch(currid, '31');
      setTabNo = "";
   }
     $(window).scrollTop($('#fragment-31').offset().top - 100);
}
function tab4saveCall(currid) {
   fnSaveTabDataFW('Experience Details', 'validateAcademicsDetails()', 'fragment-31');
   if (setTabNo == "31") {
      if (ConfigurationObj.TestCityReq.split('~')[0] == 'NN') {
         $('#txtTab5Saved').val("Saved");
         tabsSwitch(currid, '33'); setTabNo = "";
      }
      tabsSwitch(currid, '32');
      setTabNo = "";
   }
     $(window).scrollTop($('#fragment-33').offset().top - 100);
}
function tab5saveCall(currid) {
   fnSaveTabDataFW('Test City Details', 'validateTestCenterDetails()', 'fragment-32');
   if (setTabNo == "32") {
      tabsSwitch(currid, '33');
      setTabNo = "";
   }
      $(window).scrollTop($('#fragment-33').offset().top - 100);
}
function customSaveData(id) {
   if (id == "28")
      fnSaveTabDataFW('Personal Details', 'tab1MandFieldCheck()', 'fragment-28');
   else if (id == "29")
      fnSaveTabDataFW('Additional Details', 'tab2MandFieldCheck()', 'fragment-29');
   else if (id == "30")
      fnSaveTabDataFW('Communication Details', 'tab3MandFieldCheck()', 'fragment-30');
   else if (id == "31")
      fnSaveTabDataFW('Experience Details', 'tab4MandFieldCheck()', 'fragment-31');
   else if (id == "32")
      fnSaveTabDataFW('Test City Details', 'tab5MandFieldCheck()', 'fragment-32');
}
function tab1MandFieldCheck() {

   return true;
}
function tab2MandFieldCheck() {

   return true;
}
function tab3MandFieldCheck() {

   return true;
}
function tab4MandFieldCheck() {

   return true;
}
function tab5MandFieldCheck() {

   return true;
}
function doValidate(submitType, button_id) {
   var tab1_Validation = false; var tab2_Validation = false; var tab3_Validation = false; var tab4_Validation = false; var tab5_Validation = false; var tab6_Validation = false;
   var tabSavedList = ['txtTab1Saved', 'txtTab2Saved', 'txtTab3Saved', 'txtTab4Saved', 'txtTab5Saved'];
   var tabSavedListName = ['Personal Details', 'Additional Details', 'Communication Details', 'Qualification Details', 'Test City Details'];

   document.getElementById("finalSubmitCheck").value = "true";
   $('#txtTab1Saved,#txtTab2Saved,#txtTab3Saved,#txtTab4Saved,#txtTab5Saved').val("");

   tab1_Validation = eval('validatePersonalDetails()');
   if (tab1_Validation) {
      tab2_Validation = eval('validateAdditionalDetails()');
   }
   if (tab2_Validation) {
      tab3_Validation = eval('validateCommunicationDetails()');
   }
   if (tab3_Validation) {
      tab4_Validation = eval('validateAcademicsDetails()');
   }
   if (tab4_Validation) {
      tab5_Validation = eval('validateTestCenterDetails()');
   }
   if (tab5_Validation) {
      tab6_Validation = eval('validateDocuments()');
   }
   for (var i = 0; i < tabSavedList.length; i++) {
      if ($('#' + tabSavedList[i]).val() != "Saved") {
         alert_if('Please click Save & Next on ' + tabSavedListName[i] + ' tab before final submitting the Application form');
         return false;
      }
   }
   if (tab6_Validation) {
      // if (document.getElementById("payment_mode").value == '') {
      //    drop_radio_if('payment_mode', "Please choose your payment mode");
      //    validate = "false";
      //    return false;
      // } else {
      //    input_else('payment_mode');
      // }
      if (document.getElementById("payment_mode").value == 'Challan') {
         if (document.getElementById("txtTransactionNum").value == '') {
            input_if('txtTransactionNum', "Please Enter Transaction Number.");
            validate = "false";
            return false;
         } else {
            input_else('txtTransactionNum');
         }
         var stringToSplit = document.getElementById("txtFilePath").value;
         var separator = '||';
         var uploadCheck31 = splituploadDocsString(stringToSplit, separator, 'txtTransactionReceipt');
         if (uploadCheck31 == 0) {
            alert_if("Please Upload your Transaction Receipt.");
            validate = false;
            return false;
         }
      }
      if (editWindowCheckFlag) {
         if (document.getElementById("editCheckbox").checked == false) {
            drop_check_if('editCheckbox', "Please accept I hereby declare that all the above details are correct and I wish to update them in my application form.");
            validate = "false";
            return false;
         } else {
            input_else('acceptanceCHK2');
         }
      }
      // if (document.getElementById("acceptanceCHK2").checked == false || document.getElementById("acceptanceCHK3").checked == false || document.getElementById("acceptanceCHK4").checked == false || document.getElementById("acceptanceCHK5").checked == false || document.getElementById("acceptanceCHK6").checked == false || document.getElementById("acceptanceCHK7").checked == false || document.getElementById("acceptanceCHK12").checked == false || document.getElementById("acceptanceCHK8").checked == false || document.getElementById("acceptanceCHK9").checked == false || document.getElementById("acceptanceCHK10").checked == false || document.getElementById("acceptanceCHK11").checked == false) {
      if (document.getElementById("acceptanceCHK2").checked == false || document.getElementById("acceptanceCHK3").checked == false || document.getElementById("acceptanceCHK6").checked == false || document.getElementById("acceptanceCHK7").checked == false || document.getElementById("acceptanceCHK12").checked == false || document.getElementById("acceptanceCHK8").checked == false || document.getElementById("acceptanceCHK9").checked == false || document.getElementById("acceptanceCHK11").checked == false || document.getElementById("acceptanceCHK10").checked == false || document.getElementById("acceptanceCHKPhoto").checked == false) {
         drop_check_if('acceptanceCHK2', "Please accept all declarations.");
         validate = "false";
         return false;
      } else {
         input_else('acceptanceCHK2');
      }
      if (checkAge() == false) {
         alert_if("You are not eligible to fill this form.");
         validate = "false";
         return false;
      }
      if (freezeForm("id") == false) {
         validate = "false"; return false;
      }
      eval('saveData(submitType,button_id)');
   }
}
function saveData(submitType, button_id) {
   setFeeWithRespectiveCourse();
   if ($('#txt_Amount').val() == 0) {
      $('#payment_mode').val("offline");
      $('#paymentGatewayType').val('offline');
      $('#app_status').val("SubmittedOffline");
   } else {
      $('#app_status').val("Submitted");
	  //$('#txtCandSubDateTime').val(new Date());
   }
   
   document.getElementById("additional_info4").value = document.getElementById("txtAppName").value;
   document.getElementById("additional_info3").value = document.getElementById("app_seq_no").value;
   document.getElementById("additional_info5").value = document.getElementById("txtMobileNo").value;
   document.getElementById("additional_info6").value = document.getElementById("txtEmail").value;
   
   document.getElementById('billing_cust_name').value = document.getElementById('txtAppName').value;
   document.getElementById('billing_cust_address').value = "India";
   document.getElementById('billing_cust_city').value = "Indian City";
   document.getElementById('billing_cust_state').value = "Indian State";
   document.getElementById('billing_zip_code').value = "Indian zip code";
   document.getElementById('billing_cust_tel').value = document.getElementById('txtMobileNo').value;
   document.getElementById('OtherDetails').value = document.getElementById('app_seq_no').value + " " + document.getElementById('txtAppName').value + " Land Records 2023";
   document.getElementById('billing_cust_email').value = document.getElementById('txtEmail').value;

   if (document.getElementById("adminFlag").value != "Y") {
      eval(validateIonCaptcha("submitForm", "Submit"));
   } else if (document.getElementById("adminFlag").value == "Y") {
      eval(validateIonCaptcha("saveFormData", "Submit"));
   }
   else if (document.getElementById("isAdminEdit").value == "Y") {
      eval(validateIonCaptcha("submitForm", "Submit"));
   } else if (document.getElementById("isAdminEdit").value != "Y") {
      eval(validateIonCaptcha("saveFormData", "Submit"));
   } else {
      eval(validateIonCaptcha("saveFormData", "Submit"));
   }
}

function CheckforOTP1(){
   var checkreg=genericRegValidation1();
   if(checkreg){CheckforOTP();}
}
/*Must have functions*//*Registraiton Page*/
function genericRegValidation() {
   if ($('#txtAppFirstName').val() != "") {
      $('#txtAppName').val($('#txtAppFirstName').val());
      if ($('#txtAppMiddleName').val() != "") {
         $('#txtAppName').val($('#txtAppFirstName').val() + " " + $('#txtAppMiddleName').val());
      }
      if ($('#txtAppLastName').val() != "") {
         $('#txtAppName').val(($('#txtAppFirstName').val() + " " + $('#txtAppMiddleName').val() + " " + $('#txtAppLastName').val()).replaceAll("  ", " "));
      }
   }
   if ($('#txtAppFirstName').val() == "") {
      input_if('txtAppFirstName', 'Please enter Candidate First Name / उमेदवाराचे पहिले नाव ');
      validate = false;
      return false;
   } else {
      input_else('txtAppFirstName');
   }
   if ($('#txtAppMiddleName').val() == "") {
      input_if('txtAppMiddleName', 'Please enter Candidate Middle Name / उमेदवाराचे मधले नाव ');
      validate = false;
      return false;
   } else {
      input_else('txtAppMiddleName');
   }
   if ($('#txtAppLastName').val() == "") {
      input_if('txtAppLastName', 'Please enter Candidate Last Name / उमेदवाराचे आडनाव');
      validate = false;
      return false;
   } else {
      input_else('txtAppLastName');
   }
   $('#txtAppName').val($('#txtAppName').val().toUpperCase());
   if ($('#txtNameChanged').val() == "") {
      input_if('txtNameChanged', 'Please select Have you ever changed your name? / तुमच्या नावात बदल झाला आहे का? ');
      validate = false;
      return false;
   } else {
      input_else('txtNameChanged');
   }
   if ($('#txtNameChanged').val() == "Yes") {
      if ($('#txtAppChangedName').val() == "") {
         input_if('txtAppChangedName', 'Please enter New Name / Changed Name / नवीन नाव / बदललेले नाव.');
         validate = false;
         return false;
      } else {
         input_else('txtAppChangedName');
      }
      if ($('#txtAppChangedName').val() == $('#txtAppFirstName').val()) {
         input_if('txtAppChangedName', 'New Name / Changed Name / नवीन नाव / बदललेले नाव  can not be same as Candidate First Name');
         validate = false;
         return false;
      } else {
         input_else('txtAppChangedName');
      }
   }
   if ($('#appDob').val() == "") {
      Dob_if('appDob', 'Please select Date of Birth / जन्मतारीख. ');
      validate = false;
      return false;
   } else {
      Dob_else('appDob');
   }
   if ($('#txtGender').val() == "") {
      drop_select_if('Gender', 'Please select Gender / लिंग .');
      validate = false;
      return false;
   } else {
      input_else('Gender');
   }
   // if ($('#txtTestCity1').val() == "") {
      // drop_select_if('txtTestCity1', 'Please select Test Center City Preference 1.');
      // validate = false;
      // return false;
   // } else {
      // input_else('txtTestCity1');
   // }if ($('#txtTestCity2').val() == "") {
      // drop_select_if('txtTestCity2', 'Please select Test Center City Preference 2.');
      // validate = false;
      // return false;
   // } else {
      // input_else('txtTestCenter2');
   // }if ($('#txtTestCity3').val() == "") {
      // drop_select_if('txtTestCity3', 'Please select Test Center City Preference 3.');
      // validate = false;
      // return false;
   // } else {
      // input_else('txtTestCity2');
   // }
   // if (document.getElementById("txtCountry1").value == 'India') {
      if (document.getElementById("txtCountryCode").value == '') {
         input_if('txtCountryCode', "Please enter Code.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if ((document.getElementById("txtMobileNo").value == '') || (document.getElementById("txtMobileNo").value == 'Mobile No.')) {
         input_if('txtMobileNo', "Please enter Mobile Number / मोबाईल नंबर.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      if (validateMobileNoIndia() == false) {
         validate = false;
         return false;
      }
      if (document.getElementById("txtConfCountryCode").value == '') {
         input_if('txtConfCountryCode', "Please enter Confirm Code.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if (document.getElementById("txtCountryCode").value != document.getElementById("txtConfCountryCode").value) {
         input_if('txtConfCountryCode', "Country Code for Mobile Number and Confirm Mobile Number should be same.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if ((document.getElementById("txtGetCnfMobileNo").value == '') || (document.getElementById("txtGetCnfMobileNo").value == 'Mobile No.')) {
         input_if('txtGetCnfMobileNo', "Please enter Confirm Mobile Number / मोबाईल क्रमांकाची पुष्टी करा.");
         validate = false;
         return false;
      }
      if (document.getElementById("txtMobileNo").value != document.getElementById("txtGetCnfMobileNo").value) {
         input_if('txtGetCnfMobileNo', "The Confirm Mobile Number does not match with Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtGetCnfMobileNo');
      }
   // } 
   
   if (document.getElementById("txtCountry1").value == 'Others') {
      if (document.getElementById("txtCountryCode").value == 'Country Code' || document.getElementById("txtCountryCode").value == '') {
         input_if('txtCountryCode', "Please enter Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if (Number(document.getElementById("txtCountryCode").value) == 91) {
         input_if('txtCountryCode', "This country code is for India, Please enter different Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtCountryCode").value;
      if (!(mobile.match(numbers))) {
         input_if('txtCountryCode', "Please enter a valid Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if (Number(document.getElementById("txtCountryCode").value) == 0) {

         input_if('txtCountryCode', "Please enter a valid Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if ((document.getElementById("txtMobileNo").value == '') || (document.getElementById("txtMobileNo").value == 'Mobile No.')) {
         input_if('txtMobileNo', "Please enter Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtMobileNo").value;
      var position = mobile.indexOf('0');
      if (position == 0) {
         input_if('txtMobileNo', "Mobile number cannot start with zero. Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      if (!(mobile.match(numbers))) {
         input_if('txtMobileNo', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      if (document.getElementById("txtMobileNo").value != '') {
         if ((document.getElementById("txtMobileNo").value.length < 6) || (document.getElementById("txtMobileNo").value.length > 18)) {

            input_if('txtMobileNo', "Please enter a valid Mobile Number.");
            validate = false;
            return false;
         } else {
            input_else('txtMobileNo');
         }
      }
      if (document.getElementById("txtConfCountryCode").value == 'Country Code' || document.getElementById("txtConfCountryCode").value == '') {
         input_if('txtConfCountryCode', "Please enter Country Code for Confirm Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtConfCountryCode").value;

      if (!(mobile.match(numbers))) {
         input_if('txtConfCountryCode', "Please enter a valid Confirm Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if (document.getElementById("txtCountryCode").value != document.getElementById("txtConfCountryCode").value) {
         input_if('txtConfCountryCode', "Country Code for Mobile Number and Confirm Mobile Number should be same.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if ((document.getElementById("txtGetCnfMobileNo").value == '') || (document.getElementById("txtGetCnfMobileNo").value == 'Mobile No.')) {
         input_if('txtGetCnfMobileNo', "Please enter Confirm Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtGetCnfMobileNo');
      }
      if ((document.getElementById("txtCountryCode").value != document.getElementById("txtConfCountryCode").value) || (document.getElementById("txtMobileNo").value != document.getElementById("txtGetCnfMobileNo").value)) {
         input_if('txtGetCnfMobileNo', "The Confirm Mobile Number does not match with Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtGetCnfMobileNo');
      }
   }
   //Alternate Mob Number
   if ($('#txtAltMobile').val() != '') {
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtAltMobile").value;
      var position = mobile.indexOf('0');
      if (position == 0) {
         input_if('txtAltMobile', "Mobile number cannot start with zero. Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      var num2 = document.getElementById("txtAltMobile").value;
      if ((num2.charAt(0) < 6)) {
         input_if('txtAltMobile', "Mobile Number should start form 6,7,8,9");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      if (!(mobile.match(numbers))) {
         input_if('txtAltMobile', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      if ((document.getElementById("txtAltMobile").value.length < 10) || (document.getElementById("txtAltMobile").value.length > 10)) {
         input_if('txtAltMobile', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
   }
   //Email
   if ($('#txtEmail').val() == "") {
      input_if('txtEmail', 'Please enter Email Address / ई - मेल आयडी ');
      validate = false;
      return false;
   } else {
      input_else('txtEmail');
   }
   if (document.getElementById("txtEmail").value != '') {
      if (!validateEmail(document.getElementById('txtEmail').value, false)) {
         input_if('txtEmail', "The Email Address format is invalid. The valid Email Address format is name@org.com or name@org.co.in");
         validate = false;
         return false;
      } else {
         input_else('txtEmail');
      }
   }
   if (document.getElementById("txtConfirmEmail").value == '') {
      input_if('txtConfirmEmail', "Please enter Confirm Email Address / ईमेल आयडीची पुष्टी करा .");
      validate = false;
      return false;
   } else {
      input_else('txtConfirmEmail');
   }
   if (document.getElementById("txtConfirmEmail").value != document.getElementById("txtEmail").value) {
      input_if('txtConfirmEmail', "The Confirm Email Address does not match with Email Address.");
      validate = false;
      return false;
   } else {
      input_else('txtConfirmEmail');
   }
   
   if (document.getElementById("txtMatricRollNo").value == '') {
      input_if('txtMatricRollNo', "Please enter Matriculation Roll/Seat Number / माध्यमिक शालांत परीक्षा आसन  क्रमांक.");
      validate = false;
      return false;
   } else {
      input_else('txtMatricRollNo');
   }
   if ($('#txt10thYOP').val() == "") {
      Dob_if('txt10thYOP', 'Please select Matriculation Year of Passing / 10 उत्तीर्ण होण्याचे वर्ष.');
      validate = false;
      return false;
   } else {
      Dob_else('txt10thYOP');
   }
   
   if ($("#txtTestCity1").val() == '') {
      drop_select_if('txtTestCity1', "Please select Exam Centre choice Number 1 / परिक्षा केंद्र पसंती क्रम १");
      return false;
   } else { input_else('txtTestCity1'); }
   if ($("#txtTestCity2").val() == '') {
      drop_select_if('txtTestCity2', "Please select Exam Centre choice Number 2 / परिक्षा केंद्र पसंती क्रम २");
      return false;
   } else { input_else('txtTestCity2'); }
   if ($("#txtTestCity3").val() == '') {
      drop_select_if('txtTestCity3', "Please select Exam Centre choice Number 3 / परिक्षा केंद्र पसंती क्रम ३");
      return false;
   } else { input_else('txtTestCity3'); }
   if (document.getElementById("acceptanceCity").checked == false){
      drop_check_if('acceptanceCity', "Please check the Test Center District Preference related note.");
      validate = "false";
      return false;
   } else {
      input_else('acceptanceCity');
   }
   if (document.getElementById("acceptanceCHK").checked == false) {
      input_if('acceptanceCHK', "Please select the I Agree check box.");
      validate = false;
      return false;
   } else {
      validate = true;
   }
}

function genericRegValidation1() {
   if ($('#txtAppFirstName').val() != "") {
      $('#txtAppName').val($('#txtAppFirstName').val());
      if ($('#txtAppMiddleName').val() != "") {
         $('#txtAppName').val($('#txtAppFirstName').val() + " " + $('#txtAppMiddleName').val());
      }
      if ($('#txtAppLastName').val() != "") {
         $('#txtAppName').val(($('#txtAppFirstName').val() + " " + $('#txtAppMiddleName').val() + " " + $('#txtAppLastName').val()).replaceAll("  ", " "));
      }
   }
   if ($('#txtAppFirstName').val() == "") {
      input_if('txtAppFirstName', 'Please enter Candidate First Name / उमेदवाराचे पहिले नाव ');
      validate = false;
      return false;
   } else {
      input_else('txtAppFirstName');
   }
   if ($('#txtAppMiddleName').val() == "") {
      input_if('txtAppMiddleName', 'Please enter Candidate Middle Name / उमेदवाराचे मधले नाव ');
      validate = false;
      return false;
   } else {
      input_else('txtAppMiddleName');
   }
   if ($('#txtAppLastName').val() == "") {
      input_if('txtAppLastName', 'Please enter Candidate Last Name / उमेदवाराचे आडनाव');
      validate = false;
      return false;
   } else {
      input_else('txtAppLastName');
   }
   $('#txtAppName').val($('#txtAppName').val().toUpperCase());
   if ($('#txtNameChanged').val() == "") {
      input_if('txtNameChanged', 'Please select Have you ever changed Name? / तुम्ही तुमचे नाव कधी बदलले आहे का? ');
      validate = false;
      return false;
   } else {
      input_else('txtNameChanged');
   }
   if ($('#txtNameChanged').val() == "Yes") {
      if ($('#txtAppChangedName').val() == "") {
         input_if('txtAppChangedName', 'Please enter New Name / Changed Name / नवीन नाव / बदललेले नाव ');
         validate = false;
         return false;
      } else {
         input_else('txtAppChangedName');
      }
      if ($('#txtAppChangedName').val() == $('#txtAppFirstName').val()) {
         input_if('txtAppChangedName', 'New Name / Changed Name can not be same as Candidate First Name');
         validate = false;
         return false;
      } else {
         input_else('txtAppChangedName');
      }
   }
   if ($('#appDob').val() == "") {
      Dob_if('appDob', 'Please select Date of Birth / जन्मतारीख ');
      validate = false;
      return false;
   } else {
      Dob_else('appDob');
   }
   if ($('#Gender').val() == "") {
      drop_select_if('Gender', 'Please select Gender / लिंग ');
      validate = false;
      return false;
   } else {
      input_else('Gender');
   }
   // if ($('#txtTestCenter1').val() == "") {
      // drop_select_if('txtTestCenter1', 'Please select Test Center City Preference 1.');
      // validate = false;
      // return false;
   // } else {
      // input_else('txtTestCenter1');
   // }if ($('#txtTestCenter2').val() == "") {
      // drop_select_if('txtTestCenter2', 'Please select Test Center City Preference 2.');
      // validate = false;
      // return false;
   // } else {
      // input_else('txtTestCenter2');
   // }if ($('#txtTestCenter3').val() == "") {
      // drop_select_if('txtTestCenter3', 'Please select Test Center City Preference 3.');
      // validate = false;
      // return false;
   // } else {
      // input_else('txtTestCenter3');
   // }
   // if (document.getElementById("txtCountry1").value == 'India') {
      if (document.getElementById("txtCountryCode").value == '') {
         input_if('txtCountryCode', "Please enter Code.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if ((document.getElementById("txtMobileNo").value == '') || (document.getElementById("txtMobileNo").value == 'Mobile No.')) {
         input_if('txtMobileNo', "Please enter Mobile Number / मोबाईल नंबर.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      if (validateMobileNoIndia() == false) {
         validate = false;
         return false;
      }
      if (document.getElementById("txtConfCountryCode").value == '') {
         input_if('txtConfCountryCode', "Please enter Confirm Code.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if (document.getElementById("txtCountryCode").value != document.getElementById("txtConfCountryCode").value) {
         input_if('txtConfCountryCode', "Country Code for Mobile Number and Confirm Mobile Number should be same.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if ((document.getElementById("txtGetCnfMobileNo").value == '') || (document.getElementById("txtGetCnfMobileNo").value == 'Mobile No.')) {
         input_if('txtGetCnfMobileNo', "Please enter Confirm Mobile Number / मोबाईल क्रमांकाची पुष्टी करा.");
         validate = false;
         return false;
      }
      if (document.getElementById("txtMobileNo").value != document.getElementById("txtGetCnfMobileNo").value) {
         input_if('txtGetCnfMobileNo', "The Confirm Mobile Number does not match with Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtGetCnfMobileNo');
      }
   // } 
   
   if (document.getElementById("txtCountry1").value == 'Others') {
      if (document.getElementById("txtCountryCode").value == 'Country Code' || document.getElementById("txtCountryCode").value == '') {
         input_if('txtCountryCode', "Please enter Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if (Number(document.getElementById("txtCountryCode").value) == 91) {
         input_if('txtCountryCode', "This country code is for India, Please enter different Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtCountryCode").value;
      if (!(mobile.match(numbers))) {
         input_if('txtCountryCode', "Please enter a valid Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if (Number(document.getElementById("txtCountryCode").value) == 0) {

         input_if('txtCountryCode', "Please enter a valid Country Code for Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtCountryCode');
      }
      if ((document.getElementById("txtMobileNo").value == '') || (document.getElementById("txtMobileNo").value == 'Mobile No.')) {
         input_if('txtMobileNo', "Please enter Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtMobileNo").value;
      var position = mobile.indexOf('0');
      if (position == 0) {
         input_if('txtMobileNo', "Mobile number cannot start with zero. Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      if (!(mobile.match(numbers))) {
         input_if('txtMobileNo', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtMobileNo');
      }
      if (document.getElementById("txtMobileNo").value != '') {
         if ((document.getElementById("txtMobileNo").value.length < 6) || (document.getElementById("txtMobileNo").value.length > 18)) {

            input_if('txtMobileNo', "Please enter a valid Mobile Number.");
            validate = false;
            return false;
         } else {
            input_else('txtMobileNo');
         }
      }
      if (document.getElementById("txtConfCountryCode").value == 'Country Code' || document.getElementById("txtConfCountryCode").value == '') {
         input_if('txtConfCountryCode', "Please enter Country Code for Confirm Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtConfCountryCode").value;

      if (!(mobile.match(numbers))) {
         input_if('txtConfCountryCode', "Please enter a valid Confirm Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if (document.getElementById("txtCountryCode").value != document.getElementById("txtConfCountryCode").value) {
         input_if('txtConfCountryCode', "Country Code for Mobile Number and Confirm Mobile Number should be same.");
         validate = false;
         return false;
      } else {
         input_else('txtConfCountryCode');
      }
      if ((document.getElementById("txtGetCnfMobileNo").value == '') || (document.getElementById("txtGetCnfMobileNo").value == 'Mobile No.')) {
         input_if('txtGetCnfMobileNo', "Please enter Confirm Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtGetCnfMobileNo');
      }
      if ((document.getElementById("txtCountryCode").value != document.getElementById("txtConfCountryCode").value) || (document.getElementById("txtMobileNo").value != document.getElementById("txtGetCnfMobileNo").value)) {
         input_if('txtGetCnfMobileNo', "The Confirm Mobile Number does not match with Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtGetCnfMobileNo');
      }
   }
   //Alternate Mob Number
   if ($('#txtAltMobile').val() != '') {
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtAltMobile").value;
      var position = mobile.indexOf('0');
      if (position == 0) {
         input_if('txtAltMobile', "Mobile number cannot start with zero. Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      var num2 = document.getElementById("txtAltMobile").value;
      if ((num2.charAt(0) < 6)) {
         input_if('txtAltMobile', "Mobile Number should start form 6,7,8,9");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      if (!(mobile.match(numbers))) {
         input_if('txtAltMobile', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      if ((document.getElementById("txtAltMobile").value.length < 10) || (document.getElementById("txtAltMobile").value.length > 10)) {
         input_if('txtAltMobile', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
   }
   //Email
   if ($('#txtEmail').val() == "") {
      input_if('txtEmail', 'Please enter Email Address / ई - मेल आयडी');
      validate = false;
      return false;
   } else {
      input_else('txtEmail');
   }
   if (document.getElementById("txtEmail").value != '') {
      if (!validateEmail(document.getElementById('txtEmail').value, false)) {
         input_if('txtEmail', "The Email Address format is invalid. The valid Email Address format is name@org.com or name@org.co.in");
         validate = false;
         return false;
      } else {
         input_else('txtEmail');
      }
   }
   if (document.getElementById("txtConfirmEmail").value == '') {
      input_if('txtConfirmEmail', "Please enter Confirm Email Address / ईमेल आयडीची पुष्टी करा .");
      validate = false;
      return false;
   } else {
      input_else('txtConfirmEmail');
   }
   if (document.getElementById("txtConfirmEmail").value != document.getElementById("txtEmail").value) {
      input_if('txtConfirmEmail', "The Confirm Email Address does not match with Email Address.");
      validate = false;
      return false;
   } else {
      input_else('txtConfirmEmail');
   }
   
   if (document.getElementById("txtMatricRollNo").value == '') {
      input_if('txtMatricRollNo', "Please enter Matriculation Roll/Seat Number / माध्यमिक शालांत परीक्षा आसन  क्रमांक.");
      validate = false;
      return false;
   } else {
      input_else('txtMatricRollNo');
   }
   if ($('#txt10thYOP').val() == "") {
      Dob_if('txt10thYOP', 'Please select Matriculation Year of Passing / 10 उत्तीर्ण होण्याचे वर्ष.');
      validate = false;
      return false;
   } else {
      Dob_else('txt10thYOP');
   }
    if ($("#txtTestCity1").val() == '') {
      drop_select_if('txtTestCity1', "Please select Exam Centre choice Number 1 / परिक्षा केंद्र पसंती क्रम १");
      return false;
   } else { input_else('txtTestCity1'); }
   if ($("#txtTestCity2").val() == '') {
      drop_select_if('txtTestCity2', "Please select Exam Centre choice Number 2 / परिक्षा केंद्र पसंती क्रम २");
      return false;
   } else { input_else('txtTestCity2'); }
   if ($("#txtTestCity3").val() == '') {
      drop_select_if('txtTestCity3', "Please select Exam Centre choice Number 3 / परिक्षा केंद्र पसंती क्रम ३");
      return false;
   } else { input_else('txtTestCity3'); }
   if (document.getElementById("acceptanceCity").checked == false) {
      drop_check_if('acceptanceCity', "Please check the Test Center District Preference related note.");
      validate = "false";
      return false;
   } else {
      input_else('acceptanceCity');
   }
   
   // if (document.getElementById("acceptanceCHK").checked == false) {
      // input_if('acceptanceCHK', "Please select the I Agree check box.");
      // validate = false;
      // return false;
   // } else {
      // validate = true;
   // }
   
   return true;
}


function validateRegistration() {
   trimSpacesFromAllTextBox();
   genericRegValidation();
   if (validate) {
      if ($('#txtOtpStatus').val() == "yes") {
         if (($('#txtEmail').val() === $('#txtOtpStatusEmail').val()) && ($('#txtMobileNo').val() == $('#txtOtpStatusMobile').val())) {
            $('.confirmReg_subtitle').html(" The information once submitted can not be modified. Click on 'OK' if you have verified the information to be correct and to submit else click 'Cancel' to review again and then to Submit. / एकदा सबमिट केलेल्या माहितीमध्ये बदल करता येणार नाही. जर तुम्ही माहिती बरोबर असल्याचे सत्यापित केले असेल आणि सबमिट करण्यासाठी 'ओके' वर क्लिक करा अन्यथा पुन्हा पुनरावलोकन करण्यासाठी 'रद्द करा' वर क्लिक करा आणि नंतर योग्य त्या दुरुस्तीसह सबमिट करा.");
            $('#confirm-reg-sub').addClass('fadeIn').fadeIn();
            $('#confirm-reg-sub').removeClass('fade');
         } else {
            input_if('SendOTP', "Please enter same Email/ Mobile Number which was used during OTP validation.");
            validate = false;
            return false;
         }
      } else {
         input_if('SendOTP', "Please validate OTP.");
         validate = false;
         return false;
      }
   }
}
function fnSubmitRegistration() {
   $('#confirm-reg-sub').addClass('fade').fadeOut();
   $('#confirm-reg-sub').removeClass('fadeIn');
   if (validate) {
      document.getElementById('txtAppName').value = document.getElementById('txtAppName').value.toUpperCase();
      document.getElementById("app_status").value = 'Registration';
      var submitType = 'SAVE_REGISTRATION_DATA';
      var button_id = 'submitRegistration';
      eval(validateIonCaptcha(submitType, button_id));// Normal Submit
      // eval(validateIonCaptchaConsent(submitType, button_id)); //Submit with consent
   } else {
      alert_if("You are already registered with same Matriculation Roll Number and Year of Passing.");
      validate = false;
      return false;
   }
}
function checkDuplicate() {
   var MatricRollNo = $("#txtMatricRollNo").val();
   var matricYOP = $("#txt10thYOP").val();
   var MobileNo = $("#txtMobileNo").val();
   if (MatricRollNo != null && MatricRollNo != "" && matricYOP != null && matricYOP != "" && MobileNo != null && MobileNo != "") {
      var params = [MatricRollNo, matricYOP, MobileNo];
      if (validateChkDuplicate(params) == false) {
         input_if('txtMatricRollNo', "You are already registered with same Matriculation Roll Number, Matriculation Year of Passing and Mobile Number.");
         $('#txtMatricRollNo,#txt10thYOP').val('');
         return false;
      } else {
         sendOTPSMS();
         return true;
      }
   }
}
function validateMobileNoIndia() { if ("Others" != $("#txtCountry1").val()) { if (document.getElementById("txtMobileNo").value.length < 10 || document.getElementById("txtMobileNo").value.length > 10) return input_if("txtMobileNo", "Please enter a valid Mobile Number."), validate = !1, !1; if (input_else("txtMobileNo"), validate = !0, "" == document.getElementById("txtMobileNo").value || "Mobile No." == document.getElementById("txtMobileNo").value) return input_if("txtMobileNo", "Please enter Mobile Number."), validate = !1, !1; input_else("txtMobileNo"), validate = !0; var e = document.getElementById("txtMobileNo").value; if (0 == e.indexOf("0")) return input_if("txtMobileNo", "Mobile number cannot start with zero. Please enter a valid Mobile Number."), validate = !1, !1; if (input_else("txtMobileNo"), validate = !0, document.getElementById("txtMobileNo").value.charAt(0) < 6) return input_if("txtMobileNo", "Mobile Number should start form 6,7,8,9"), validate = !1, !1; if (input_else("txtMobileNo"), validate = !0, !e.match(/^[0-9]+$/)) return input_if("txtMobileNo", "Please enter a valid Mobile Number."), validate = !1, !1; input_else("txtMobileNo"), validate = !0 } return !0 }
function CheckforOTP() { return "" == $("#txtCountry1").val() ? (alert("Please select Country."), !1) : "" == $("#txtEmail").val() || "" == $("#txtConfirmEmail").val() ? (input_if("txtConfirmEmail", "Please enter Email Address and Confirm Email Address for OTP"), !1) : "Others" == $("#txtCountry1").val() || "" != $("#txtMobileNo").val() && "" != $("#txtGetCnfMobileNo").val() ? void (1 == validateMobileNoIndia() && checkDuplicate()) : (alert("Please enter Mobile Number and Confirm Mobile Number for OTP"), !1) }
function CheckForCnfMob() { document.getElementById("txtMobileNo").value != document.getElementById("txtGetCnfMobileNo").value && (alert_if("The Confirm Mobile Number does not match with Mobile Number."), $("#txtGetCnfMobileNo").val("")) }
function CheckForCnfEmail() { document.getElementById("txtConfirmEmail").value != document.getElementById("txtEmail").value && (alert_if("The Confirm Email Address does not match with Email Address."), $("#txtConfirmEmail").val("")) }
function CheckForNameOnly(id) {
   var splitByDot = $('#' + id).val().split(".");
   var splitByDash = $('#' + id).val().split("'");
   if (splitByDot.length > 5 || splitByDash.length > 5) {
      alert_if("Please Enter Correct Name.");
      $('#' + id).val('');
   }
}
/*********************************OTP Validations starts**********************************************************/
function sendOTPSMS() {
   var functionName = 'OTPResponse'; var otpMobileNumber = document.getElementById('txtMobileNo').value; var otpEmail = document.getElementById('txtEmail').value;
   fnGenerateOTPBOTH(otpMobileNumber, otpEmail, functionName);
}
function OTPResponse(req) {
   var response = req.responseText; if (response == 'OTP000') { alert('Number has been validated.'); $("#SendOTP,#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").hide() }
   if (response == 'OTP002') {
      alert('Kindly use OTP received on your Mobile Number or Email Address.')
      $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
   }
   if (response == 'OTP001') {
      alert('Kindly use some other number as this number has already been used.')
      $("#SendOTP").show(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").hide()
   }
   if (response == 'OTP003') {
      alert('Kindly use OTP received on your Mobile Number or Email Address.')
      $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
   }
   if (response == 'OTP004') {
      alert('Please try again later.')
      $("#SendOTP").show(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").hide()
   }
   if (response == 'OTP005') {
      alert('Error occured while sending message.')
      $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
   }
   if (response == 'OTP006') {
      alert('OTP for your Mobile Number/Email Address has not been generated. Kindly use Send button to generate OTP')
      $("#ResendOTP").hide(); $("#SendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
   }
   if (response == 'OTP010') {
      alert('OTP has been regenerated and sent successfully.')
      $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
   }
   if (response == 'OTP011') {
      alert('Error occured while updating status of the OTP.')
      $("#SendOTP").show(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").hide()
   }
   if (response == 'OTP012') { alert('Wait for 5 min and try again.') }
   if (response == 'OTP013') { alert('Tried to validate OTP of a Mobile Number/Email for which OTP is not generated in the current session.') }
   if (response == 'OTP016') {
      alert('Kindly use OTP received on your Mobile Number or Email Address.')
      $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
   }
   if (response == 'OTP017') {
      alert('Kindly use OTP received on your Email.')
      $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
   }
}
function ResendOTPSMSsame() {
   var functionName = 'OTPResendResponse';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var otpEmail = document.getElementById('txtEmail').value;
   //fnResendOTP(otpMobileNumber, functionName)
   fnResendOTPBOTH(otpMobileNumber, otpEmail, functionName);
   //fnResendOTPBOTH(otpMobileNumber,otpEmail,statusShowFunctionName);
}
function OTPResendResponse(req) {
   var response = req.responseText; if (response == 'OTP003' || response == 'OTP005' || response == 'OTP010') {
      if (response == 'OTP003') {
         alert('OTP resent successfully. Kindly use OTP received on your Mobile Number or Email Address.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
      }
      if (response == 'OTP005') {
         alert('Error occured while resending message.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
      }
      if (response == 'OTP010') {
         alert('OTP has been regenerated and sent successfully.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
      }
   } else { OTPResponse(req) }
}
function ValidateOTPSMSsame() {
   var functionName = 'OTPValidateResponse';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var otpText = document.getElementById('txtOTP').value;
   var otpEmail = document.getElementById('txtEmail').value;
   //fnValidateOTP(otpMobileNumber, otpText, functionName)
   //fnValidateOTP(otpMobileNumber,otpText,functionName);
   fnValidateOTPBOTH(otpMobileNumber, otpEmail, otpText, functionName);
}
function OTPValidateResponse(req) {
   var response = req.responseText; validateOTPcheck = response; $('#txtOtpStatus').val('');
   if (req.status == 200 && req.readyState == 4) {
      if (response == 'OTP000') { alert('Number has been validated.'); $("#SendOTP,#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").hide() }
      if (response == 'OTP002') {
         alert('Kindly use OTP received on your Mobile Number or Email Address.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").show()
      }
      if (response == 'OTP001') {
         alert('Kindly use some other number as this number has already been used.')
         $("#SendOTP").show(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").hide()
      }
      if (response == 'OTP003') {
         alert('OTP resent successfully. Kindly use OTP received on your Mobile Number or Email Address.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").show()
      }
      if (response == 'OTP004') {
         alert('Please try again later.')
         $("#SendOTP").show(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").hide()
      }
      if (response == 'OTP005') {
         alert('Error occured while resending message.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").show()
      }
      if (response == 'OTP006') {
         alert('OTP for your mobile No. has not been generated. Kindly use Send button to generate OTP')
         $("#ResendOTP").hide(); $("#SendOTP,#ValidateOTP,#txtOTP,#OTPtext").show()
      }
      if (response == 'OTP007') {
         alert('Invalid OTP. Kindly verify OTP.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").show(); validate = !1
      }
      if (response == 'OTP008') {
         alert('OTP has expired. Kindly regenerate OTP.')
         $("#SendOTP").show(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").hide()
      }
      if (response == 'OTP009') {
         $('#txtEmail,#txtMobileNo,#txtGetCnfMobileNo,#txtConfirmEmail').attr("readonly", true);
         alert('OTP has been validated successfully.')
         $("#SendOTP,#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").hide(); $('#txtOtpStatus').val('yes'); $('#txtOtpStatusEmail').val($('#txtEmail').val()); $('#txtOtpStatusMobile').val($('#txtMobileNo').val())
      }
      if (response == 'OTP010') {
         alert('OTP has been regenerated and sent successfully.')
         $("#SendOTP").hide(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").show()
      }
      if (response == 'OTP011') {
         alert('Error occured while updating status of the OTP.')
         $("#SendOTP").show(); $("#ResendOTP,#ValidateOTP,#OTPtext,#txtOTP").hide()
      }
      if (response == 'OTP012') { alert('Wait for 5 min and try again.') }
      if (response == 'OTP013') { alert('Tried to validate OTP of a Mobile Number/Email for which OTP is not generated in the current session.') }
   }
}
/*********************************OTP Validations Ends***************************************************************************/
/*-------------------OTP functions-- diff------------------*/
function generateOtpToBoth() {
   if (validateMobileNoIndia()) {
      var SSCRoll = $("#txt10thRollNo").val();
      var SSCYoP = $("#txt10thYOP").val();
      if (SSCRoll != null && SSCRoll != "" && SSCYoP != null && SSCYoP != "") {
         var params = [SSCRoll, SSCYoP];
         if (validateChkDuplicate(params) == false) {
            input_if('txt10thRollNo', "You are already registered with same Matriculation Roll Number and Year of Passing.");
            $('#txt10thRollNo').val('');
            $('#txt10thYOP').val('');
            return false;
         } else {
            var functionName = 'OTPGenerateResponse1';
            var otpMobileNumber = document.getElementById('txtMobileNo').value;
            var otpEmail = document.getElementById('txtEmail').value;
            document.getElementById('SMSOREmail').value = "Both";
            fnGenerateOTPBOTHNew(otpMobileNumber, otpEmail, functionName, 'Both');
         }
      }
   }

}
function generateOtpToMobile() {
   var functionName = 'OTPGenerateResponse1';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var otpEmail = document.getElementById('txtEmail').value;
   document.getElementById('SMSOREmail').value = "SMS";
   fnGenerateOTPBOTHNew(otpMobileNumber, otpEmail, functionName, 'SMS');
}
function generateOtpToEmail() {
   var functionName = 'OTPGenerateResponse1';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var otpEmail = document.getElementById('txtEmail').value;
   document.getElementById('SMSOREmail').value = "Email";
   fnGenerateOTPBOTHNew(otpMobileNumber, otpEmail, functionName, 'Email');
}
function ValidateOTPSMS() {
   var functionName = 'OTPValidateResponse1';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var MobileOTPtext = document.getElementById('MobileOTPtext').value;
   var otpEmail = document.getElementById('txtEmail').value;
   document.getElementById('SMSOREmail').value = "SMS";
   fnValidateOTPBOTHNew(otpMobileNumber, otpEmail, MobileOTPtext, functionName, 'SMS');
}
function ValidateOTPEmail() {
   var functionName = 'OTPValidateResponse1';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var EmailOTPtext = document.getElementById('EmailOTPtext').value;
   var otpEmail = document.getElementById('txtEmail').value;
   document.getElementById('SMSOREmail').value = "Email";
   fnValidateOTPBOTHNew(otpMobileNumber, otpEmail, EmailOTPtext, functionName, 'Email');
}
function ResendOTPSMS() {
   var functionName = 'OTPResendResponse1';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var otpEmail = document.getElementById('txtEmail').value;
   document.getElementById('SMSOREmail').value = "SMS";
   fnResendOTPBOTHNew(otpMobileNumber, otpEmail, functionName, 'SMS');
}
function ResendOTPEmail() {
   var functionName = 'OTPResendResponse1';
   var otpMobileNumber = document.getElementById('txtMobileNo').value;
   var otpEmail = document.getElementById('txtEmail').value;
   document.getElementById('SMSOREmail').value = "Email";
   fnResendOTPBOTHNew(otpMobileNumber, otpEmail, functionName, 'Email');
}
function OTPGenerateResponse1(req) {
   var response = req.responseText; var SMSOREmail = document.getElementById('SMSOREmail').value; if (response == 'OTP000') {
      if (SMSOREmail == 'Both') {
         alert('OTP of your Mobile Number and Email ID is validated')
         $("#SendOTPtoBoth,#SendOTPMobile,#SendOTPEmail,#EmailOTPSection,#MobileOTPSection,#MobileOTPtext,#ValidateMobileOTP,#ResendMobileOTP,#EmailOTPtext,#ValidateEmailOTP,#ResendEmailOTP").hide()
      }
      if (SMSOREmail == 'SMS') {
         alert('OTP of your Mobile Number is validated.')
         $("#SendOTPMobile").hide(); $("#MobileOTPSection").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
      }
      if (SMSOREmail == 'Email') {
         alert('OTP of your Email ID is validated.')
         $("#EmailOTPSection").hide(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
   }
   if (response == 'OTP001') {
      if (SMSOREmail == 'Both') {
         alert('Kindly use some other Mobile Number/Email ID as these has been used already.')
         $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
      if (SMSOREmail == 'SMS') {
         alert('Kindly use some other Mobile Number as this Mobile Number has been used already.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('Kindly use some other email as this email has already been used.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
   }
   if (response == 'OTP002') {
      if (SMSOREmail == 'Both') {
         alert('Validation Pending .Kindly use OTP received on your Mobile Number and Email id.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'SMS') {
         alert('Validation Pending .Kindly use OTP received on your Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('Validation Pending .Kindly use OTP received on your Email id.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
   if (response == 'OTP003') {
      if (SMSOREmail == 'Both') {
         alert('Kindly use OTP received on your Mobile Number and Email id.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show(); $('#txtEmail').attr("readOnly", "readOnly"); $('#txtMobileNo').attr("readOnly", "readOnly"); $('#txtGetCnfMobileNo').attr("readOnly", "readOnly"); $('#txtConfirmEmail').attr("readOnly", "readOnly");
      }
      if (SMSOREmail == 'SMS') {
         alert('Kindly use OTP received on your Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') { alert('Kindly use OTP received on your Email id.'); $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show() }
   }
   if (response == 'OTP004') {
      alert('Please try again later.')
      if (SMSOREmail == 'Both') { $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
      if (SMSOREmail == 'SMS') { $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide() }
      if (SMSOREmail == 'Email') { $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
   }
   if (response == 'OTP005') {
      if (SMSOREmail == 'Both') {
         alert('Error occured while sending OTP to Mobile Number and Email ID.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'SMS') {
         alert('Error occured while sending OTP to Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('Error occured while sending OTP to Email Id.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
   if (response == 'OTP006') {
      if (SMSOREmail == 'Both') {
         alert('OTP has not been generated.Kindly use Generate Button.')
         $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
      if (SMSOREmail == 'SMS') {
         alert('OTP has not been generated.Kindly use Generate Button.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
      }
      if (SMSOREmail == 'Email') {
         alert('OTP has not been generated.Kindly use Generate Button.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
   }
   if (response == 'OTP010') {
      if (SMSOREmail == 'Both') {
         alert('OTP has been regenerated and sent successfully to Mobile Number/Email ID.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'SMS') {
         alert('OTP has been regenerated and sent successfully to Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('OTP has been regenerated and sent successfully to Mobile Number/Email ID.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
   if (response == 'OTP011') {
      alert('Error occured while updating status of the OTP.')
      if (SMSOREmail == 'Both') { $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
      if (SMSOREmail == 'SMS') { $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide() }
      if (SMSOREmail == 'Email') { $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
   }
   if (response == 'OTP012') { alert('Wait for 3 min and try again.') }
   if (response == 'OTP013') { alert('Tried to validate OTP for which OTP is not generated in the current session.') }
   if (response == 'OTP016') {
      if (SMSOREmail == 'Both') {
         alert('OTP sent to Mobile Number But not to Email ID .')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").show(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
      if (SMSOREmail == 'SMS') {
         alert('OTP sent to Mobile Number .')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
   }
   if (response == 'OTP017') {
      if (SMSOREmail == 'Both') {
         alert('OTP sent to Email ID  but not to Mobile Number.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").show(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'Email') { alert('OTP sent to Email ID.'); $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show() }
   }
}
var MobOTPStatus = false; var EmailOTPStatus = false;
function OTPValidateResponse1(req) {
   var response = req.responseText; var SMSOREmail = document.getElementById('SMSOREmail').value;
   if (req.status == 200 && req.readyState == 4) {
      if (response == 'OTP000') {
         if (SMSOREmail == 'Both') { alert('OTP of your Mobile Number and Email ID is validated'); $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
         if (SMSOREmail == 'SMS') {
            alert('OTP of your Mobile Number is validated.')
            $("#MobileOTPSection").hide(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
         }
         if (SMSOREmail == 'Email') {
            alert('OTP of your Email ID is validated.')
            $("#EmailOTPSection").hide(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
         }
      }
      if (response == 'OTP009') {
         if (SMSOREmail == 'SMS') {
            alert('OTP of Mobile Number has been validated successfully.')
            $("#MobileOTPSection").hide(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); MobOTPStatus = !0
         }
         if (SMSOREmail == 'Email') {
            alert('OTP of Email ID has been validated successfully.')
            $("#EmailOTPSection").hide(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide(); EmailOTPStatus = !0
         }
         $('#txtOtpStatusEmail').val($('#txtEmail').val()); $('#txtOtpStatusMobile').val($('#txtMobileNo').val()); if (MobOTPStatus == !0 && EmailOTPStatus == !0) { $('#txtOtpStatus').val('yes') }
      }
      if (response == 'OTP001') {
         if (SMSOREmail == 'Both') {
            alert('Kindly use some other Mobile Number/Email ID as these has been used already.')
            $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
         }
         if (SMSOREmail == 'SMS') {
            alert('Kindly use some other Mobile Number as this Mobile Number has been used already.')
            $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
         }
         if (SMSOREmail == 'Email') {
            alert('Kindly use some other email as this email has already been used.')
            $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
         }
      }
      if (response == 'OTP002') {
         if (SMSOREmail == 'Both') {
            alert('Validation Pending .Kindly use OTP received on your Mobile Number and Email id.')
            $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
         if (SMSOREmail == 'SMS') {
            alert('Validation Pending .Kindly use OTP received on your Mobile Number.')
            $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
         }
         if (SMSOREmail == 'Email') {
            alert('Validation Pending .Kindly use OTP received on your Email id.')
            $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
      }
      if (response == 'OTP003') {
         if (SMSOREmail == 'Both') {
            alert('OTP resent successfully.Kindly use OTP received on your Mobile Number and Email id.')
            $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
         if (SMSOREmail == 'SMS') {
            alert('OTP resent successfully.Kindly use OTP received on your Mobile Number.')
            $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
         }
         if (SMSOREmail == 'Email') {
            alert('OTP resent successfully.Kindly use OTP received on your Email id.')
            $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
      }
      if (response == 'OTP004') {
         alert('Please try again later.')
         if (SMSOREmail == 'Both') { $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
         if (SMSOREmail == 'SMS') { $("#MobileOTPSection").hide(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide() }
         if (SMSOREmail == 'Email') { $("#EmailOTPSection").hide(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
      }
      if (response == 'OTP005') {
         if (SMSOREmail == 'Both') {
            alert('Error occured while sending OTP to Mobile Number and Email ID.')
            $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
         if (SMSOREmail == 'SMS') {
            alert('Error occured while sending OTP to Mobile Number.')
            $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
         }
         if (SMSOREmail == 'Email') {
            alert('Error occured while sending OTP to Email Id.')
            $("#EmailOTPSection").hide(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
      }
      if (response == 'OTP006') {
         if (SMSOREmail == 'SMS') {
            alert('OTP has not been generated to Mobile Number.Kindly use Generate Button.')
            $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
         }
         if (SMSOREmail == 'Email') {
            alert('OTP has not been generated to Email ID.Kindly use Generate Button.')
            $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
         }
      }
      if (response == 'OTP007') {
         if (SMSOREmail == 'SMS') {
            alert('Invalid OTP. Kindly verify OTP.')
            $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#MobileOTPtext").val(''); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
         }
         if (SMSOREmail == 'Email') {
            alert('Invalid OTP. Kindly verify OTP.')
            $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#EmailOTPtext").val(''); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
      }
      if (response == 'OTP008') {
         if (SMSOREmail == 'SMS') {
            alert('OTP of Mobile Number has expired. Kindly regenerate OTP for Mobile Number.')
            $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
         }
         if (SMSOREmail == 'Email') {
            alert('OTP of Email ID has expired. Kindly regenerate OTP for Email ID.')
            $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
         }
      }
      if (response == 'OTP010') {
         if (SMSOREmail == 'Both') {
            alert('OTP has been regenerated and sent successfully to Mobile Number and Email ID.')
            $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
         if (SMSOREmail == 'SMS') {
            alert('OTP has been regenerated and sent successfully to Mobile Number.')
            $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
         }
         if (SMSOREmail == 'Email') {
            alert('OTP has been regenerated and sent successfully to Email ID.')
            $("#EmailOTPSection").hide(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
         }
      }
      if (response == 'OTP011') {
         alert('Error occured while updating status of the OTP.')
         if (SMSOREmail == 'Both') { $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
         if (SMSOREmail == 'SMS') { $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide() }
         if (SMSOREmail == 'Email') { $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
      }
      if (response == 'OTP012') { alert('Wait for 3 min and try again.') }
      if (response == 'OTP013') { alert('Tried to validate OTP for which OTP is not generated in the current session.') }
   }
}
function OTPResendResponse1(req) {
   var response = req.responseText; var SMSOREmail = document.getElementById('SMSOREmail').value; if (response == 'OTP000') {
      if (SMSOREmail == 'Both') {
         alert('OTP of your Mobile Number and Email ID is validated')
         $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
      if (SMSOREmail == 'SMS') {
         alert('OTP of your Mobile Number is validated.')
         $("#MobileOTPSection").hide(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
      }
      if (SMSOREmail == 'Email') {
         alert('OTP of your Email ID is validated.')
         $("#EmailOTPSection").hide(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
   }
   if (response == 'OTP001') {
      if (SMSOREmail == 'Both') {
         alert('Kindly use some other Mobile Number/Email ID as these has been used already.')
         $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
      if (SMSOREmail == 'SMS') {
         alert('Kindly use some other Mobile Number as this Mobile Number has been used already.')
         $("#MobileOTPSection").hide(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('Kindly use some other email as this email has already been used.')
         $("#EmailOTPSection").hide(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
   }
   if (response == 'OTP002') {
      if (SMSOREmail == 'Both') {
         alert('Validation Pending .Kindly use OTP received on your Mobile Number and Email id.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'SMS') {
         alert('Validation Pending .Kindly use OTP received on your Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('Validation Pending .Kindly use OTP received on your Email id.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
   if (response == 'OTP003') {
      if (SMSOREmail == 'Both') {
         alert('OTP resent successfully.Kindly use OTP received on your Mobile Number and Email id.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'SMS') {
         alert('OTP resent successfully.Kindly use OTP received on your Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('OTP resent successfully.Kindly use OTP received on your Email id.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
   if (response == 'OTP004') {
      alert('Please try again later.')
      if (SMSOREmail == 'Both') { $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
      if (SMSOREmail == 'SMS') { $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide() }
      if (SMSOREmail == 'Email') { $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
   }
   if (response == 'OTP005' || response == 'OTP018') {
      if (SMSOREmail == 'Both') {
         if (response == 'OTP005')
            alert('Error occured while resending OTP to Mobile Number /Email ID.'); else if (response == 'OTP018')
            alert('Previous OTP has expired .Error occured while sending regenerated OTP to Mobile Number /Email ID.'); $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'SMS') {
         if (response == 'OTP005')
            alert('Error occured while resending OTP message to Mobile Number.'); else if (response == 'OTP018')
            alert('Previous Mobile OTP has expired.Error occured while sending Regenerated OTP message to Mobile Number.'); $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         if (response == 'OTP005')
            alert('Error occured while resending OTP message to Email Id.'); else if (response == 'OTP018')
            alert('Previous OTP has expired.Error occured while sending Regenerated OTP to Email Id.'); $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
   if (response == 'OTP006') {
      if (SMSOREmail == 'SMS') {
         alert('OTP has not been generated TO mOBILE Number.Kindly use Generate Button.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide()
      }
      if (SMSOREmail == 'Email') {
         alert('OTP has not been generated to Email ID.Kindly use Generate Button.')
         $("#MobileOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide()
      }
   }
   if (response == 'OTP010') {
      if (SMSOREmail == 'Both') {
         alert('Previous OTP has expired.OTP has been regenerated and sent successfully to Mobile Number and Email ID.')
         $("#EmailOTPSection").show(); $("#MobileOTPSection").show(); $("#SendOTPtoBoth").hide(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
      if (SMSOREmail == 'SMS') {
         alert('Previous Mobile OTP has expired.OTP has been regenerated and sent successfully to Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
      if (SMSOREmail == 'Email') {
         alert('Previous Email OTP has expired.OTP has been regenerated and sent successfully to Email ID.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
   if (response == 'OTP011') {
      alert('Error occured while updating status of the OTP.')
      if (SMSOREmail == 'Both') { $("#EmailOTPSection").hide(); $("#MobileOTPSection").hide(); $("#SendOTPtoBoth").show(); $("#SendOTPMobile").hide(); $("#SendOTPEmail").hide(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
      if (SMSOREmail == 'SMS') { $("#MobileOTPSection").show(); $("#SendOTPMobile").show(); $("#MobileOTPtext").hide(); $("#ValidateMobileOTP").hide(); $("#ResendMobileOTP").hide() }
      if (SMSOREmail == 'Email') { $("#EmailOTPSection").show(); $("#SendOTPEmail").show(); $("#EmailOTPtext").hide(); $("#ValidateEmailOTP").hide(); $("#ResendEmailOTP").hide() }
   }
   if (response == 'OTP012') { alert('Wait for 3 min and try again.') }
   if (response == 'OTP013') { alert('Tried to validate OTP for which OTP is not generated in the current session.') }
   if (response == 'OTP016' || response == 'OTP014') {
      if (SMSOREmail == 'SMS') {
         if (response == 'OTP016')
            alert('OTP resent to Mobile Number .')
         else if (response == 'OTP014')
            alert('Previous OTP has expired.OTP has been regenerated and sent successfully to Mobile Number.')
         $("#MobileOTPSection").show(); $("#SendOTPMobile").hide(); $("#MobileOTPtext").show(); $("#ValidateMobileOTP").show(); $("#ResendMobileOTP").show()
      }
   }
   if (response == 'OTP017') {
      if (SMSOREmail == 'Email') {
         if (response == 'OTP016')
            alert('OTP resent to Email ID.')
         else if (response == 'OTP014')
            alert('Previous OTP has expired.OTP has been regenerated and sent successfully to Email ID.')
         $("#EmailOTPSection").show(); $("#SendOTPEmail").hide(); $("#EmailOTPtext").show(); $("#ValidateEmailOTP").show(); $("#ResendEmailOTP").show()
      }
   }
}
/*-------------------Diff OTP functions ends--------------------*/
var setTabNo = 0;
function validatePersonalDetails() {
   trimSpacesFromAllTextBox();
   if ($("#txtPostName").val() == '' && ConfigurationObj.PostName.split('~')[0] == 'YY') {
      drop_select_if('PostName', "Please Select Applying Post / पदाची निवड करा  under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('PostName');
   }
   if ($("#txtPostDistrict").val() == '') {
      drop_select_if('txtPostDistrict', "Please select the district for which you want to apply/तुम्हाला ज्या जिल्ह्यासाठी अर्ज करायचा आहे तो जिल्हा निवडा under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('txtPostDistrict');
   }
   var distPost=$("#txtPostDistrict").val();
   if (document.getElementById("acceptanceDist").checked == false) {
      drop_check_if('acceptanceDist', "Please select Are you sure that you want to apply for "+distPost+" district?");
      validate = "false";
      return false;
   } else {
      input_else('acceptanceDist');
   }
   if ($("#txtAppName").val() == '') {
      input_if('txtAppName', "Kindly Logout and login Again.");
      validate = false;
      return false;
   } else {
      input_else('txtAppName');
   }
   if ($("#txtMaritialStatus").val() == '' && ConfigurationObj.MaritialStatus.split('~')[0] == 'YY') {
      drop_select_if('MaritialStatus', "Please Select Marital Status/ वैवाहिक स्थिती  under Candidate Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('MaritialStatus');
   }
   if ($("#txtMaritialStatus").val() != 'Unmarried' && ConfigurationObj.MaritialStatus.split('~')[0] == 'YY') {
      // if ($("#txtMaritialDate").val() == '') {
         // Dob_if('txtMaritialDate', "Please Select Date of Marriage under Candidate Personal Details.");
         // validate = false;
         // return false;
      // } else {
         // Dob_else('txtMaritialDate');
      // }
      if ($("#txtNumberofChilds").val() == '') {
         drop_select_if('txtNumberofChilds', "Please Select Number of Children (Children born after 28/03/2005)/मुलांची संख्या (28/03/2005 नंतरची अपत्ये) under Candidate Personal Details.");
         validate = false;
         return false;
      } else {
         input_else('txtNumberofChilds');
      }
   }
   if (document.getElementById("txtNumberofChilds").value == 'More than 2') {
      if (document.getElementById("txtTwinChild").value == '') {
         drop_radio_if('txtTwinChild', "Please Select Whether second issue is twins? (दुसरी प्रसूतीत अपत्ये जुळे आहेत काय?)   under Candidate Personal Details.");
         validate = false;
         return false;
      } else {
         input_else('txtTwinChild');
      }
   }
   // if (document.getElementById("txtTwinChild").value == 'Yes') {
      // if ($("#txtLastBornDoB").val() == '') {
         // Dob_if('txtLastBornDoB', "Please Select Date of Birth of Last Born Child under Candidate Personal Details.");
         // validate = false;
         // return false;
      // } else {
         // Dob_else('txtLastBornDoB');
      // }
   // }
   if ($("#txtReligion").val() == '' && ConfigurationObj.Religion.split('~')[0] == 'YY') {
      drop_select_if('Religion', "Please Select Religion under Candidate Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('Religion');
   }
   if ($("#txtFatherName").val() == '' && ConfigurationObj.FatherName.split('~')[0] == 'YY') {
      input_if('txtFatherName', "Please enter Father's Name / वडिलांचे नाव  under Candidate Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('txtFatherName');
   }
   if ($("#txtMotherName").val() == '' && ConfigurationObj.MotherName.split('~')[0] == 'YY') {
      input_if('txtMotherName', "Please enter Mother's Name / आईचे नाव  under Candidate Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('txtMotherName');
   }
   if ($("#txtHusbandsName").val() == '' && ConfigurationObj.HusbandName.split('~')[0] == 'YY') {
      input_if('txtHusbandsName', "Please enter Husband's Name under Candidate Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('txtHusbandsName');
   }
   //Alternate Mob Number
   if ($('#txtAltMobile').val() != '') {
      var numbers = /^[0-9]+$/;
      var mobile = document.getElementById("txtAltMobile").value;
      var position = mobile.indexOf('0');
      if (position == 0) {
         input_if('txtAltMobile', "Mobile number cannot start with zero. Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      var num2 = document.getElementById("txtAltMobile").value;
      if ((num2.charAt(0) < 6)) {
         input_if('txtAltMobile', "Mobile Number should start form 6,7,8,9");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      if (!(mobile.match(numbers))) {
         input_if('txtAltMobile', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
      if ((document.getElementById("txtAltMobile").value.length < 10) || (document.getElementById("txtAltMobile").value.length > 10)) {
         input_if('txtAltMobile', "Please enter a valid Mobile Number.");
         validate = false;
         return false;
      } else {
         input_else('txtAltMobile');
      }
   }
   if ($("#txtPostCategory").val() == '' && ConfigurationObj.PostCategory.split('~')[0] == 'YY') {
      drop_select_if('PostCategory', "Please Select Post Category under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('PostCategory');
   }
    
   // if (document.getElementById("acceptancePost").checked == false && (document.getElementById("txtPostName").value!='Peon')) {
      // drop_check_if('acceptancePost', "Please check the post realated note to accept that you have read it.");
      // validate = "false";
      // return false;
   // } else {
      // input_else('acceptancePost');
   // }
   if ($("#txtPostCode").val() == '' && ConfigurationObj.PostCode.split('~')[0] == 'YY') {
      input_if('txtPostCode', "Please Select Post Code under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('txtPostCode');
   }
   if ($("#txtDeptName").val() == '' && ConfigurationObj.DeptName.split('~')[0] == 'YY') {
      input_if('txtDeptName', "Please Select Department Name under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('txtDeptName');
   }
   if ($("#txtAdvtNo").val() == '' && ConfigurationObj.AdvtNo.split('~')[0] == 'YY') {
      input_if('txtAdvtNo', "Please enter Advertisement Number under under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('txtAdvtNo');
   }
   if ($("#txtAdvtDate").val() == '' && ConfigurationObj.AdvtDate.split('~')[0] == 'YY') {
      input_if('txtAdvtDate', "Please enter Advertisement Date under under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('txtAdvtDate');
   }
   if ($("#txtCorrigendumDate").val() == '' && ConfigurationObj.CorrigendumDate.split('~')[0] == 'YY') {
      input_if('txtCorrigendumDate', "Please enter Corrigendum Date under under Post Details.");
      validate = false;
      return false;
   } else {
      input_else('txtCorrigendumDate');
   }
   if (document.getElementById("txtNationality").value == '') {
      drop_radio_if('txtNationality', "Please Select Nationality / राष्ट्रीयत्व under Candidate Domicile and Caste Details.");
      validate = false;
      return false;
   } else {
      input_else('txtNationality');
   }
   if ($("#txtNationality").val() == 'Others') {
      if ($("#txtONationality").val() == '') {
         drop_select_if('txtONationality', "Please Select Other Nationality under Candidate Domicile and Caste Details.");
         return false;
      } else {
         input_else('txtONationality');
      }
   }
   if (document.getElementById("txtNationality").value == 'Others') {
      $('#txtNationality').val('');
      removeCheck('txtNationality');
      drop_radio_if('txtNationality', "Please select Nationality As Indian under Candidate Domicile and Caste Details.");
      validate = false;
      return false;
   }
   if (document.getElementById("txtDomicile").value == '' && ConfigurationObj.DomcileDetailsReq.split('~')[0] == 'YY') {
      drop_radio_if('txtDomicile', "Please Select Are you domicile of Maharashtra? / तुम्ही महाराष्ट्र राज्याचा अधिवास धारण करता का?  under Candidate Domicile and Caste Details.");
      return false;
   } else {
      input_else('txtDomicile');
   }
   if ($("#txtDomicile").val() == "No") {
      if (document.getElementById("txtODomicileState").value == '') {
         drop_select_if('txtODomicileState', "Please Select Other Domicile State under Candidate Domicile and Caste Details.");
         return false;
      } else {
         input_else('txtODomicileState');
      }
   }
   if (document.getElementById("txtCategory").value == '' && ConfigurationObj.Category.split('~')[0] == 'YY') {
      drop_select_if('Category', "Please select Reservation Category / आरक्षण प्रवर्ग under Candidate Domicile and Caste Details.");

      return false;
   } else {
      input_else('Category');
   }
   if (document.getElementById("txt789thGrade").value == '' && $('#txtCategory').val() == "Schedule Tribe (ST)") {
      drop_select_if('txt789thGrade', "Please select Do you want to fill application form for PESA sector? / पेसा क्षेत्राकरिता अर्ज भरावयाचा आहे का ?  under Candidate Domicile and Caste Details.");
      return false;
   } else {
      input_else('txt789thGrade');
   }
   if (document.getElementById("txt789thGrade").value == 'Yes' && document.getElementById("txt789thper").value == '') {
      drop_select_if('txt789thper', "Please select Is the original residence of the candidate applying for PESA area in the scheduled area of ​​that district? / पेसा क्षेत्राकरिता अर्ज करणाऱ्या उमेदवाराचा मूळ रहिवास त्या जिल्ह्याच्या अनुसूचित क्षेत्रातील आहे का ? under Candidate Domicile and Caste Details.");
	  return false;
   } else {
      input_else('txt789thper');
   }
   if (document.getElementById("txtApplyCategory").value == '' && ConfigurationObj.ApplyCategory.split('~')[0] == 'YY') {
      drop_select_if('ApplyCategory', "Please select Caste in which you want to apply under Candidate Domicile and Caste Details.");

      return false;
   } else {
      input_else('ApplyCategory');
   }
   if (($('#txtCategory').val() != "Open") && ConfigurationObj.Category.split('~')[1] == 'YY') {
	   
	   if (document.getElementById("txtCertAuthority").value == '') {
         input_if('txtCertAuthority', "Please Enter Caste Caste Category Certificate Issuing Authority / जात प्रमाणपत्र निर्गमित करणाऱ्या कार्यालयाचे नाव   under Caste Certificate Details.");
         return false;
      } else {
         input_else('txtCertAuthority');
      }
	  
	  if (document.getElementById("txtCertIssueDate").value == '') {
         Dob_if('txtCertIssueDate', "Please Enter Caste Category Certificate Issue Date / जात प्रमाणपत्र निर्गमित करण्याची तारीख   under Caste Certificate Details.");

         return false;
      } else {
         Dob_else('txtCertIssueDate');
      }	
	   
	   if (document.getElementById("txtCertSerialNo").value == '') {
         input_if('txtCertSerialNo', "Please Enter Caste Category Certificate Serial Number / जात प्रमाणपत्र अनुक्रमांक  under Caste Certificate Details.");

         return false;
      } else {
         input_else('txtCertSerialNo');
      }
      
	  // if (document.getElementById("txtCertVal").value == '') {
         // Dob_if('txtCertVal', "Please Enter Caste Category Certificate Issue Date / जात प्रमाणपत्र वैधता  under Caste Certificate Details.");

         // return false;
      // } else {
         // Dob_else('txtCertVal');
      // }
      
   }
   // Are you domicile of punjab--------------
   if ($("#txtDomicile").val() == "Yes" && ConfigurationObj.DomcileDetailsReq.split('~')[1] == 'YY') {
      if (document.getElementById("txtDomicileAuthority").value == '') {
         input_if('txtDomicileAuthority', "Please Enter Domicile Certificate/birth certificate/school leaving Issuing Authority / अधिवास प्रमाणपत्र / जन्म दाखला / शाळा सोडल्याचा दाखला निर्गमित करणाऱ्या कार्यालय/संस्था चे   नाव under Domicile Certificate Details.");
         return false;
      } else {
         input_else('txtDomicileAuthority');
      }
      if (document.getElementById("txtDomicileIssueDate").value == '') {
         Dob_if('txtDomicileIssueDate', "Please Enter Domicile Certificate/Birth certificate/School leaving Issue Date / अधिवास प्रमाणपत्र / जन्म दाखला / शाळा सोडल्याचा दाखला निर्गमित करण्याची तारीख  under Domicile Certificate Details.");
         return false;
      } else {
         Dob_else('txtDomicileIssueDate');
      }
      if (document.getElementById("txtDomicileSerialNo").value == '') {
         input_if('txtDomicileSerialNo', "Please Enter Domicile Certificate/Birth certificate/School leaving Serial Number /अधिवास प्रमाणपत्र / जन्म दाखला / शाळा सोडल्याचा दाखला अनुक्रमांक   under Domicile Certificate Details.");

         return false;
      } else {
         input_else('txtDomicileSerialNo');
      }
   }
   if (document.getElementById("txtmarksIdentify").value == '' && ConfigurationObj.marksIdentify.split('~')[0] == 'YY') {
      input_if('txtmarksIdentify', "Please Enter Mark of Visible Identification / अर्जदाराच्या शरीरावरील दृश्यमान ओळखीची खुण under Identification Details.");
      return false;
   } else {
      input_else('txtmarksIdentify');
   }
   if ($("#txtPanCard").val() == '' && ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == "YY") {
      drop_radio_if('txtPanCard', "Please select Do you have Pan Card? / तुमच्याकडे पॅन कार्ड आहे का? under Identification Details.");
      return false;
   } else {
      input_else('txtPanCard');
   }
   if ($("#txtPanCard").val() == 'Yes') {
      if ($("#txtPanCardNo").val() == '') {
         input_if('txtPanCardNo', "Please Enter Pan Card Number / पॅन कार्ड क्रमांक under Identification Details.");
         return false;
      } else {
         input_else('txtPanCardNo');
      }
      if ($("#txtPanNameId").val() == '') {
         input_if('txtPanNameId', "Please Enter Name on Pan Card / पॅन कार्डवर नाव  under Identification Details.");
         return false;
      } else {
         input_else('txtPanNameId');
      }
   }
   if ($("#txtDrivingLicense").val() == '' && ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == "YY") {
      drop_radio_if('txtDrivingLicense', "Please select Do you have Driving License?  / तुमच्याकडे ड्रायव्हिंग लायसन्स आहे का?  under Identification Details.");
      return false;
   } else {
      input_else('txtDrivingLicense');
   }
   if ($("#txtDrivingLicense").val() == 'Yes') {
      if ($("#txtDrivingLNo").val() == '') {
         input_if('txtDrivingLNo', "Please Enter Driving License Number / ड्रायव्हिंग लायसन्स क्रमांक under Identification Details.");
         return false;
      } else {
         input_else('txtDrivingLNo');
      }
      if ($("#txtDrivingNameId").val() == '') {
         input_if('txtDrivingNameId', "Please Enter Name on Driving License / ड्रायव्हिंग लायसन्सवर नाव under Identification Details.");
         return false;
      } else {
         input_else('txtDrivingNameId');
      }
      if ($("#txtDrivingIssuingAuth").val() == '') {
         input_if('txtDrivingIssuingAuth', "Please Enter Issuing Authority / निर्गमित करणारे प्राधिकरण  under Identification Details.");
         return false;
      } else {
         input_else('txtDrivingIssuingAuth');
      }
      if ($("#txtDrivingIssueDate").val() == '') {
         Dob_if('txtDrivingIssueDate', "Please Enter Date of Issue / निर्गमित केल्याची तारीख under Identification Details.");
         return false;
      } else {
         Dob_else('txtDrivingIssueDate');
      }
      if ($("#txtDrivingvalidDate").val() == '') {
         Dob_if('txtDrivingvalidDate', "Please Enter Validity of Driving License / ड्रायव्हिंग लायसन्सची वैधता under Identification Details.");
         return false;
      } else {
         Dob_else('txtDrivingvalidDate');
      }
      if ($("#txtLicensetype").val() == '') {
         drop_select_if('txtLicensetype', "Please select Type of Driving License / ड्रायव्हिंग लायसन्सचा प्रकार under Identification Details.");
         return false;
      } else {
         input_else('txtLicensetype');
      }
   }
   if ($("#txtVoterId").val() == '' && ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == "YY") {
      drop_radio_if('txtVoterId', "Please select Do you have Voter Id? / तुमच्याकडे मतदार ओळखपत्र आहे का?  under Identification Details.");
      return false;
   } else {
      input_else('txtVoterId');
   }
   if ($("#txtVoterId").val() == 'Yes') {
      if ($("#txtVoterIdNo").val() == '') {
         input_if('txtVoterIdNo', "Please Enter Voter Id Number / मतदार आयडी क्रमांक under Identification Details.");
         return false;
      } else {
         input_else('txtVoterIdNo');
      }
      if ($("#txtVoterNameId").val() == '') {
         input_if('txtVoterNameId', "Please Enter Name on Voter ID Card / मतदार ओळखपत्रावरील नाव under Identification Details.");
         return false;
      } else {
         input_else('txtVoterNameId');
      }
   }
   if ($("#txtPassport").val() == '' && ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == "YY") {
      drop_radio_if('txtPassport', "Please select Do you have Passport? / तुमच्याकडे पासपोर्ट आहे का? under Identification Details.");
      return false;
   } else {
      input_else('txtPassport');
   }
   if ($("#txtPassport").val() == 'Yes') {
      if ($("#txtPassportNo").val() == '') {
         input_if('txtPassportNo', "Please Enter Passport Number / पारपत्र क्रमांक under Identification Details.");
         return false;
      } else {
         input_else('txtPassportNo');
      }
      if ($("#txtPassportNameId").val() == '') {
         input_if('txtPassportNameId', "Please Enter Name on Passport / पासपोर्टवर नाव under Identification Details.");
         return false;
      } else {
         input_else('txtPassportNameId');
      }
      if ($("#txtPassIssuingAuth").val() == '') {
         input_if('txtPassIssuingAuth', "Please Enter Place of Issue / निर्गमित केलेले ठिकाण  under Identification Details.");
         return false;
      } else {
         input_else('txtPassIssuingAuth');
      }
      if ($("#txtPassIssueDate").val() == '') {
         Dob_if('txtPassIssueDate', "Please Enter Date of Issue / निर्गमित करण्याची तारीख under Identification Details.");
         return false;
      } else {
         Dob_else('txtPassIssueDate');
      }
      if ($("#txtPassValidityDate").val() == '') {
         Dob_if('txtPassValidityDate', "Please Enter Date of Expiry / मुदत संपण्याची तारीख under Identification Details.");
         return false;
      } else {
         Dob_else('txtPassValidityDate');
      }
   }
   var IdentificationCounter = 0;
   if ($("#txtPanCard").val() == 'Yes') { IdentificationCounter++; }
   if ($("#txtVoterId").val() == 'Yes') { IdentificationCounter++; }
   if ($("#txtPassport").val() == 'Yes') { IdentificationCounter++; }
   if ($("#txtDrivingLicense").val() == 'Yes') { IdentificationCounter++; }
   var NoofProofSubmit = Number(ConfigurationObj.NoOfIdentificationProofReq.split('~')[1]);
   if (NoofProofSubmit == NaN) { NoofProofSubmit = 0; }
   if (NoofProofSubmit > IdentificationCounter) {
      if (NoofProofSubmit < 4) {
         alert_if("Please fill atleast any " + NoofProofSubmit + " Identification Proofs.")
         validate = false; return false;
      } else {
         alert_if("Please fill all four Identification Proofs.")
         validate = false; return false;
      }
   }
   if (document.getElementById("acceptanceCHKprof1").checked == false && IdentificationCounter > 0) {
      drop_check_if('acceptanceCHKprof1', "Please select I am voluntarily submitting my identity proof to establish my identity / माझी ओळख प्रस्थापित करण्यासाठी मी स्वेच्छेने माझा ओळखीचा पुरावा सादर करत आहे  under Identification Details.");
      validate = "false";
      return false;
   } else {
      input_else('acceptanceCHKprof1');
   }
   // -------------
   
   $('#PostName').attr("disabled", true);
	$('#PostName').selectpicker("refresh");
	$('#txtTab1Saved').val("Saved");
	setTabNo = "28";
	return true;
	// if (eval(checkDuplicate())) {
		// if ($("#txtPostName").val() != '') {
			// $('#PostName').attr("disabled", true);
			// $('#PostName').selectpicker("refresh");
			// $('#txtTab1Saved').val("Saved");
			// setTabNo = "28";
		// }
   // } else {
      // validate = false;
      // return false;
   // }
  
}
function validateAdditionalDetails() {
   trimSpacesFromAllTextBox();
   // Additional Details
     
   // if($("#txtKMigrant").val() == '' && ConfigurationObj.Kmigrant.split('~')[0] == 'YY' && ($('#txtGender').val() == 'Female' && $('#txtCategory').val() == 'Open')) {
      // drop_radio_if('txtKMigrant', "Please Select Do you want to apply under Non Creamy Layer Category ? / आपण नॉन क्रीमी लेयर श्रेणीअंतर्गत अर्ज करू इच्छित आहात का? under Aditional Personal Details.");
      // validate = false;
      // return false;
   // } else if(($('#txtCategory').val() != 'Schedule Caste (SC)' && $('#txtCategory').val() != 'Schedule Tribe (ST)') && !($('#txtGender').val() == 'Male' && $('#txtCategory').val() == 'Open') && $("#txtKMigrant").val() == '' && ConfigurationObj.Kmigrant.split('~')[0] == 'YY'){
	    // drop_radio_if('txtKMigrant', "Please Select Do you want to apply under Non Creamy Layer Category ? / आपण नॉन क्रीमी लेयर श्रेणीअंतर्गत अर्ज करू इच्छित आहात का? under Aditional Personal Details.");
      // validate = false;
      // return false;
   // }  
   // else {
      // input_else('txtKMigrant');
   // }
   
   if ($("#txtKMigrant").val() == '' && ConfigurationObj.Kmigrant.split('~')[0] == 'YY' && ($('#txtCategory').val() != 'Schedule Caste (SC)' && $('#txtCategory').val() != 'Schedule Tribe (ST)' && $('#txtCategory').val() != 'Open'&& $('#txtCategory').val() != 'Economically Weaker Section (EWS)')) {
      drop_radio_if('txtKMigrant', "Please Select Do you want to apply under Non Creamy Layer Category? / आपण नॉन क्रीमी लेयर श्रेणीअंतर्गत अर्ज करू इच्छित आहात का? under Aditional Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('txtKMigrant');
   }
   
   // if(!(($('#txtGender').val() == 'Male' && $('#txtCategory').val() == 'Open') && ($('#txtCategory').val() == 'Schedule Caste (SC)' || $('#txtCategory').val() == 'Schedule Tribe (ST)' ))){
	   // input_else('txtKMigrant');      
   // } else if($("#txtKMigrant").val() == ''){
      // drop_radio_if('txtKMigrant', "Please Select Do you want to apply under Non Creamy Layer Category ? under Aditional Personal Details.");
      // validate = false;
      // return false;
   // }
   
   if ($("#txtKMigrant").val() == "Yes") {
      if (document.getElementById("txtFarmCertAuthority").value == '') {
         input_if('txtFarmCertAuthority', "Please Enter Certificate Issuing Authority / प्रमाणपत्र प्राधिकरणाचे नाव निर्गमित करणे under Aditional Personal Details.");
         return false;
      } else {
         input_else('txtFarmCertAuthority');
      }
      if (document.getElementById("txtFarmCertIssueDate").value == '') {
         Dob_if('txtFarmCertIssueDate', "Please Enter Certificate Issue Date / प्रमाणपत्र निर्गमित करण्याची तारीख  under Aditional Personal Details.");
         return false;
      } else {
         Dob_else('txtFarmCertIssueDate');
      }
      if (document.getElementById("txtFarmCertSerialNo").value == '') {
         input_if('txtFarmCertSerialNo', "Please Enter Certificate Serial Number / प्रमाणपत्र अनुक्रम क्रमांक under Aditional Personal Details.");
         return false;
      } else {
         input_else('txtFarmCertSerialNo');
      }
   }
   // if ($("#txtGender").val() == "Female") {
      // if ($("#txtWomensRes").val() == '') {
         // drop_radio_if('txtWomensRes', "Please Select Do you want to apply under Women's Reservation? under Aditional Personal Details.");
         // validate = false;
         // return false;
      // } else {
         // input_else('txtWomensRes');
      // }
	  // if ($("#txtWomensRes").val() == "Yes") {
      // if (document.getElementById("txtWomenResCertAuthority").value == '') {
         // input_if('txtWomenResCertAuthority', "Please Enter Certificate Issuing Authority/प्रमाणपत्र निर्गमित करणाऱ्या प्राधिकरणाचे नाव under Aditional Personal Details.");
         // return false;
      // } else {
         // input_else('txtWomenResCertAuthority');
      // }
      // if (document.getElementById("txtWomenResCertIssueDate").value == '') {
         // Dob_if('txtWomenResCertIssueDate', "Please Enter Certificate Issue Date/ प्रमाणपत्र निर्गमित करण्याची तारीख under Aditional Personal Details.");
         // return false;
      // } else {
         // Dob_else('txtWomenResCertIssueDate');
      // }
      // if (document.getElementById("txtWomenResCertSerialNo").value == '') {
         // input_if('txtWomenResCertSerialNo', "Please Enter Certificate Serial Number / प्रमाणपत्र अनुक्रमांक under Aditional Personal Details.");
         // return false;
      // } else {
         // input_else('txtWomenResCertSerialNo');
      // }
   // }
   // }
   if ($("#txtProjAffected").val() == '') {
      drop_radio_if('txtProjAffected', "Please Select Are you Project Affected ? / तुम्ही प्रकल्पग्रस्त आहात का? under Aditional Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('txtProjAffected');
   }
   if ($("#txtProjAffected").val() == "Yes") {
      if (document.getElementById("txtProjAffectedAuthority").value == '') {
         input_if('txtProjAffectedAuthority', "Please Enter Certificate Issuing Authority/प्रमाणपत्र निर्गमित करणाऱ्या प्राधिकरणाचे नाव under Aditional Personal Details.");
         return false;
      } else {
         input_else('txtProjAffectedAuthority');
      }
      if (document.getElementById("txtProjAffectedIssueDate").value == '') {
         Dob_if('txtProjAffectedIssueDate', "Please Enter Certificate Issue Date/ प्रमाणपत्र निर्गमित करण्याची तारीख under Aditional Personal Details.");
         return false;
      } else {
         Dob_else('txtProjAffectedIssueDate');
      }
      if (document.getElementById("txtProjAffectedSerialNo").value == '') {
         input_if('txtProjAffectedSerialNo', "Please Enter Certificate Serial Number / प्रमाणपत्र अनुक्रमांक under Aditional Personal Details.");
         return false;
      } else {
         input_else('txtProjAffectedSerialNo');
      }
   }
   if ($("#txtEarthAffected").val() == '') {
      drop_radio_if('txtEarthAffected', "Please Select Are you Earthquake Affected? / तुम्ही भूकंपग्रस्त आहात का? under Aditional Personal Details.");
      validate = false;
      return false;
   } else {
      input_else('txtEarthAffected');
   }
   if ($("#txtEarthAffected").val() == "Yes") {
      if (document.getElementById("txtEarthAffectedAuthority").value == '') {
         input_if('txtEarthAffectedAuthority', "Please Enter Certificate Issuing Authority/ प्रमाणपत्र निर्गमित करणाऱ्या प्राधिकरणाचे नाव under Aditional Personal Details.");
         return false;
      } else {
         input_else('txtEarthAffectedAuthority');
      }
      if (document.getElementById("txtEarthAffectedIssueDate").value == '') {
         Dob_if('txtEarthAffectedIssueDate', "Please Enter Certificate Issue Date / प्रमाणपत्र निर्गमित करण्याची तारीख under Aditional Personal Details.");
         return false;
      } else {
         Dob_else('txtEarthAffectedIssueDate');
      }
      if (document.getElementById("txtEarthAffectedSerialNo").value == '') {
         input_if('txtEarthAffectedSerialNo', "Please Enter Certificate Serial Number / प्रमाणपत्र अनुक्रमांक under Aditional Personal Details.");
         return false;
      } else {
         input_else('txtEarthAffectedSerialNo');
      }
   }
   if ($("#txtExServiceman").val() == '' && ConfigurationObj.ExservicemenDetailsReq.split('~')[0] == 'YY') {
      drop_radio_if('txtExServiceman', "Please Select Are you an Ex Servicemen? / तुम्ही माजी सैनिक आहात का?  under Additional Details");
      validate = false;
      return false;
   } else {
      input_else('txtExServiceman');
   }
   
   if ($("#txtExSerSecuredEmp").val() == '') {
      drop_radio_if('txtExSerSecuredEmp', "Please Select Are You ward of Ex-Servicemen ? under Additional Details");
      validate = false;
      return false;
   } else {
      input_else('txtExSerSecuredEmp');
   }
   if ($("#txtExServiceman").val() == 'Yes' || $("#txtExSerSecuredEmp").val() == 'Yes') {// ex-serviceman---------------------- 
	  
      if (document.getElementById("txtExSerJoiningDate").value == '') {
         input_if('txtExSerJoiningDate', "Please Enter Service Period From / सेवा कालावधी दिनांकापासून  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtExSerJoiningDate');
      }
      if (document.getElementById("txtExSerEndDate").value == '') {
         Dob_if('txtExSerEndDate', "Please Enter Service Period To / सेवा कालावधी ते दिनांकापर्यंत  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         Dob_else('txtExSerEndDate');
      }
      if (document.getElementById("txtExSerDuration").value == '') {
         input_if('txtExSerDuration', "Please Enter Total Service Period / एकूण सेवा कालावधी  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtExSerDuration');
      }
   }
   if (document.getElementById("txtSportPerson").value == '' && ConfigurationObj.SportsPersonDetailsReq.split('~')[0] == 'YY') {
      drop_radio_if('txtSportPerson', "Please select Are you meritious sport person as per Government resolution / प्रचलित शासन निर्णयानुसार तुम्ही गुणवंत खेळाडू आहात काय ? under Sport Detail");
      validate = false;
      return false;
   } else {
      input_else('txtSportPerson');
      validate = true;
   }
   if ($('#txtSportPerson').val() == "Yes") {
	   
	   if (document.getElementById("txt789thtotalmarks").value == '') {
      drop_radio_if('txt789thtotalmarks', "Please select Have you submitted all your sports certificates to the concerned Director / Deputy Director, Sports for verification? तुम्ही तुमचे सर्व क्रीडा प्रमाणपत्र संबंधीत संचालक/उपसंचालक, क्रिडा यांच्याकडे प्रमाणित करण्यासाठी पाठवले आहेत का?  under Sport Detail");
      validate = false;
      return false;
	   } else {
		  input_else('txt789thtotalmarks');
		  validate = true;
	   }
	   
	   // if (document.getElementById("txtSportsAuthority").value == '') {
         // input_if('txtSportsAuthority', "Please Enter Certificate Issuing Authority/प्रमाणपत्र जारी करणाऱ्या प्राधिकरणाचे नाव  under Additional Details.");
         // validate = false;
         // return false;
      // } else {
         // validate = true;
         // input_else('txtSportsAuthority');
      // }
	  
	  // if (document.getElementById("txtSportsIssueDate").value == '') {
         // Dob_if('txtSportsIssueDate', "Please Enter Certificate Issue Date / प्रमाणपत्र जारी करण्याची तारीख under Aditional Personal Details.");
         // return false;
      // } else {
         // Dob_else('txtSportsIssueDate');
      // }
	  
	  // if (document.getElementById("txtSportsSerialNo").value == '') {
         // input_if('txtSportsSerialNo', "Please Enter Certificate Serial Number / प्रमाणपत्र अनुक्रमांक  under Additional Details.");
         // validate = false;
         // return false;
      // } else {
         // validate = true;
         // input_else('txtSportsSerialNo');
      // }
	   
      if (document.getElementById("txtSportAchievmntLvl").value == '') {
         drop_select_if('txtSportAchievmntLvl', "Please select Achievement Level / अचिव्हमेंट लेव्हल under Sport Detail");
         validate = false;
         return false;
      } else {
         input_else('txtSportAchievmntLvl');
         validate = true;
      }
      if (document.getElementById("txtSportTLevel").value == '') {
         drop_select_if('SportTLevel', "Please select Category / level of Sports Tournaments / क्रीडा स्पर्धांची श्रेणी/स्तर under Sport Detail");
         validate = false;
         return false;
      } else {
         input_else('SportTLevel');
         validate = true;
      }
      // if (document.getElementById("txtNameOfTournament").value == '') {
      //    input_if('txtNameOfTournament', "Please Specify Full Name of Tournament under Sport Detail");
      //    validate = false;
      //    return false;
      // } else {
      //    input_else('txtNameOfTournament');
      //    validate = true;
      // }
      // if (document.getElementById("txtSportMedal").value == '') {
      //    drop_select_if('txtSportMedal', "Please select Medal / Awards Received under Sport Detail");
      //    validate = false;
      //    return false;
      // } else {
      //    input_else('txtSportMedal');
      //    validate = true;
      // }
      if (document.getElementById("txtSportCertAuthority").value == '') {
         input_if('txtSportCertAuthority', "Please Specify Full Name of Tournament / स्पर्धेचे संपूर्ण नाव निर्दिष्ट करा under Sport Person Details.");
         return false;
      } else {
         input_else('txtSportCertAuthority');
      }
      if (document.getElementById("txtSportCertSerialNo").value == '') {
         input_if('txtSportCertSerialNo', "Please Medal / Awards Received/ पदक/पुरस्कार मिळाले  under Sport Person Details.");
         return false;
      } else {
         input_else('txtSportCertSerialNo');
      }
   }
   if ($("#txtPWD").val() == '' && ConfigurationObj.DisabilityType.split('~')[0] == 'YY') {
      drop_radio_if('txtPWD', "Please select Are you PwBD i.e. Person with Benchmark Disabilities with at least 40% disability? / तुम्तुम्ही PwBD म्हणजे किमान 40% अपंगत्व असलेली बेंचमार्क दिव्यांग व्यक्ती आहात का?nder Additional Details.");
      validate = false; return false;
   } else {
      input_else('txtPWD');
   }
   if ($("#txtPWD").val() == 'Yes') {
	   
	   if (document.getElementById("txt789thmarks").value == '') {
         input_if('txt789thmarks', "Please enter Certificate Issuing Authority/ प्रमाणपत्र निर्गमित करणाऱ्या प्राधिकरणाचे नाव under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txt789thmarks');
         validate = true;
      }
      if (document.getElementById("txt789PerMarkCGPA").value == '') {
         Dob_if('txt789PerMarkCGPA', "Please Enter Certificate Issue Date / प्रमाणपत्र निर्गमित करण्याची तारीख  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         Dob_else('txt789PerMarkCGPA');
      }
      if (document.getElementById("txt789thschool").value == '') {
         input_if('txt789thschool', "Please enter Certificate Serial Number / प्रमाणपत्र अनुक्रमांक  under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txt789thschool');
         validate = true;
      }
	   
      if ($("#txtDisabilityPercentage").val() == '') {
         drop_select_if('txtDisabilityPercentage', "Please select Percentage of Disability / दिव्यांगाची टक्केवारी  under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtDisabilityPercentage');
      }
      if ($("#txtDisabilityType").val() == '') {
         drop_select_if('DisabilityType', "Please select Type of Disability / दिव्यांगाचा प्रकार  under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('DisabilityType');
      }

      if ($("#txtWheelchairSupport").val() == '' && ConfigurationObj.DisabilityType.split('~')[2] == 'YY') {
         drop_radio_if('txtWheelchairSupport', "Please select Do you want a wheelchair support? / तुम्हाला व्हीलचेअरचा आधार हवा आहे का? under Additional Details.");
         validate = false; return false;
      } else {
         input_else('txtWheelchairSupport');
      }
	  
	   if ($("#txtScribe").val() == '' && ConfigurationObj.DisabilityType.split('~')[1] == 'YY' && $('#txtDisabilityType').val() != "b) D - Deaf, HH - Hearing Handicapped") {
            drop_radio_if('txtScribe', "Please select Do you want a Scribe? / तुम्हाला लेखनिक हवा आहे का? under Additional Details.");
            validate = false; return false;
         } else {
            input_else('txtScribe');
         }
		 
	if (document.getElementById("acceptanceScribe").checked == false && $("#txtScribe").val() == 'Yes') {
      drop_check_if('acceptanceScribe', "Please select I agree, I will arrange my own scribe.");
      validate = "false";
      return false;
   } else {
      input_else('acceptanceScribe');
   }
		 
      // if ($('#txtDisabilityType').val() == "(d) CP - Cerebral Palsy" || $('#txtDisabilityType').val() == "(e) MD - Multiple disabilities involving (a) to (d) above") {
         // if ($("#txtScribe").val() == '' && ConfigurationObj.DisabilityType.split('~')[1] == 'YY') {
            // drop_radio_if('txtScribe', "Please select Do you want a Scribe? under Additional Details.");
            // validate = false; return false;
         // } else {
            // input_else('txtScribe');
         // }
         // if ($("#txtScribe").val() == 'Yes' && ConfigurationObj.DisabilityType.split('~')[1] == 'YY') {
            // if ($("#txtOwnScribe").val() == '') {
               // drop_radio_if('txtOwnScribe', "Please select Whether you opt for Own Scribe? under Additional Details.");
               // validate = false;
               // return false;
            // } else {
               // input_else('txtOwnScribe');
            // }
         // }
      // }
   }
   if (document.getElementById("txtWarHero").value == '' && ConfigurationObj.DefenceServiceDetailsReq.split('~')[0] == 'YY') {
      drop_radio_if('txtWarHero', "Please select Are you War Hero/ Widow of War Hero or Dependent/Wards of Defence Service Personnel? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtWarHero');
      validate = true;
   }
   if (document.getElementById("txtWarHero").value == 'Yes') {
      if (document.getElementById("txtSpecifyWarHero").value == '') {
         drop_select_if('SpecifyWarHero', "Please Specify War Hero/ Widow of War Hero or Dependent/Wards of Defence Service Personnel? under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('SpecifyWarHero');
         validate = true;
      }
   }
   if ($("#txtGovtEmp").val() == '' && ConfigurationObj.DeptEmployeeDetailsReq.split('~')[0] == 'YY') {
      drop_radio_if('txtGovtEmp', "Are you nominated by Freedom fighter? / आपण स्वातंत्र्य सैनिकाचे नाम निर्देशित पाल्य आहे काय?  under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtGovtEmp');
      validate = true;
   }
   if ($("#txtGovtEmp").val() == 'Yes') {
      if (document.getElementById("txtEmpJoiningDate").value == '') {
         input_if('txtEmpJoiningDate', "Please Certificate Issuing Authority/ प्रमाणपत्र निर्गमित करणाऱ्या प्राधिकरणाचे नाव  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
	  input_else('txtEmpJoiningDate');}
		 if (document.getElementById("txtEmpDuration").value == '') {
         Dob_if('txtEmpDuration', "Please Certificate Issue Date/प्रमाणपत्र निर्गमित करण्याची तारीख  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtEmpDuration');
      }
	   if (document.getElementById("txtDeptEmpDuration").value == '') {
         input_if('txtDeptEmpDuration', "Please Certificate Serial Number / प्रमाणपत्र अनुक्रमांक  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
	  input_else('txtDeptEmpDuration');}
      // if (document.getElementById("txtEmpDuration").value == '') {
      //    input_if('txtEmpDuration', "Please Enter Duration of Govt. Service under Additional Details.");
      //    validate = false;
      //    return false;
      // } else {
      //    validate = true;
      //    input_else('txtEmpDuration');
      // }
      // if (document.getElementById("txtNoc").value == '') {
         // drop_radio_if('txtNoc', "Please select Have you obtained the NOC from your department?  / आपण आपल्या विभागाकडून एनओसी/ ना हरकत प्रमाणपत्र घेतले आहे का? under Additional Details.");
         // validate = false;
         // return false;
      // } else {
         // input_else('txtNoc');
         // validate = true;
      // }
      // if (document.getElementById("txtEmploymentType").value == '') {
         // input_if('txtEmploymentType', "Please select Employment Type? / रोजगार प्रकार  under Additional Details.");
         // validate = false;
         // return false;
      // } else {
         // input_else('txtEmploymentType');
         // validate = true;
      // }
      // if (document.getElementById("txtEmpPunished").value == '') {
         // drop_radio_if('txtEmpPunished', "Please select Have you ever suspended or punished during the term of service? / सेवेच्या कालावधीत तुम्हाला कधी निलंबित किंवा शिक्षा केली आहे का?  under Additional Details.");
         // validate = false;
         // return false;
      // } else {
         // input_else('txtEmpPunished');
         // validate = true;
      // }
   }
   //Current emp details
   if ($("#txtCurrentOrgEmp").val() == '' && ConfigurationObj.CurrentEmpDetReq.split('~')[0] == 'YY') {
      drop_radio_if('txtCurrentOrgEmp', "Please select Do you want to apply under Orphan Category ? / तुम्ही अनाथ आहात का? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtCurrentOrgEmp');
      validate = true;
   }
   if ($("#txtCurrentOrgEmp").val() == 'Yes') {
	   
	   if (document.getElementById("txt789thYOP").value == '') {
         drop_select_if('txt789thYOP', "Please select Orphan Type under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txt789thYOP');
         validate = true;
      }
	   
      if (document.getElementById("txtCurrentOrgLocation").value == '') {
         input_if('txtCurrentOrgLocation', "Please enter Certificate Issuing Authority/ प्रमाणपत्र निर्गमित करणाऱ्या प्राधिकरणाचे नाव under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtCurrentOrgLocation');
         validate = true;
      }
      if (document.getElementById("txtCurrEmpJoiningDate").value == '') {
         Dob_if('txtCurrEmpJoiningDate', "Please Enter Certificate Issue Date /प्रमाणपत्र निर्गमित करण्याची तारीख  under Additional Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         Dob_else('txtCurrEmpJoiningDate');
      }
      if (document.getElementById("txtCurrentOrgPostName").value == '') {
         input_if('txtCurrentOrgPostName', "Please enter Certificate Serial Number / प्रमाणपत्र अनुक्रमांक  under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtCurrentOrgPostName');
         validate = true;
      }
      // if (document.getElementById("txtCurrEmpEndDate").value == '') {
      //    Dob_if('txtCurrEmpEndDate', "Please Enter Relieving Date of service under Additional Details.");
      //    validate = false;
      //    return false;
      // } else {
      //    validate = true;
      //    Dob_else('txtCurrEmpEndDate');
      // }
      // if (document.getElementById("txtCurrEmpNoc").value == '') {
      //    drop_radio_if('txtCurrEmpNoc', "Please select Have you obtained the NOC? under Additional Details.");
      //    validate = false;
      //    return false;
      // } else {
      //    input_else('txtCurrEmpNoc');
      //    validate = true;
      // }
   }
   //Other details validation
   if (document.getElementById("txtPartTimeEmp").value == '') {
      drop_radio_if('txtPartTimeEmp', "Please select Are you Anshkalin Employee (As per refrence GR) तुम्ही अंशकालीन कर्मचारी आहात काय?  under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtPartTimeEmp');
      validate = true;
   }
   if (document.getElementById("txtPartTimeEmp").value == 'Yes') {
	   if (document.getElementById("txtSportsAuthority").value == '') {
      input_if('txtSportsAuthority', "Please enter Certificate Issuing Authority / प्रमाणपत्र निर्गमित करणाऱ्या प्राधिकरणाचे नाव  under Additional Details.");
      validate = false;
      return false;
	   } else {
		  input_else('txtSportsAuthority');
		  validate = true;
	   }
	   if (document.getElementById("txtSportsSerialNo").value == '') {
      input_if('txtSportsSerialNo', "Please enter Certificate Serial Number / प्रमाणपत्र अनुक्रमांक under Additional Details.");
      validate = false;
      return false;
	   } else {
		  input_else('txtSportsSerialNo');
		  validate = true;
	   }
	   if (document.getElementById("txtSportsIssueDate").value == '') {
      Dob_if('txtSportsIssueDate', "Please selet Certificate Issue Date/प्रमाणपत्र निर्गमित करण्याची तारीख under Additional Details.");
      validate = false;
      return false;
	   } else {
		  input_else('txtSportsIssueDate');
		  validate = true;
	   }
   }
   
   if (document.getElementById("txtShortHandSpeed").value == '') {
      drop_radio_if('txtShortHandSpeed', "Please select Are you debard from any previous Examination? / आपणास यापूर्वी कोणत्या परिक्षेसाठी प्रतिबंधीत केले आहे काय ?    under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtShortHandSpeed');
      validate = true;
   }
   if (document.getElementById("txtShortHandSpeed").value == 'Yes' && document.getElementById("txtEngTypeSpeed").value == '') {
      input_if('txtEngTypeSpeed', "Please enter Details under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtEngTypeSpeed');
      validate = true;
   }
   
   if (document.getElementById("txtIsFIR").value == '') {
      drop_radio_if('txtIsFIR', "Please select Whether any FIR or Criminal case(s) has ever been registered against you?  / तुमच्याविरुद्ध कधी एफआयआर किंवा फौजदारी खटला (खटले) नोंदवला गेला आहे का? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtIsFIR');
      validate = true;
   }
   if (document.getElementById("txtIsFIR").value == 'Yes') {
      if (document.getElementById("txtFIRNumber").value == '') {
         input_if('txtFIRNumber', "Please Enter FIR Number / एफआयआर क्रमांक under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtFIRNumber');
         validate = true;
      }
      if (document.getElementById("txtFIRDate").value == '') {
         input_if('txtFIRDate', "Please Select FIR Date / एफआयआर तारीख under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtFIRDate');
         validate = true;
      }
      if (document.getElementById("txtPoliceStation").value == '') {
         input_if('txtPoliceStation', "Please Enter Name of Police Station / पोलीस ठाण्याचे नाव under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtPoliceStation');
         validate = true;
      }
      if (document.getElementById("txtFIRStatus").value == '') {
         drop_radio_if('txtFIRStatus', "Please select FIR current status / एफआयआरची सद्यस्थिती under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtFIRStatus');
         validate = true;
      }
   }
   if (document.getElementById("txtFIRStatus").value == 'Open') {
      if (document.getElementById("txtFIRCaseDetails").value == '') {
         input_if('txtFIRCaseDetails', "Please Enter Your Case Details / आपल्या केसचा तपशील प्रविष्ट करा under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtFIRCaseDetails');
         validate = true;
      }
   }
   if (document.getElementById("txtIsCriminalCase").value == '') {
      drop_radio_if('txtIsCriminalCase', "Please select Have you ever been arrested /detained in any criminal case(s)? / तुम्हाला कधीही कोणत्याही गुन्हेगारी प्रकरणात अटक / ताब्यात घेण्यात आले आहे का? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtIsCriminalCase');
      validate = true;
   }
   if (document.getElementById("txtIsCriminalCase").value == 'Yes') {
      if (document.getElementById("txtCCaseDetails").value == '') {
         input_if('txtCCaseDetails', "Please Enter your case details / आपल्या केसचा तपशील प्रविष्ट करा under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtCCaseDetails');
         validate = true;
      }
   }
   if (document.getElementById("txtIsCriminalByCourt").value == '') {
      drop_radio_if('txtIsCriminalByCourt', "Please select Have you ever been tried & convicted or acquitted by a Court of Law in any criminal case(s)? / तुमच्यावर कधीही खटला चालवला गेला आहे आणि कोणत्याही फौजदारी खटल्यात तुम्हाला कायद्याच्या न्यायालयाने दोषी ठरवले आहे किंवा निर्दोष ठरवले आहे?  under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtIsCriminalByCourt');
      validate = true;
   }
   if (document.getElementById("txtIsCriminalByCourt").value == 'Yes') {
      if (document.getElementById("txtCCaseByCourt").value == '') {
         input_if('txtCCaseByCourt', "Please Enter your case details / आपल्या केसचा तपशील प्रविष्ट करा under Additional Details.");
         validate = false;
         return false;
      } else {
         input_else('txtCCaseByCourt');
         validate = true;
      }
   }
   if (document.getElementById("txtIsBondCrPC").value == '') {
      drop_radio_if('txtIsBondCrPC', "Please select Have you ever had to execute any bond for keeping peace/good behaviour under security proceedings of CRPC? / CRPC च्या सुरक्षिततेच्या कार्यवाही अंतर्गत शांतता/चांगली वागणूक ठेवण्यासाठी तुम्हाला कधीही कोणतेही बॉन्ड अंमलात आणावे लागले आहे का? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtIsBondCrPC');
      validate = true;
   }
   if (document.getElementById("txtIsUMC").value == '') {
      drop_radio_if('txtIsUMC', "Please select Have you ever been proceeded against by any School/College/University in case of any Unfair means (UMC)or any charges / तुमच्यावर कधीही शाळा/कॉलेज/विद्यापीठाकडून कोणत्याही अन्यायकारक (UMC) किंवा कोणत्याही बदलांच्या बाबतीत कारवाई झाली आहे का? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtIsUMC');
      validate = true;
   }
   if (document.getElementById("txtIsCourtInIndia").value == '') {
      drop_radio_if('txtIsCourtInIndia', "Please select Are you facing any criminal proceedings in any court of Law in India? / भारतातील कोणत्याही न्यायालयामध्ये तुमच्यावर फौजदारी कारवाई होत आहे का? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtIsCourtInIndia');
      validate = true;
   }
   if (document.getElementById("txtIsDepCourtEnq").value == '') {
      drop_radio_if('txtIsDepCourtEnq', "Please selectIs there any departmental enquiry / court case pending against you? / तुमच्या विरुद्ध विभागीय चौकशी / न्यायालयीन प्रकरण प्रलंबित आहे का? under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtIsDepCourtEnq');
      validate = true;
   }
   if (document.getElementById("txtIsDepCourtEnq").value == 'Yes' && document.getElementById("txtDepEnqStatus").value == '') {
      input_if('txtDepEnqStatus', "Please select Current status / सद्यस्थिती  under Additional Details.");
      validate = false;
      return false;
   } else {
      input_else('txtDepEnqStatus');
      validate = true;
   }
   if (checkAge() == false) {
      alert_if("You are not eligible to fill this form.");
      validate = "false";
      return false;
   }
   // -------------
   $('#txtTab2Saved').val("Saved");
   setTabNo = "29";
   return true;
}
function validateCommunicationDetails() {
   trimSpacesFromAllTextBox();
   //Correspondence Address Start------------
   if ($("#txtAddressLine1").val() == '') {
      input_if('txtAddressLine1', "Please enter Address Line 1 / पत्ता ओळ 1  under Correspondence Address.");
      validate = false;
      return false;
   } else {
      validate = true;
      input_else('txtAddressLine1');
   }
   if (document.getElementById("txtCountry").value == '') {
      drop_select_if('txtCountry', "Please select Country / देश.");
      validate = false;
      return false;
   } else {
      input_else('txtCountry');
      validate = true;
   }
   if (document.getElementById("txtCountry").value != 'OTHERS') {
      if (document.getElementById("txtState").value == '') {
         drop_select_if('txtState', "Please select State/ UT / राज्य / केंद्रशासित प्रदेश.");
         validate = false;
         return false;
      } else {
         input_else('txtState');
         validate = true;
      }
      if (document.getElementById("District").value == '') {
         drop_select_if('District', "Please select City/District / जिल्हा.");
         validate = false;
         return false;
      } else {
         input_else('District');
         validate = true;
      }
      if (document.getElementById("District").value == 'Others') {
         if ($("#txtOtherCity").val() == '') {
            input_if('txtOtherCity', "Please enter Other City Name.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtOtherCity');
         }
      }
   }
   if (document.getElementById("txtCountry").value == 'OTHERS') {
      if ($("#txtOtherCountry").val() == '') {
         input_if('txtOtherCountry', "Please enter Other Country Name.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtOtherCountry');
      }
      if ($("#txtOtherState").val() == '') {
         input_if('txtOtherState', "Please enter Other State Name.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtOtherState');
      }
      if ($("#txtOtherCity").val() == '') {
         input_if('txtOtherCity', "Please enter Other City Name.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtOtherCity');
      }
   }
   if ($("#txtPinCode").val() == '') {
      input_if('txtPinCode', "Please enter Your Pincode/Postal Code / पिनकोड/पोस्टल कोड In Correspondence Address.");
      validate = false;
      return false;
   } else {
      input_else('txtPinCode');
      validate = true;
   }
   if ($("#txtPinCode").val() != '') {
      if (document.getElementById("txtCountry").value == 'India') {
         if (trim(document.getElementById("txtPinCode").value).length != 6) {
            input_if('txtPinCode', "Please enter 6 digit Pincode/Postal Code in Correspondence Address.");
            validate = false;
            return false;
         } else {
            input_else('txtPinCode');
            validate = true;
         }
      }
   }
   if (document.getElementById("txtPinCode").value == '000000') {
      input_if('txtPinCode', "Please enter Correct Correspondence Address Pincode/Postal Code.");
      validate = false;
      return false;
   } else {
      input_else('txtPinCode');
      validate = true;
   }
   if (document.getElementById("txtPinCode").value.charAt(0) == "0") {
      input_if('txtPinCode', "Please enter Correct Correspondence Address Pincode/Postal Code. PIN Code cannot start with zero");
      validate = false;
      return false;
   } else {
      input_else('txtPinCode');
      validate = true;
   }
   if ($("#txtPerAddress").val() == '') {
      drop_radio_if('txtPerAddress', "Please select Is Permanent Address Same as Correspondence address? / कायमचा पत्ता पत्रव्यवहार पत्त्यासारखाच आहे का?");
      validate = false;
      return false;
   } else {
      input_else('txtPerAddress');
      validate = true;
   }
   //Correspondence Address End--------Permanent Address Start------
   // if($("#txtPerAddress").val()=='No'){
   if ($("#txtPerAddressLine1").val() == '') {
      input_if('txtPerAddressLine1', "Please enter Address Line 1 / पत्ता ओळ 1 under Permanent Address.");
      validate = false;
      return false;
   } else {
      validate = true;
      input_else('txtPerAddressLine1');
   }
   if (document.getElementById("txtPerCountry").value == '') {
      drop_select_if('txtPerCountry', "Please select Country / देश.");
      validate = false;
      return false;
   } else {
      input_else('txtPerCountry');
      validate = true;
   }
   if (document.getElementById("txtPerCountry").value != 'OTHERS') {

      if (document.getElementById("txtPerState").value == '') {
         drop_select_if('txtPerState', "Please select State/ UT / राज्य / केंद्रशासित प्रदेश under Permanent Address.");
         validate = false;
         return false;
      } else {
         input_else('txtPerState');
         validate = true;
      }
      if (document.getElementById("PerDistrict").value == '') {
         drop_select_if('PerDistrict', "Please select City/District / जिल्हा under Permanent Address.");
         validate = false;
         return false;
      } else {
         input_else('PerDistrict');
         validate = true;
      }
      if (document.getElementById("PerDistrict").value == 'Others') {
         if ($("#txtPerCity").val() == '') {
            input_if('txtPerCity', "Please enter Other City Name under Permanent Address.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPerCity');
         }
      }
   }
   if (document.getElementById("txtPerCountry").value == 'OTHERS') {
      if ($("#txtOtherPerCountry").val() == '') {
         input_if('txtOtherPerCountry', "Please enter Other Country Name under Permanent Address.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtOtherPerCountry');
      }
      if ($("#txtOtherPerState").val() == '') {
         input_if('txtOtherPerState', "Please enter Other State Name under Permanent Address.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtOtherPerState');
      }
      if ($("#txtPerCity").val() == '') {
         input_if('txtPerCity', "Please enter Other City Name under Permanent Address.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtPerCity');
      }
   }
   if ($("#txtPerPinCode").val() == '') {
      input_if('txtPerPinCode', "Please enter Your Pincode/Postal Code / पिनकोड/पोस्टल कोड In Permanent Address.");
      validate = false;
      return false;
   } else {
      input_else('txtPerPinCode');
      validate = true;
   }
   if ($("#txtPerPinCode").val() != '') {
      if (document.getElementById("txtPerCountry").value == 'India') {
         if (trim(document.getElementById("txtPerPinCode").value).length != 6) {
            input_if('txtPerPinCode', "Please enter 6 digit Pincode/Postal Code in Permanent Address.");
            validate = false;
            return false;
         } else {
            input_else('txtPerPinCode');
            validate = true;
         }
      }
   }
   if (document.getElementById("txtPerPinCode").value == '000000') {
      input_if('txtPerPinCode', "Please enter Correct Permanent Address Pincode/Postal Code.");
      validate = false;
      return false;
   } else {
      input_else('txtPerPinCode');
      validate = true;
   }
   if (document.getElementById("txtPerPinCode").value.charAt(0) == "0") {
      input_if('txtPerPinCode', "Please enter Correct Permanent Address Pincode/Postal Code. PIN Code cannot start with zero");
      validate = false;
      return false;
   } else {
      input_else('txtPerPinCode');
      validate = true;
   }//}
   //Permanent Address End------------------
   $('#txtTab3Saved').val("Saved");
   setTabNo = "30";
   return true;
}
function validateAcademicsDetails() {
   trimSpacesFromAllTextBox();
   if ($("#txtMatricSubject").val() == '' && ConfigurationObj.MatricSubject.split('~')[0] == 'YY') {
      drop_select_if('txtMatricSubject', "Please select Have you passed Matriculation or Higher qualification with Hindi/Sanskrit as one of the subjects? under Qualification Details.");
      validate = false;
      return false;
   } else {
      input_else('txtMatricSubject');
      validate = true;
   }
   //789th details--
   
   //10th details--
   if (ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YY' || ($('#txt10thBoard').val() != '' || $('#txt10thschool').val() != '' || $('#txt10PerMarkCGPA').val() != '' || $('#txt10thYOP').val() != '')) {
      if (document.getElementById("txt10thBoard").value == '') {
         input_if('txt10thBoard', "Please enter Name of the Board  / उत्तीर्ण मंडळाचे नाव  under Matriculation (10th) Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txt10thBoard');
      }
      if (document.getElementById("txt10thschool").value == '') {
         input_if('txt10thschool', "Please enter School/ lnstitute Name / शाळा / संस्थेचे नाव  under Matriculation (10th) Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txt10thschool');
      }
      if (document.getElementById("txt10PerMarkCGPA").value == '') {
         drop_select_if('txt10PerMarkCGPA', "Please select Percentage/Grade of Marks/CGPA / टक्केवारी/गुणांची श्रेणी/सीजीपीए under Matriculation (10th) Details.");
         validate = false;
         return false;
      } else {
         input_else('txt10PerMarkCGPA');
         validate = true;
      }
      if (document.getElementById("txt10PerMarkCGPA").value == 'Percentage') {
         if (document.getElementById("txt10thmarks").value == '') {
            input_if('txt10thmarks', "Please enter Marks Obtained / प्राप्त गुण  under Matriculation (10th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt10thmarks');
         }
         if (document.getElementById("txt10thtotalmarks").value == '') {
            input_if('txt10thtotalmarks', "Please enter Maximum Marks / अधिकतम अंक  under Matriculation (10th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt10thtotalmarks');
         }
         if (document.getElementById("txt10thper").value == '') {
            input_if('txt10thper', "Please enter Percentage of Marks / गुणांची टक्केवारी under Matriculation (10th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt10thper');
         }
      }
      if (document.getElementById("txt10PerMarkCGPA").value == 'Grade of Marks') {
         if (document.getElementById("txt10thGrade").value == '') {
            input_if('txt10thGrade', "Please enter Grade of Marks / गुणांची श्रेणी under Matriculation (10th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt10thGrade');
         }
      }
      if (document.getElementById("txt10PerMarkCGPA").value == 'CGPA') {
         if (document.getElementById("txt10thCGPA").value == '') {
            input_if('txt10thCGPA', "Please enter CGPA obtained / सीजीपीए स्कोर प्राप्त under Matriculation (10th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt10thCGPA');
         }
         if (document.getElementById("txt10MaxCGPA").value == '') {
            input_if('txt10MaxCGPA', "Please enter Maximum CGPA / अधिकतम सीजीपीए under Matriculation (10th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt10MaxCGPA');
         }
         if (document.getElementById("txt10MFactor").value == '') {
            input_if('txt10MFactor', "Please enter CGPA Multiplying Factor under Matriculation (10th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt10MFactor');
         }
      }
      if (document.getElementById("txt10thYOP").value == '') {
         input_if('10thYOP', "Please enter Year of Passing / उत्तीर्ण होण्याचे वर्ष under Matriculation (10th) Details.");
         validate = false;
         return false;
      } else {
         input_else('10thYOP');
         validate = true;
      }

   }
   //12th details--
   if (ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY' || ($('#txt12thBoard').val() != '' || $('#txt12thschool').val() != '' || $('#txt12PerMarkCGPA').val() != '' || $('#txt12thYOP').val() != '')) {
      if (document.getElementById("txt12thBoard").value == '') {
         input_if('txt12thBoard', "Please enter Name of the Board / उत्तीर्ण मंडळाचे नाव under lntermediate (12th) Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txt12thBoard');
      }
      if (document.getElementById("txt12thschool").value == '') {
         input_if('txt12thschool', "Please enter School/ lnstitute Name / शाळा / संस्थेचे नाव under lntermediate (12th) Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txt12thschool');
      }
      // if (document.getElementById("txt12Subject").value == '') {
         // drop_select_if('12Subject', "Please Selct Passed With (Class) / उत्तीर्ण (वर्ग) under lntermediate (12th) Details.");
         // validate = false;
         // return false;
      // } else {
         // validate = true;
         // input_else('12Subject');
      // }
      if (document.getElementById("txt12Subject").value == 'Others') {
         if (document.getElementById("txt12OSubject").value == '') {
            input_if('txt12OSubject', "Please enter Other Subjects under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12OSubject');
         }
      }
      if (document.getElementById("txt12PerMarkCGPA").value == '' && $('#txtExServiceman').val() == 'No') {
         drop_select_if('txt12PerMarkCGPA', "Please select Percentage/Grade of Marks/CGPA / टक्केवारी/गुणांची श्रेणी/सीजीपीए under lntermediate (12th) Details.");
         validate = false;
         return false;
      } else {
         input_else('txt12PerMarkCGPA');
         validate = true;
      }
      if (document.getElementById("txt12PerMarkCGPA").value == 'Percentage' && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txt12thmarks").value == '') {
            input_if('txt12thmarks', "Please enter Marks Obtained / प्राप्त गुण  under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12thmarks');
         }
         if (document.getElementById("txt12thtotalmarks").value == '') {
            input_if('txt12thtotalmarks', "Please enter Maximum Marks / अधिकतम अंक  under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12thtotalmarks');
         }
         if (document.getElementById("txt12thper").value == '') {
            input_if('txt12thper', "Please enter Percentage of Marks/ गुणांची टक्केवारी under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12thper');
         }
      }
      if (document.getElementById("txt12PerMarkCGPA").value == 'Grade of Marks' && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txt12thGrade").value == '') {
            input_if('txt12thGrade', "Please enter Grade of Marks / गुणांची श्रेणी under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12thGrade');
         }
      }
      if (document.getElementById("txt12PerMarkCGPA").value == 'CGPA' && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txt12thCGPA").value == '') {
            input_if('txt12thCGPA', "Please enter CGPA obtained under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12thCGPA');
         }
         if (document.getElementById("txt12MaxCGPA").value == '') {
            input_if('txt12MaxCGPA', "Please enter Maximum CGPA / अधिकतम सीजीपीए under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12MaxCGPA');
         }
         if (document.getElementById("txt12MFactor").value == '') {
            input_if('txt12MFactor', "Please enter CGPA Multiplying Factor under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txt12MFactor');
         }
      }
      if (document.getElementById("txt12thYOP").value == '') {
         drop_select_if('txt12thYOP', "Please select Year of Passing / उत्तीर्ण होण्याचे वर्ष under lntermediate (12th) Details.");
         validate = false;
         return false;
      } else {
         input_else('txt12thYOP');
         validate = true;
      }

   }
   //Diploma details---
   // if (document.getElementById("txtDipSubject").value == '') {
   //    drop_select_if('DipSubject', "Please Select Have you done Diploma? under Diploma Details.");
   //    validate = false;
   //    return false;
   // } else {
   //    validate = true;
   //    input_else('DipSubject');
   // }
   if (ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YY' || ($('#txtDiplomaName').val() != '' || $('#txtDiplomaInsti').val() != '' || $('#txtDipPerMarkCGPA').val() != '' || $('#txtDipPassDate').val() != '')) {

      if (document.getElementById("txtDiplomaName").value == '') {
         drop_select_if('txtDiplomaName', "Please select Diploma / डिप्लोमा  under Diploma Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtDiplomaName');
      }
      if (document.getElementById("txtDiplomaName").value == 'Any Other') {
         if (document.getElementById("txtDipOSubject").value == '') {
            input_if('txtDipOSubject', "Please enter Specify Name of Diploma under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDipOSubject');
         }
      }
      if (document.getElementById("txtDiplomaInsti").value == '') {
         input_if('txtDiplomaInsti', "Please enter Institute/Board/passed from / उत्तीर्ण झालेल्या संस्थेचे नाव  under Diploma Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtDiplomaInsti');
      }
      if (document.getElementById("txtDipPerMarkCGPA").value == '' && $('#txtExServiceman').val() == 'No') {
         drop_select_if('txtDipPerMarkCGPA', "Please select Percentage/Grade of Marks/CGPA टक्केवारी/गुणांची श्रेणी/CGPA under Diploma Details.");
         validate = false;
         return false;
      } else {
         input_else('txtDipPerMarkCGPA');
         validate = true;
      }
      if (document.getElementById("txtDipPerMarkCGPA").value == 'Percentage'  && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txtDipMarks").value == '') {
            input_if('txtDipMarks', "Please enter Marks Obtained / गुण मिळाले under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDipMarks');
         }
         if (document.getElementById("txtDiptotalmarks").value == '') {
            input_if('txtDiptotalmarks', "Please enter Maximum Marks / कमाल गुण under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDiptotalmarks');
         }
         if (document.getElementById("txtDipPer").value == '') {
            input_if('txtDipPer', "Please enter Percentage of Marks / गुणांची टक्केवारी under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDipPer');
         }
      }
      if (document.getElementById("txtDipPerMarkCGPA").value == 'Grade of Marks'  && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txtDipGrade").value == '') {
            input_if('txtDipGrade', "Please enter Grade / गुणांची श्रेणी under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDipGrade');
         }
      }
      if (document.getElementById("txtDipPerMarkCGPA").value == 'CGPA'  && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txtDipCGPA").value == '') {
            input_if('txtDipCGPA', "Please enter CGPA obtained / सीजीपीए स्कोर प्राप्त under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDipCGPA');
         }
         if (document.getElementById("txtDipMaxCGPA").value == '') {
            input_if('txtDipMaxCGPA', "Please enter Maximum CGPA / अधिकतम सीजीपीए under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDipMaxCGPA');
         }
         if (document.getElementById("txtDipMFactor").value == '') {
            input_if('txtDipMFactor', "Please enter CGPA Multiplying Factor under Diploma Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtDipMFactor');
         }
      }
      if (document.getElementById("txtDipPassDate").value == '') {
         Dob_if('txtDipPassDate', "Please select Year of Passing / उत्तीर्ण होण्याचा महिना आणि वर्ष under Diploma Details.");
         validate = false;
         return false;
      } else {
         Dob_else('txtDipPassDate');
         validate = true;
      }

   }
   //Grad or Diploma
   // if ($('#txtGradDegree').val() == '' && $('#txtGradInsti').val() == '' && $('#txtGradPrMarkCGPA').val() == '' && $('#txtgraddate').val() == '' && $('#txtDiplomaName').val() == '' && $('#txtDiplomaInsti').val() == '' && $('#txtDipPerMarkCGPA').val() == '' && $('#txtDipPassDate').val() == '') {
      // alert_if("Please fill either 'Graduation qualification details' or 'Diploma qualification details'.")
      // return false;
      // validate = false;
   // }
   //12th or Diploma
   if (ConfigurationObj["12orDipReq"].split('~')[0] == 'YN'  && $('#txtExServiceman').val() == 'No' && ($('#txt12thBoard').val() == '' && $('#txt12thschool').val() == '' && $('#txt12PerMarkCGPA').val() == '' && $('#txt12thYOP').val() == '' && $('#txtDiplomaName').val() == '' && $('#txtDiplomaInsti').val() == '' && $('#txtDipPerMarkCGPA').val() == '' && $('#txtDipPassDate').val() == '')) {
      alert_if("Please fill either '12th qualification details' or 'Diploma qualification details'.")
      return false;
      validate = false;
   }
   //Graduation details---------------------------
   // if (document.getElementById("txtGradSubject").value == '') {
   //    drop_select_if('GradSubject', "Please select Have you done Degree? under Graduation Details.");
   //    validate = false;
   //    return false;
   // } else {
   //    validate = true;
   //    input_else('GradSubject');
   // }

   if (((ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YY') || ($('#txtGradDegree').val() != '' || $('#txtGradInsti').val() != '' || $('#txtGradPrMarkCGPA').val() != '' || $('#txtgraddate').val() != ''))) {

      if (document.getElementById("txtGradDegree").value == '') {
         drop_select_if('GradDegree', "Please select Qualification Degree / पदवी तपशील under Degree Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('GradDegree');
      }
      if (document.getElementById("txtGradDegree").value == 'Any Other Graduate') {
         if (document.getElementById("txtGradODegree").value == '') {
            input_if('txtGradODegree', "Please enter Specify Name of Degree under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradODegree');
         }
      }
      if (document.getElementById("txtGradInsti").value == '') {
         input_if('txtGradInsti', "Please enter Institute/University passed from / उत्तीर्ण झालेल्या संस्थेचे / विद्यापीठाचे नाव under Degree Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtGradInsti');
      }

      // if (document.getElementById("txtGradSubject").value == '') {
      //    drop_select_if('GradSubject', "Please select Subjects under Degree Details.");
      //    validate = false;
      //    return false;
      // } else {
      //    validate = true;
      //    input_else('GradSubject');
      // }
      if (document.getElementById("txtGradSubject").value == 'Others') {
         if (document.getElementById("txtGradOSubject").value == '') {
            input_if('txtGradOSubject', "Please enter Other Subjects under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradOSubject');
         }
      }
      if (document.getElementById("txtgraddate").value == '') {
         Dob_if('txtgraddate', "Please select Month and Year of Passing / उत्तीर्ण होण्याचा महिना आणि वर्ष  under Degree Details.");
         validate = false;
         return false;
      } else {
         Dob_else('txtgraddate');
         validate = true;
      }
	  
	  if(($('#txtExServiceman').val() == 'Yes' && $('#txtGradDegree').val() != 'Any Other Graduate') || $('#txtExServiceman').val() == 'No'){
      if (document.getElementById("txtGradPrMarkCGPA").value == '') {
         drop_select_if('txtGradPrMarkCGPA', "Please select Percentage/Grade of Marks/CGPA / टक्केवारी/गुणांची श्रेणी/CGPA under Degree Details.");
         validate = false;
         return false;
      } else {
         input_else('txtGradPrMarkCGPA');
         validate = true;
      }
      if (document.getElementById("txtGradPrMarkCGPA").value == 'Percentage') {
         if (document.getElementById("txtGradmarks").value == '') {
            input_if('txtGradmarks', "Please enter Marks Obtained / गुण मिळाले under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradmarks');
         }
         if (document.getElementById("txtGradtotalmarks").value == '') {
            input_if('txtGradtotalmarks', "Please enter Maximum Marks / कमाल गुण under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradtotalmarks');
         }
         if (document.getElementById("txtGradper").value == '') {
            input_if('txtGradper', "Please enter Percentage of Marks / गुणांची टक्केवारी under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradper');
         }
      }
      if (document.getElementById("txtGradPrMarkCGPA").value == 'Grade of Marks'  && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txtGradGrade").value == '') {
            input_if('txtGradGrade', "Please enter Grade of Marks / गुणांची श्रेणी under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradGrade');
         }
      }
      if (document.getElementById("txtGradPrMarkCGPA").value == 'CGPA'  && $('#txtExServiceman').val() == 'No') {
         if (document.getElementById("txtGradCGPA").value == '') {
            input_if('txtGradCGPA', "Please enter CGPA obtained / CGPA मिळाले under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradCGPA');
         }
         if (document.getElementById("txtGradMaxCGPA").value == '') {
            input_if('txtGradMaxCGPA', "Please enter Maximum CGPA/ कमाल CGPA under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradMaxCGPA');
         }
         if (document.getElementById("txtGradMFactor").value == '') {
            input_if('txtGradMFactor', "Please enter CGPA Multiplying Factor under Degree Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtGradMFactor');
         }
      }
	}
   }
   
   
   //Post Graduation details---------------------------
   if (ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YY' || ($('#txtPGDegree').val() != '' || $('#txtPGInstiPassfrom').val() != '' || $('#txtPGPrMarkCGPA').val() != '' || $('#txtPGdate').val() != '')) {
      if (document.getElementById("txtPGDegree").value == '') {
         input_if('txtPGDegree', "Please enter Qualification Degree / पदवी तपशील under Any Other Quaification Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtPGDegree');
      }
      if (document.getElementById("txtPGDegree").value == 'Others') {
         if (document.getElementById("txtPGODegree").value == '') {
            input_if('txtPGODegree', "Please enter Other Qualification Degree from under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGODegree');
         }
      }
      if (document.getElementById("txtPGInstiPassfrom").value == '') {
         input_if('txtPGInstiPassfrom', "Please enter Institute passed from/ उत्तीर्ण झालेल्या संस्थेचे नाव under Any Other Quaification Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtPGInstiPassfrom');
      }
      // if (document.getElementById("txtPGSubject").value == '') {
         // drop_select_if('PGSubject', "Please select Subjects under Any Other Quaification Details.");
         // validate = false;
         // return false;
      // } else {
         // validate = true;
         // input_else('PGSubject');
      // }
      if (document.getElementById("txtPGSubject").value == 'Others') {
         if (document.getElementById("txtPGOSubject").value == '') {
            input_if('txtPGOSubject', "Please enter Other Subjects under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGOSubject');
         }
      }
      if (document.getElementById("txtPGdate").value == '') {
         Dob_if('txtPGdate', "Please select Month and Year of Passing / उत्तीर्ण होण्याचा महिना आणि वर्ष under Any Other Quaification Details.");
         validate = false;
         return false;
      } else {
         Dob_else('txtPGdate');
         validate = true;
      }
      if (document.getElementById("txtPGPrMarkCGPA").value == '') {
         drop_select_if('txtPGPrMarkCGPA', "Please select Percentage/Grade of Marks/CGPA / टक्केवारी/गुणांची श्रेणी/CGPA under Any Other Quaification Details.");
         validate = false;
         return false;
      } else {
         input_else('txtPGPrMarkCGPA');
         validate = true;
      }
      if (document.getElementById("txtPGPrMarkCGPA").value == 'Percentage') {
         if (document.getElementById("txtPGmarks").value == '') {
            input_if('txtPGmarks', "Please enter Marks Obtained/ गुण मिळाले under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGmarks');
         }
         if (document.getElementById("txtPGtotalMarks").value == '') {
            input_if('txtPGtotalMarks', "Please enter Maximum Marks / कमाल गुण under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGtotalMarks');
         }
         if (document.getElementById("txtPGper").value == '') {
            input_if('txtPGper', "Please enter Percentage of Marks / गुणांची टक्केवारी under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGper');
         }
      }
      if (document.getElementById("txtPGPrMarkCGPA").value == 'Grade of Marks') {
         if (document.getElementById("txtPGGrade").value == '') {
            input_if('txtPGGrade', "Please enter Grade of Marks / गुणांची श्रेणी under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGGrade');
         }
      }
      if (document.getElementById("txtPGPrMarkCGPA").value == 'CGPA') {
         if (document.getElementById("txtPGCGPA").value == '') {
            input_if('txtPGCGPA', "Please enter CGPA obtained/CGPA मिळाले under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGCGPA');
         }
         if (document.getElementById("txtPGMaxCGPA").value == '') {
            input_if('txtPGMaxCGPA', "Please enter Maximum CGPA/ कमाल CGPA under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGMaxCGPA');
         }
         if (document.getElementById("txtPGMFactor").value == '') {
            input_if('txtPGMFactor', "Please enter CGPA Multiplying Factor under Any Other Quaification Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtPGMFactor');
         }
      }
   }
   //Any other Higher Qualification Details--------1111111-------------------
   if (ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YY' || ($('#txtHighQual1Degree').val() != '' || $('#txtHighQual1Institutefrom').val() != '' || $('#txtHighQual1PrMarkCGPA').val() != '' || $('#txtHighQual1date').val() != '')) {
      if (document.getElementById("txtHighQual1Degree").value == '') {
         drop_select_if('HighQual1Degree', "Please select Qualification Degree under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('HighQual1Degree');
      }
      if (document.getElementById("txtHighQual1Degree").value == 'Others') {
         if (document.getElementById("txtHighQual1ODegree").value == '') {
            input_if('txtHighQual1ODegree', "Please enter Other Qualification Degree from under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1ODegree');
         }
      }
      if (document.getElementById("txtHighQual1Institutefrom").value == '') {
         input_if('txtHighQual1Institutefrom', "Please enter Institute passed from under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtHighQual1Institutefrom');
      }
      if (document.getElementById("txtHighQual1Subject").value == '') {
         drop_select_if('HighQual1Subject', "Please select Subjects under Any other Higher Qualification Details 1.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('HighQual1Subject');
      }
      if (document.getElementById("txtHighQual1Subject").value == 'Others') {
         if (document.getElementById("txtHighQual1OSubject").value == '') {
            input_if('txtHighQual1OSubject', "Please enter Other Subjects under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1OSubject');
         }
      }
      if (document.getElementById("txtHighQual1date").value == '') {
         Dob_if('txtHighQual1date', "Please select Year of Passing under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         Dob_else('txtHighQual1date');
         validate = true;
      }
      if (document.getElementById("txtHighQual1PrMarkCGPA").value == '') {
         drop_select_if('txtHighQual1PrMarkCGPA', "Please select Percentage/Grade of Marks/CGPA under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         input_else('txtHighQual1PrMarkCGPA');
         validate = true;
      }
      if (document.getElementById("txtHighQual1PrMarkCGPA").value == 'Percentage') {
         if (document.getElementById("txtHighQual1marks").value == '') {
            input_if('txtHighQual1marks', "Please enter Marks Obtained under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1marks');
         }
         if (document.getElementById("txtHighQual1totalmarks").value == '') {
            input_if('txtHighQual1totalmarks', "Please enter Maximum Marks under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1totalmarks');
         }
         if (document.getElementById("txtHighQual1per").value == '') {
            input_if('txtHighQual1per', "Please enter Percentage of Marks under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1per');
         }
      }
      if (document.getElementById("txtHighQual1PrMarkCGPA").value == 'Grade of Marks') {
         if (document.getElementById("txtHighQual1Grade").value == '') {
            input_if('txtHighQual1Grade', "Please enter Grade of Marks under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1Grade');
         }
      }
      if (document.getElementById("txtHighQual1PrMarkCGPA").value == 'CGPA') {
         if (document.getElementById("txtHighQual1CGPA").value == '') {
            input_if('txtHighQual1CGPA', "Please enter CGPA obtained under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1CGPA');
         }
         if (document.getElementById("txtHighQual1MaxCGPA").value == '') {
            input_if('txtHighQual1MaxCGPA', "Please enter Maximum CGPA under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1MaxCGPA');
         }
         if (document.getElementById("txtHighQual1MFactor").value == '') {
            input_if('txtHighQual1MFactor', "Please enter CGPA Multiplying Factor under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual1MFactor');
         }
      }
   }
   //Any other Higher Qualification Details--------222222-------------------
   if (ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YY' || ($('#txtHighQual2Degree').val() != '' || $('#txtHighQual2Institutefrom').val() != '' || $('#txtHighQual2PrMarkCGPA').val() != '' || $('#txtHighQual2date').val() != '')) {
      if (document.getElementById("txtHighQual2Degree").value == '') {
         drop_select_if('HighQual2Degree', "Please select Qualification Degree under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('HighQual2Degree');
      }
      if (document.getElementById("txtHighQual2Degree").value == 'Others') {
         if (document.getElementById("txtHighQual2ODegree").value == '') {
            input_if('txtHighQual2ODegree', "Please enter Other Qualification Degree from under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2ODegree');
         }
      }
      if (document.getElementById("txtHighQual2Institutefrom").value == '') {
         input_if('txtHighQual2Institutefrom', "Please enter Institute passed from under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('txtHighQual2Institutefrom');
      }
      if (document.getElementById("txtHighQual2Subject").value == '') {
         drop_select_if('HighQual2Subject', "Please select Subjects under Any other Higher Qualification Details 2.");
         validate = false;
         return false;
      } else {
         validate = true;
         input_else('HighQual2Subject');
      }
      if (document.getElementById("txtHighQual2Subject").value == 'Others') {
         if (document.getElementById("txtHighQual2OSubject").value == '') {
            input_if('txtHighQual2OSubject', "Please enter Other Subjects under lntermediate (12th) Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2OSubject');
         }
      }
      if (document.getElementById("txtHighQual2date").value == '') {
         Dob_if('txtHighQual2date', "Please select Year of Passing under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         Dob_else('txtHighQual2date');
         validate = true;
      }
      if (document.getElementById("txtHighQual2PrMarkCGPA").value == '') {
         drop_select_if('txtHighQual2PrMarkCGPA', "Please select Percentage/Grade of Marks/CGPA under Post Graduation Details.");
         validate = false;
         return false;
      } else {
         input_else('txtHighQual2PrMarkCGPA');
         validate = true;
      }
      if (document.getElementById("txtHighQual2PrMarkCGPA").value == 'Percentage') {
         if (document.getElementById("txtHighQual2marks").value == '') {
            input_if('txtHighQual2marks', "Please enter Marks Obtained under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2marks');
         }
         if (document.getElementById("txtHighQual2totalmarks").value == '') {
            input_if('txtHighQual2totalmarks', "Please enter Maximum Marks under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2totalmarks');
         }
         if (document.getElementById("txtHighQual2per").value == '') {
            input_if('txtHighQual2per', "Please enter Percentage of Marks under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2per');
         }
      }
      if (document.getElementById("txtHighQual2PrMarkCGPA").value == 'Grade of Marks') {
         if (document.getElementById("txtHighQual2Grade").value == '') {
            input_if('txtHighQual2Grade', "Please enter Grade of Marks under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2Grade');
         }
      }
      if (document.getElementById("txtHighQual2PrMarkCGPA").value == 'CGPA') {
         if (document.getElementById("txtHighQual2CGPA").value == '') {
            input_if('txtHighQual2CGPA', "Please enter CGPA obtained under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2CGPA');
         }
         if (document.getElementById("txtHighQual2MaxCGPA").value == '') {
            input_if('txtHighQual2MaxCGPA', "Please enter Maximum CGPA under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2MaxCGPA');
         }
         if (document.getElementById("txtHighQual2MFactor").value == '') {
            input_if('txtHighQual2MFactor', "Please enter CGPA Multiplying Factor under Post Graduation Details.");
            validate = false;
            return false;
         } else {
            validate = true;
            input_else('txtHighQual2MFactor');
         }
      }
   }
   
    // if (document.getElementById("txtTyMSC").value == '') {
      // drop_radio_if('txtTyMSC', "Please Select Have you done MS-CIT/ Equivalant Certification? / आपण MS-CIT अथवा समकक्ष संगणक अर्हता धारण केली आहे का? under Computer Qualification/ संगणक अर्हता .");
      // validate = false;
      // return false;
   // } else {
      // input_else('txtTyMSC');
   // }
   

   // Exp details+++++++++++++++++++++++++++++++++
   // if($("#txtExpYN").val()=='Yes') 
   // {  
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') {
      // if ($("#ON1").val() == '') {
      //    alert_if("Please enter Name of the Organisation for row 1 under Work Experience Details.");
      //    $('#ON1').focus();
      //    return false;
      // }
      // else { validate = true; }
      // if ($("#PN1").val() == '') {
      //    alert_if("Please enter Post held for row 1 under Work Experience Details..");
      //    $('#PN1').focus();
      //    return false;
      // }
      // else { validate = true; }
      // if ($("#SD1").val() == '') {
      //    alert_if("Please enter Start date of service for row 1 under Work Experience Details.");
      //    $('#SD1').focus();
      //    return false;
      // }
      // else { validate = true; }
      // if ($("#PS1").val() == '') {
      //    alert_if("Please enter Pay Scale/ CTC of the post held for row 1 under Work Experience Details.");
      //    return false;
      // }
      // else { validate = true; }
      // if ($("#ED1").val() == '') {
      //    alert_if("Please enter End  date of service for row 1 under Work Experience Details.");
      //    $('#ED1').focus();
      //    return false;
      // }
      // else { validate = true; }

      for (var i = 1; i <= maxExpRows; i++) {
         if (document.getElementById("PartATableData_row" + i).style.display == "") {
            if (document.getElementById("ON" + i).value != "" || document.getElementById("SD" + i).value != "" || document.getElementById("ED" + i).value != "" || document.getElementById("PN" + i).value != "" || document.getElementById("PS" + i).value != "") {
               if (document.getElementById("ON" + i).value == "" || document.getElementById("SD" + i).value == "" || document.getElementById("ED" + i).value == "" || document.getElementById("PN" + i).value == "") {
                  alert_if("Please fill all details of row " + i + " under Experience Details");
                  validate = false;
                  return false;
                  break;
               }
               else { validate = true; }
               if (document.getElementById("PS" + i).value == "Government" || document.getElementById("PS" + i).value == "Semi Government") {
                  if (document.getElementById("NOC" + i).value == "") {
                     alert_if("Please enter NOC Details of row " + i + " under Experience Details ");
                     validate = false;
                     return false;
                     break;
                  }
                  else { validate = true; }
               }



            }
         }
      }
   }
   
   // compareDDMMYY('SD1','txtDrivingIssueDate','Driving License Issue  Date');
   
   if ($("#exYr").val() < Number(ConfigurationObj.ExperienceDetailsReq.split('~')[1])) {
      alert_if("You Need to Have Minimum " + ConfigurationObj.ExperienceDetailsReq.split('~')[1] + " Years of Experience to  apply for this post");
      validate = false;
      return false;
   }
   else {
      validate = true;
   }
   
   // }
   if (freezeForm("id") == false) {
      validate = "false"; return false;
   }
   // -------------
   $('#txtTab4Saved').val("Saved");
   setTabNo = "31";
   return true;
}
function validateTestCenterDetails() {
   trimSpacesFromAllTextBox();
   if ($("#TestState1").val() == '' && NoofTestCitiesReq >= 1 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestState1', "Please select Preferred Test State 1");
      return false;
   } else { input_else('TestState1'); }
   if ($("#TestCity1").val() == '' && NoofTestCitiesReq >= 1 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestCity1', "Please select Preferred Test City 1");
      return false;
   } else { input_else('TestCity1'); }
   if ($("#TestState2").val() == '' && NoofTestCitiesReq >= 2 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestState2', "Please select Preferred Test State 2");
      return false;
   } else { input_else('TestState2'); }
   if ($("#TestCity2").val() == '' && NoofTestCitiesReq >= 2 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestCity2', "Please select Preferred Test City 2");
      return false;
   } else { input_else('TestCity2'); }
   if ($("#TestState3").val() == '' && NoofTestCitiesReq >= 3 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestState3', "Please select Preferred Test State 3");
      return false;
   } else { input_else('TestState3'); }
   if ($("#TestCity3").val() == '' && NoofTestCitiesReq >= 3 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestCity3', "Please select Preferred Test City 3");
      return false;
   } else { input_else('TestCity3'); }
   if ($("#TestState4").val() == '' && NoofTestCitiesReq >= 4 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestState4', "Please select Preferred Test State 4");
      return false;
   } else { input_else('TestState4'); }
   if ($("#TestCity4").val() == '' && NoofTestCitiesReq >= 4 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestCity4', "Please select Preferred Test City 4");
      return false;
   } else { input_else('TestCity4'); }
   if ($("#TestState5").val() == '' && NoofTestCitiesReq >= 5 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestState5', "Please select Preferred Test State 5");
      return false;
   } else { input_else('TestState5'); }
   if ($("#TestCity5").val() == '' && NoofTestCitiesReq >= 5 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestCity5', "Please select Preferred Test City 5");
      return false;
   } else { input_else('TestCity5'); }
   if ($("#TestState6").val() == '' && NoofTestCitiesReq >= 6 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestState6', "Please select Preferred Test State 6");
      return false;
   } else { input_else('TestState6'); }
   if ($("#TestCity6").val() == '' && NoofTestCitiesReq >= 6 && ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      drop_select_if('TestCity6', "Please select Preferred Test City 6");
      return false;
   } else { input_else('TestCity6'); }
   if (eval(CheckTestCenter())) {
      $('#txtTab5Saved').val("Saved");
      setTabNo = "32";
      return true;
   } else {
      validate = false;
      return false;
   }
}
function CheckTestCenter() {
   // if(ConfigurationObj.TestCityReq.split('~')[0]=='YY'){}
   for (var i = 1; i <= 3; i++) {
      for (var k = 1; k <= 3; k++) {
         if (i != k) {
            if (document.getElementById('txtTestCity' + i).value == document.getElementById('txtTestCity' + k).value && (document.getElementById('txtTestCity' + i).value != '') && (document.getElementById('txtTestCity' + k).value != '')) {
               alert_if('Please select different Test City  / प्राधान्य परीक्षा केंद्र .');
               $("#txtTestCity" + k).val(""); $("#txtTestCity" + k).val(""); $("#txtTestCity" + k).selectpicker('refresh');
               validate = false;
               return false;
            }
         }
      }
   }
   return true;
}
function validateDocuments() {
   trimSpacesFromAllTextBox();
   var stringToSplit = document.getElementById("txtFilePath").value;
   var separator = '||';
   var uploadCheck1 = splituploadDocsString(stringToSplit, separator, 'txtPhotoPath');
   var uploadCheck2 = splituploadDocsString(stringToSplit, separator, 'txtPhotoPath_Upload');
   var uploadCheck3 = splituploadDocsString(stringToSplit, separator, 'txtSignaturePath');
   var uploadCheck4 = splituploadDocsString(stringToSplit, separator, 'txt10thCert'); var uploadCheck5 = splituploadDocsString(stringToSplit, separator, 'txt10ClassMarksheet'); var uploadCheck6 = splituploadDocsString(stringToSplit, separator, 'txt12thCert'); var uploadCheck7 = splituploadDocsString(stringToSplit, separator, 'txt12ClassMarksheet'); var uploadCheck8 = splituploadDocsString(stringToSplit, separator, 'txtGraduationCert'); var uploadCheck9 = splituploadDocsString(stringToSplit, separator, 'txtGraduationMark'); var uploadCheck10 = splituploadDocsString(stringToSplit, separator, 'txtPostGradCert'); var uploadCheck11 = splituploadDocsString(stringToSplit, separator, 'txtPostGradMark'); var uploadCheck12 = splituploadDocsString(stringToSplit, separator, 'txtAddQualCert'); var uploadCheck14 = splituploadDocsString(stringToSplit, separator, 'txtStateDomicile'); var uploadCheck15 = splituploadDocsString(stringToSplit, separator, 'txtExpCerti'); var uploadCheck19 = splituploadDocsString(stringToSplit, separator, 'txtOHigherQualCert'); var uploadCheck20 = splituploadDocsString(stringToSplit, separator, 'txtNocCert'); var uploadCheck21 = splituploadDocsString(stringToSplit, separator, 'txtCastCerti'); var uploadCheck22 = splituploadDocsString(stringToSplit, separator, 'txtESMCerti'); var uploadCheck24 = splituploadDocsString(stringToSplit, separator, 'txtEWSCerti'); var uploadCheck25 = splituploadDocsString(stringToSplit, separator, 'txtSportCerti'); var uploadCheck26 = splituploadDocsString(stringToSplit, separator, 'txtDisabilityCert'); var uploadCheck30 = splituploadDocsString(stringToSplit, separator, 'txtOtherDoc'); var uploadCheck31 = splituploadDocsString(stringToSplit, separator, 'txtDiplomaCert'); var uploadCheck32 = splituploadDocsString(stringToSplit, separator, 'txtDiplomaMark');
   var uploadCheck33 = splituploadDocsString(stringToSplit, separator, 'txtExpCerti2');
   var uploadCheck34 = splituploadDocsString(stringToSplit, separator, 'txtExpCerti3');
   var uploadCheck35 = splituploadDocsString(stringToSplit, separator, 'txtNonCreamLayerCert');
   var uploadCheck36 = splituploadDocsString(stringToSplit, separator, 'txtNameCerti');
   var uploadCheck37 = splituploadDocsString(stringToSplit, separator, 'txtOrphaneCert');
   var uploadCheck38 = splituploadDocsString(stringToSplit, separator, 'txtSucCerti');
   var uploadCheck39 = splituploadDocsString(stringToSplit, separator, 'txtIDProof1');
   var uploadCheck40 = splituploadDocsString(stringToSplit, separator, 'txt789ClassMarksheet');
   var uploadCheck42 = splituploadDocsString(stringToSplit, separator, 'txtMarathiCerti');
   var uploadCheck45 = splituploadDocsString(stringToSplit, separator, 'txtPartTimeCerti');
   // var uploadCheck46 = splituploadDocsString(stringToSplit, separator, 'txtFamilyPlan');
   
   if (uploadCheck1 == 0) {
      alert_if("Please Capture your live photograph.");
      validate = false;
      return false;
   }
   if (uploadCheck2 == 0) {
      alert_if("Please Upload the scanned copy ofthe recent passport size photo / तुमच्या अलीकडील पासपोर्ट आकाराच्या फोटोची स्कॅन केलेली प्रत अपलोड करा.");
      validate = false;
      return false;
   }
   if (uploadCheck3 == 0) {
      alert_if("Please  Upload your scanned signature / स्वाक्षरीची स्कॅन केलेली प्रत अपलोड करा..");
      validate = false;
      return false;
   }
   if (uploadCheck40 == 0 && $("#txt789thper").val() == 'Yes') {
      alert_if("Please Upload Residence proof in PESA area / पेसा क्षेत्रातील रहिवासी पुरावा अपलोड करा .");
      validate = false;
      return false;
   }
   if (uploadCheck4 == 0 && ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YY') {
      alert_if("Please  Upload your scanned 10th class certificate. / तुमची 10वीची प्रमाणपत्र / मार्कशीटअपलोड करा.");
      validate = false;
      return false;
   }
   // if (uploadCheck5 == 0 && ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YY') {
   //    alert_if("Please  Upload your scanned 10th class Marksheet.");
   //    validate = false;
   //    return false;
   // }
   if (uploadCheck6 == 0 && ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY') {
      alert_if("Please Upload your scanned 12th class certificate./ तुमची स्कॅन केलेली १२वीची मार्कशीट/समतुल्य प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   // if (uploadCheck7 == 0 && ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY') {
   //    alert_if("Please Upload your scanned 12th class Marksheet.");
   //    validate = false;
   //    return false;
   // }
   if (uploadCheck31 == 0 && ($('#txtDiplomaName').val() != '' || $('#txtDiplomaInsti').val() != '' || $('#txtDipPerMarkCGPA').val() != '' || $('#txtDipPassDate').val() != '')) {
      alert_if("Please Upload your scanned Diploma certificate. / तुमचे डिप्लोमा प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   // if (uploadCheck32 == 0 && ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YY') {
   //    alert_if("Please Upload your scanned Diploma Marksheet.");
   //    validate = false;
   //    return false;
   // }
   //12th or Diploma
   if ((ConfigurationObj["12orDipReq"].split('~')[0] == 'YN' && $('#txtExServiceman').val() == 'No') && ($('#txtDiplomaName').val() != '' || $('#txtDiplomaInsti').val() != '' || $('#txtDipPerMarkCGPA').val() != '' || $('#txtDipPassDate').val() != '')) {
      $("#txtDiplomaCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txtDiplomaMark_span").parents(".efrmgen-flexrow").find('sup').html('*');
      if (uploadCheck31 == 0) {
         alert_if("Please Upload your scanned Diploma certificate. / तुमचे डिप्लोमा प्रमाणपत्र अपलोड करा.");
         validate = false;
         return false;
      }
      // if (uploadCheck32 == 0) {
      //    alert_if("Please Upload your scanned Diploma Marksheet.");
      //    validate = false;
      //    return false;
      // }
   }
   if ((ConfigurationObj["12orDipReq"].split('~')[0] == 'YN' && $('#txtExServiceman').val() == 'No') && ($('#txt12thBoard').val() != '' || $('#txt12thschool').val() != '' || $('#txt12PerMarkCGPA').val() != '' || $('#txt12thYOP').val() != '')) {
      $("#txt12thCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txt12ClassMarksheet_span").parents(".efrmgen-flexrow").find('sup').html('*');
      if (uploadCheck6 == 0) {
         alert_if("Please Upload your scanned 12th class certificate./ तुमची स्कॅन केलेली १२वी वर्गाची मार्कशीट/समतुल्य प्रमाणपत्र अपलोड करा.");
         validate = false;
         return false;
      }
      // if (uploadCheck7 == 0) {
      //    alert_if("Please Upload your scanned 12th class Marksheet.");
      //    validate = false;
      //    return false;
      // }
   }
   if (uploadCheck8 == 0 && ($('#txtGradDegree').val() != '' || $('#txtGradInsti').val() != '' || $('#txtGradPrMarkCGPA').val() != '' || $('#txtgraddate').val() != '')) {
      alert_if("Please Upload your scanned Graduation degree certificate. / तुमचे पदवी प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   // if (uploadCheck9 == 0 && ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YY') {
   //    alert_if("Please Upload your scanned Graduation degree Marksheet.");
   //    validate = false;
   //    return false;
   // }
   // if (uploadCheck10 == 0 && ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YY') {
      // alert_if("Please Upload your Post Graduation degree certificate. / तुमचे पदवी प्रमाणपत्र अपलोड करा.");
      // validate = false;
      // return false;
   // }
   // if (uploadCheck11 == 0 && ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YY') {
   //    alert_if("Please Upload your Post Graduation degree Marksheet.");
   //    validate = false;
   //    return false;
   // }
   if (uploadCheck12 == 0 && ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YY') {
      alert_if("Please Upload your Additional Qualification Certificate.");
      validate = false;
      return false;
   }
   if (uploadCheck14 == 0 && $("#txtDomicile").val() == "Yes" && ConfigurationObj.DomcileDetailsReq.split('~')[2] == 'YY') {
      // if ($('#txtCategory').val() != "Open" && $('#txtCategory').val() != "Economically Weaker Section (EWS)") {//-n-
         alert_if("Please Upload your Domicile Certificate/birth Certificate/school leaving Certificate / अधिवास प्रमाणपत्र / जन्म दाखला / शाळा सोडल्याचा दाखला .");
         validate = false;
         return false;
      // }
   }
   if (uploadCheck15 == 0 && ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN' && $("#ON1").val() != "") {
      alert_if("Please Upload your Course 1 Certificate.");
      validate = false;
      return false;
   }
   if (uploadCheck33 == 0 && ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN' && $("#ON2").val() != "") {
      alert_if("Please Upload your Course 2 Certificate.");
      validate = false;
      return false;
   }
   if (uploadCheck34 == 0 && ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN' && $("#ON3").val() != "") {
      alert_if("Please Upload your Course 3 Certificate.");
      validate = false;
      return false;
   }
   if (uploadCheck36 == 0 && $('#txtNameChanged').val() == "Yes") {
      alert_if("Please Upload your Name Change Certificate / तुमचे नाव बदलाचे प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   if (uploadCheck22 == 0 && $('#txtExServiceman').val() == "Yes") {
      alert_if("Please Upload ESM I-Card / NOC/PPO / Released Order / माजी सैनिक असल्याचे ओळखपत्र/ नाहरकत प्रमाणपत्र/ पी.पी.ओ /रिलीज ऑर्डर .");
      validate = false;
      return false;
   }
   if (uploadCheck45 == 0 && $('#txtPartTimeEmp').val() == "Yes") {
      alert_if("Please Upload your Part Time Employee Certificate.");
      validate = false;
      return false;
   }
   if (uploadCheck37 == 0 && $('#txtCurrentOrgEmp').val() == "Yes") {
      alert_if("Please Upload your Orphan Certificate./ तुमचे अनाथ प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   if (uploadCheck35 == 0 && $('#txtKMigrant').val() == "Yes") {
      alert_if("Please Upload your Non Creamy Layer Category Certificate / आपले नॉन क्रीमी लेयर प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   if (uploadCheck39 == 0 && (ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YY' || ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YN')) {
      alert_if("Please Upload your ID Proof Document./ तुमची आयडी प्रूफ कागदपत्रे 1 आणि 2 अपलोड करा.");
      validate = false;
      return false;
   }
   if (uploadCheck19 == 0 && ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YY') {
      alert_if("Please Upload your other Higher qualification degree details certificate.");
      validate = false;
      return false;
   }
   if (uploadCheck20 == 0 && $('#txtNoc').val() == "Yes" && ConfigurationObj.DeptEmployeeDetailsReq.split('~')[0] == 'YY') {
      alert_if("Please Upload your NOC Certificate.");
      validate = false;
      return false;
   }
   if (uploadCheck21 == 0 && $('#txtCategory').val() != "Open" && $('#txtCategory').val() != "Economically Weaker Section (EWS)" && ConfigurationObj.Category.split('~')[2] == 'YY') {
      alert_if("Please Upload your Caste Certificate / तुमचे जात प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }

   if (uploadCheck24 == 0 && $('#txtCategory').val() == "Economically Weaker Section (EWS)" && ConfigurationObj.Category.split('~')[2] == 'YY') {
      alert_if("Please Upload your Economically Weaker Section (EWS) Certificate / तुमचे EWS श्रेणी प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   if (uploadCheck25 == 0 && $('#txtSportPerson').val() == "Yes" && ConfigurationObj.SportsPersonDetailsReq.split('~')[0] == 'YY') {
      alert_if("Please Upload your Sportsperson Certificate / आपले खेळाडू प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   if (uploadCheck26 == 0 && $('#txtPWD').val() == "Yes") {
      alert_if("Please Upload your Divyang/PWD Certificate / आपले दिव्यांग / पीडब्ल्यूडी प्रमाणपत्र अपलोड करा.");
      validate = false;
      return false;
   }
   
   
   // if (uploadCheck46 == 0 && ($("#txtNumberofChilds").val() != '' && ($("#txtNumberofChilds").val() > 0 || $("#txtNumberofChilds").val() == 'More than 2'))) {
      // alert_if("Please Upload your Family Planning Certificate / आपले कुटुंब नियोजन प्रमाणपत्र अपलोड करा.");
      // validate = false;
      // return false;
   // }

   if (document.getElementById("CaptureCheck").value == "" || document.getElementById("CaptureCheck").value != "Viewed") {
      alert_if("Please view Captured Image before Submit.");
      validate = "false";
      return false;
   } else {
      validate = "true";
   }
   if (document.getElementById("PhotoCheck").value == "" || document.getElementById("PhotoCheck").value != "Viewed") {
      alert_if("Please view 'Photograph' before Submit.");
      validate = "false";
      return false;
   } else {
      validate = "true";
   }
   if (document.getElementById("SignCheck").value == "" || document.getElementById("SignCheck").value != "Viewed") {
      alert_if("Please view 'Signature' before Submit.");
      validate = "false";
      return false;
   } else {
      validate = "true";
   }
   return true;
}
function imageUploadNewCommonFunctionFrameworkAfterAjaxCall() {
   setTimeout("$('a[data-statickey=Close]').on('click', setUploadMessage)", 1000);
   $('#txtPhotoPath-upload-zone .dz-default span').hide();
   $('#txtPhotoPath-upload-zone').css({ 'pointer-events': 'none' });
   $('[data-statickey="CapturePhoto"]').html('Click here to Capture Photo');
}
function setUploadMessage() {
   // var fieldsArray = new Array('txtPhotoPath', 'txtPhotoPath_Upload', 'txtSignaturePath', 'txt10ClassMarksheet', 'txt12ClassMarksheet', 'txt10thCert', 'txt12thCert', 'txtGraduationCert', 'txtGraduationMark', 'txtPostGradCert', 'txtPostGradMark', 'txtAddQualCert', 'txtStateDomicile', 'txtExpCerti', 'txtOHigherQualCert', 'txtNocCert', 'txtCastCerti', 'txtESMCerti', 'txtEWSCerti', 'txtSportCerti', 'txtDisabilityCert', 'txtOtherDoc', 'txtDiplomaMark', 'txtDiplomaCert', 'txtTransactionReceipt', 'txtExpCerti2', 'txtExpCerti3', 'txtNonCreamLayerCert', 'txtOrphaneCert', 'txtNameCerti', 'txtIDProof1','txtShortHandCerti','txtMarathiCerti','txtEnglishCerti','txt789ClassMarksheet');
   var fieldsArray = new Array('txtPhotoPath','txtPhotoPath_Upload', 'txtSignaturePath', 'txt10ClassMarksheet', 'txt12ClassMarksheet', 'txt10thCert', 'txt12thCert', 'txtGraduationCert', 'txtGraduationMark', 'txtPostGradCert', 'txtPostGradMark', 'txtAddQualCert', 'txtStateDomicile', 'txtExpCerti', 'txtOHigherQualCert', 'txtNocCert', 'txtCastCerti', 'txtESMCerti', 'txtEWSCerti', 'txtSportCerti', 'txtDisabilityCert', 'txtOtherDoc', 'txtDiplomaMark', 'txtDiplomaCert', 'txtTransactionReceipt', 'txtExpCerti2', 'txtExpCerti3', 'txtNonCreamLayerCert', 'txtOrphaneCert', 'txtNameCerti', 'txtIDProof1','txtMarathiCerti','txt789ClassMarksheet','txtPartTimeCerti');
   for (var index = 0; index < fieldsArray.length; index++) {
      if ($('#txtFileName').val().indexOf(fieldsArray[index]) > -1) {
         $('#' + fieldsArray[index] + '_span').addClass("fa fa-check");
      }
   }
   // for captured and uploaded photo
   if ($('#txtFileName').val().indexOf("txtPhotoPath") < 0 || $('#txtFileName').val().indexOf("txtPhotoPath_Upload") < 0) {
      $('#txtPhotoPath_span').removeClass("fa fa-check");
   }
   // if ($('#txtFileName').val().indexOf("txtPhotoPath_Upload") < 0) {
      // $('#txtPhotoPath_Upload_span').removeClass("fa fa-check");
   // }
   // for showing doc on veiw---------------------------------
   var idString = document.getElementById("txtFileName").value;
   var srcString = document.getElementById("txtFilePathEdit").value;
   var idArr = idString.split('||');
   var srcArr = srcString.split('||');
   for (var i = 0; i < idArr.length; i++) {
      // $('#'+idArr[i] + '_span').next("a").html("View").addClass("fa-eye").css("padding-left","10px");
      $('#' + idArr[i] + '_span').next("a").html("View").css("padding-left", "10px");
      $('#' + idArr[i] + '_span').next("a").attr("onclick", "showDoc(this.value);");
      $('#' + idArr[i] + '_span').next("a").val(srcArr[i]);
      // for captured and uploaded photo
      if (idArr[i] == "txtPhotoPath" || idArr[i] == "txtPhotoPath_Upload") {
      // if (idArr[i] == "txtPhotoPath_Upload") {
         $('#' + idArr[i] + '_a').attr("onclick", "showDoc(this.value);");
         $('#' + idArr[i] + '_a').val(srcArr[i]);
         $('#' + idArr[i] + '_a').removeClass("hidden");
      }
	  // }

      // Photo Signature View Functions
      $('#txtPhotoPath_Upload_a').click(function () {
         $('#PhotoCheck').val("Viewed");
      });
      $('#txtPhotoPath_a').click(function () {
         $('#CaptureCheck').val("Viewed");
      });
      $('#txtSignaturePath_span').next("a").click(function () {
         $('#SignCheck').val("Viewed");
      });
   }
   return true;
}
function showDoc(val) {
   window.open(val, "", "status=yes,height=400,width=800,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes,top=100; left=100; ");
}
function setFeeWithRespectiveCourse() {
   // txtCategory_UR_500// txtDomicile_No_500// txtGovtEmp_Yes_500// txtCategory_Other Backward Class (OBC)_300// txtExServiceman_Yes_300// txtGender_Female_250// txtCategory_Scheduled Caste (SC)_200// txtCategory_Scheduled Tribes (ST)_200// txtCategory_Scheduled Tribes (ST)_200// txtCategory_Economically Weaker Sections (Economically Weaker Section (EWS))_200// txtPWD_Yes_100
   if (ConfigurationObj.Amount == undefined) {
      alert_if("There is some network issue. Kindly refresh the form or Logout and login again.");
      return false;
   }
   var amtarray = ConfigurationObj.Amount.split('~');
   for (i = 0; i < amtarray.length; i++) {
      var amtparameter = amtarray[i].split('_');
      if ($('#' + amtparameter[0]).val() == amtparameter[1]) {
         $('#txt_Amount').val(amtparameter[2]);
         $('#txt_Amount_span').html(amtparameter[2]);
      }
   }
   $('#txtAppName_span').html($('#txtAppName').val().toUpperCase());
   // $('#txtCheckAmount').val(ConfigurationObj.Amount);
   $('#payment_mode').val('online');
   $('#paymentGatewayType').val('online');


   // if ($('#payment_mode').val() == "online") {
   //    $('#paymentGatewayType').val('onlineT');
   // }
   // if ($('#payment_mode').val() == "Challan") {
   //    $('#paymentGatewayType').val('offline');
   //    $('#app_status').val("SubmittedOffline");
   // }
}
function checkGatewayType() {
   if ($('#txt_Amount').val() == 0) {
      $('[href="#paymentmode"],#paymentmode').css("display", "none");
      $('#payment_mode').val("offline");
      $('#paymentGatewayType').val('offline');
      $('#app_status').val("SubmittedOffline");
   } else {
      $('[href="#paymentmode"],#paymentmode').css("display", "");
      $('#payment_mode').val("");
      $("[name='payment_mode_R']").prop("checked", false);
      $('#paymentGatewayType').val('');
      $('#app_status').val("Submitted");
      // $('#paymentGatewayType').val('online')    
   }
}
function disableCheck(id) {
   document.getElementById(id).value = '';
   var radio = id + '_R';
   var rad = document.getElementsByName(radio);
   for (var i = 0; i < rad.length; i++) {
      rad[i].checked = false;
      rad[i].disabled = true;
   }
}
function removeCheck(id) {
   document.getElementById(id).value = '';
   var radio = id + '_R';
   var rad = document.getElementsByName(radio);
   for (var i = 0; i < rad.length; i++) {
      rad[i].checked = false;
   }
}
function removedisableCheck(id) {
   document.getElementById(id).value = '';
   var radio = id + '_R';
   var rad = document.getElementsByName(radio);
   for (var i = 0; i < rad.length; i++) {
      rad[i].disabled = false;
   }
}
function ReVerifyCheck(checkTrue = false) {
   trimSpacesFromAllTextBox();
   genericRegValidation();
   if (validate) {
      var ss = $("#reverifyTbl").find("[id^='verify']");
      var verCheck = false;
      for (var i = 0; i < ss.length; i++) {
         if ($(ss[i]).prop("checked") == false) {
            verCheck = false;
            break;
         } else {
            verCheck = true;
         }
      }
      if (verCheck) {
         $("#reverifyerror").hide(); $("#ReVerify").hide(); $("#RegSubmit").show();
      } else {
         if ($("#reverifydiv").is(':visible') && checkTrue) {
            alert_if("Please verify selected/entered value for unchecked field(s) and if selected/entered value is correct then please check check-box.")
         }
         $("#reverifyerror").show(); $("#ReVerify").show(); $("#RegSubmit").hide();
         $("#reverifyerror").html("Please verify selected/entered value for unchecked field(s) and if selected/entered value is correct then please check check-box.");
      }
      $("#reverifydiv").show("slow");
   }
   // else {alert('Please Select the Declaration.');validate=false;return false;
   // }
}
function reverifyData(id) {
   id = id.replace("_R", "");
   var val = $("#" + id).val();
   var lbl = $("#" + id).parents(".efmCls").find("label").html();
   var ss = $("#reverifyTbl").find("#verify" + id);
   if (ss.length > 0) {
      $("." + id + 1).html(val); $("#verify" + id).prop("checked", false);
      $("#reverifyerror").show(); $("#ReVerify").show(); $("#RegSubmit").hide();
      $("#reverifyerror").html("Please verify selected/entered value for unchecked field(s) and if selected/entered value is correct then please check check-box.");
   } else {
      var ap = `<tr class="efmCls">
      <td align="center">`+ lbl + `</td>
      <td align="center" class="`+ id + 1 + `">` + val + ` </td>
      <td align="center"><input id="verify`+ id + `" name="verify` + id + `" value="" type="checkbox" onchange="ReVerifyCheck()">
      </td></tr>`;
      $("#reverifyTbl").append(ap);
   }
   var verTblFields = $("#reverifyTbl [id^='verify']");
   for (var i = 0; i < verTblFields.length; i++) {
      var verId = $(verTblFields[i]).attr('id').slice(6)
      // console.log(verId+"1  ")
      $("." + verId + 1).html($("#" + verId).val());
      if ($("." + verId + 1).html() == "") {
         $("." + verId + 1).parent(".efmCls").remove();
      }
   }
}
function reverifyDataInEdit() {
   var ss = $(".reverify");
   for (var i = 0; i < ss.length; i++) {
      if ($(ss[i]).attr("id") != undefined) {
         reverifyData($(ss[i]).attr("id"));
      }
   }
}
/**************************ForgotPwd code start***********************************/
function validateIonCaptchaForgot1(button_id) {
   if (document.getElementById("useridForgotPwd").value == '') {
      alert("Please enter your Email Address.");
      return false;
   }
   var a = document.getElementById('captchaService_imageKey').value;
   var b = document.getElementById('captchaService_answer').value;
   var formId = 83978;
   var orgId = 32664;
   init_captcha();
   if (b == '') {
      alert_if("Please enter the Captcha.");
      return false;
   } else if (b != '') {
      var appSeqNo = '0';
      var userid = '0';
      if (document.getElementById('useridForgotPwd').value != '') {
         userid = document.getElementById('useridForgotPwd').value;
      }
      var paradetails = "txtEmail,e,a,b,c,d"; //txtEmail to be replaced by app_seq_no
      var http_request = fnGetXMLHttpObject();
      if (http_request != null) {
         var pValidationServlet = "";
         var pValidationServlet = "/EForms/eformactivationservlet";
         var actionId = "ForgotPwd";
         var arrayArg = new Array(formId, orgId, userid, '0', '0', '0', '0', paradetails, http_request);
         var argNum = 8;
         var parameterString = "actionId=" + actionId + "&argnum=" + argNum + "&captchaService_imageKey=" + a + "&captchaService_answer=" + b + "&appId=30";
         var parameters = new Array();
         for (var i = 0; i < arrayArg.length; i++) {
            if (arrayArg[i] != '') {
               parameterString += "&" + "args" + (i + 1) + "=" + encodeURI(arrayArg[i]);
            }
         }
         http_request.open('POST', pValidationServlet, true);
         http_request.onreadystatechange = function () {
            fnPwdN1(http_request, button_id);
         };
         http_request.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
         http_request.send(parameterString);
      }
   } else {
      alert("Please enter correct text shown in image");
      document.getElementById('captchaService_answer').value = '';
      init_captcha();
      document.getElementById(button_id).removeAttribute("disabled");
      return false;
   }
}
function fnPwdN1(http_request, button_id) {
   if (http_request.readyState == 4) {
      if (http_request.status == 200) {
         if (http_request.responseText != null) {
            check = http_request.responseText;
            if (check == 'Invalid Captcha' && check != null) {
               document.getElementById("myDiv").style.display = "inline";
               document.getElementById("myDiv").innerHTML = 'Please enter a valid captcha.';
            } else if (check == 'wrong details' && check != null) {
               document.getElementById("myDiv").style.display = "inline";
               document.getElementById("myDiv").innerHTML = 'If the details entered are correct then you will receive a mail shortly with your User ID and Password.';
            } else if (check == 'mail triggered' && check != null) {
               document.getElementById("myDiv").style.display = "inline";
               document.getElementById("myDiv").innerHTML = 'If the details entered are correct then you will receive a mail shortly with your User ID and Password.';
            } else {
               document.getElementById("myDiv").style.display = "inline";
               document.getElementById("myDiv").innerHTML = 'Please try again later.';
            }
            //document.getElementById(button_id).removeAttribute("disabled");
            clicked = "true";
         }
      }
   }
}
/**************************ForgotPwd code end***********************************/
// ************************Check browser****************************************/
function checkBrowser() {
   var isMobileefrm = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
   if (isMobileefrm) {
   } else {
      var navUserAgent = navigator.userAgent; var browserName = navigator.appName; var browserVersion = '' + parseFloat(navigator.appVersion); var majorVersion = parseInt(navigator.appVersion, 10); var tempNameOffset, tempVersionOffset, tempVersion;
      if ((tempVersionOffset = navUserAgent.indexOf("Opera")) != -1) {
         browserName = "Opera";
         browserVersion = navUserAgent.substring(tempVersionOffset + 6);
         if ((tempVersionOffset = navUserAgent.indexOf("Version")) != -1)
            browserVersion = navUserAgent.substring(tempVersionOffset + 8);
      } else if ((tempVersionOffset = navUserAgent.indexOf("MSIE")) != -1) {
         browserName = "Microsoft Internet Explorer";
         browserVersion = navUserAgent.substring(tempVersionOffset + 5);
      } else if ((tempVersionOffset = navUserAgent.indexOf("trident")) != -1 || (tempVersionOffset = navUserAgent.indexOf("Trident")) != -1) {
         browserName = "Microsoft Internet Explorer";
         var rv = navUserAgent.indexOf('rv:');
         browserVersion = parseInt(navUserAgent.substring(rv + 3, navUserAgent.indexOf('.', rv)), 10);
         browserVersion = browserVersion + ";";
      }
      else if ((tempVersionOffset = navUserAgent.indexOf("Edge")) != -1) {
         browserName = "Edge";
         browserVersion = navUserAgent.substring(tempVersionOffset + 5);
      }
      else if ((tempVersionOffset = navUserAgent.indexOf("Edg")) != -1) {
         browserName = "Edge Chromium";
         browserVersion = navUserAgent.substring(tempVersionOffset + 4);
      }
      else if ((tempVersionOffset = navUserAgent.indexOf("Chrome")) != -1) {
         browserName = "Chrome";
         browserVersion = navUserAgent.substring(tempVersionOffset + 7);
      } else if ((tempVersionOffset = navUserAgent.indexOf("Safari")) != -1) {
         browserName = "Safari";
         browserVersion = navUserAgent.substring(tempVersionOffset + 7);
         if ((tempVersionOffset = navUserAgent.indexOf("Version")) != -1)
            browserVersion = navUserAgent.substring(tempVersionOffset + 8);
      } else if ((tempVersionOffset = navUserAgent.indexOf("Firefox")) != -1) {
         browserName = "Firefox";
         browserVersion = navUserAgent.substring(tempVersionOffset + 8);
      } else if ((tempNameOffset = navUserAgent.lastIndexOf(' ') + 1) < (tempVersionOffset = navUserAgent.lastIndexOf('/'))) {
         browserName = navUserAgent.substring(tempNameOffset, tempVersionOffset);
         browserVersion = navUserAgent.substring(tempVersionOffset + 1);
         if (browserName.toLowerCase() == browserName.toUpperCase()) {
            browserName = navigator.appName;
         }
      }
      if ((tempVersion = browserVersion.indexOf(";")) != -1)
         browserVersion = browserVersion.substring(0, tempVersion);
      if ((tempVersion = browserVersion.indexOf(" ")) != -1)
         browserVersion = browserVersion.substring(0, tempVersion);
      var splitBrowserVersion = browserVersion.split(".");
      var browserVersionInt = Number(splitBrowserVersion[0]);
      if (browserName != "Chrome" && browserName != "Firefox" && browserName != "Edge Chromium") {
         alert("The requested web resource is not supported on your browser. \n\n This site is best viewed in : \n\n 1) Edge Chromium\n 2) Google Chrome (version 82 and above)\n 3) Mozilla Firefox (version 87 and above).");
         document.body.innerHTML = '';
         $('body').append("<div style='width:100%;color: red;/* text-align: center; */'><p style='text-align: center;font-size: 200%;font-weight: bold;'>The requested web resource is not supported on your browser !!!</p> <br><p style='text-align: left;font-size: 150%;font-weight: bold;margin-left: 30%;margin-top: 0px;'>This site is best viewed in : <br> 1) Edge Chromium<br> 2) Google Chrome (version 82 and above)<br> 3) Mozilla Firefox (version 87 and above).</p></div>");
      }
      else {
         if (browserName == "Chrome" && browserVersionInt < 59) {
            alert("The requested web resource is not supported on your browser. \n\n This site is best viewed in : \n\n 1) Edge Chromium\n 2) Google Chrome (version 59 and above)\n 3) Mozilla Firefox (version 56 and above).");
            document.body.innerHTML = '';
            $('body').append("<div style='width:100%;color: red;/* text-align: center; */'><p style='text-align: center;font-size: 200%;font-weight: bold;'>The requested web resource is not supported on your browser !!!</p> <br><p style='text-align: left;font-size: 150%;font-weight: bold;margin-left: 30%;margin-top: 0px;'>This site is best viewed in : <br> 1) Edge Chromium<br> 2) Google Chrome (version 82 and above)<br> 3) Mozilla Firefox (version 87 and above).</p></div>");
         }
         else if (browserName == "Firefox" && browserVersionInt < 56) {
            alert("The requested web resource is not supported on your browser. \n\n This site is best viewed in : \n\n 1) Edge Chromium\n 2) Google Chrome (version 82 and above)\n 3) Mozilla Firefox (version 87 and above).");
            document.body.innerHTML = '';
            $('body').append("<div style='width:100%;color: red;/* text-align: center; */'><p style='text-align: center;font-size: 200%;font-weight: bold;'>The requested web resource is not supported on your browser !!!</p> <br><p style='text-align: left;font-size: 150%;font-weight: bold;margin-left: 30%;margin-top: 0px;'>This site is best viewed in : <br> 1) Edge Chromium<br> 2) Google Chrome (version 82 and above)<br> 3) Mozilla Firefox (version 87 and above).</p></div>");
         }
      }
   }
}
//////////////////////////////////////// Developer Code///////////////Akash///////////////////////////////////
// age relaxation code---------------------start------------------
var AgeJson = '';
function showAjson(getAgeJson) {
   AgeJson = JSON.parse(getAgeJson);
}
function checkAge() {
   var age = Number($('#txtAyears').val()); //45
   var ageMonths = Number($('#txtAMonths').val()); var ageDays = Number($('#txtADays').val()); var iPost = $('#txtPostName').val(); var iCategory = $('#txtCategory').val(); var iPWD = $('#txtPWD').val(); var iFemale = $('#txtGender').val(); var iWidow = $('#txtMaritialStatus').val(); var iGovt = $('#txtGovtEmp').val(); var iService = $('#txtOgovt').val(); var iExservice = $('#txtExServiceman').val(); var iJnk = $('#txtKMigrant').val(); var iInput1 = $('#txtSportPerson').val(); var iInput2 = $('#txtCurrentOrgEmp').val(); var iInput3 = $('#txtEarthAffected').val(); var iInput4 = $('#txtProjAffected').val(); var iInput5 = $('#txtPartTimeEmp').val(); var iExserviceY = $('#txtExseryears').val(); var iExserviceM = $('#txtExserMonths').val();
   var iExserviceD = $('#txtExserDays').val();		 //set the day variable as 0 wen u dont want it to be calculated 
   var irconY = $('#txtIrcAgeYr').val();
   var irconM = $('#txtIrcMonths').val();
   var irconD = $('#txtIrcAgeDays').val();		 //set the day variable as 0 wen u dont want it to be calculated 
   var oPost = ''; var oCategory = ''; var oPWD = ''; var oFemale = ''; var oWidow = ''; var oGovt = ''; var oService = ''; var oExservice = ''; var oJnk = ''; var oInput1 = ''; var oInput2 = ''; var oInput3 = ''; var oInput4 = ''; var oInput5 = ''; var aaa = '';
   if (iPost != '') { oPost = iPost }
   if (iCategory != '') { oCategory = iCategory }
   if (iPWD != '' && iPWD == 'Yes') { oPWD = 'Y'; } else { oPWD = 'N'; }
   if (iFemale != '' && iFemale == 'Female') { oFemale = 'Y'; } else { oFemale = 'N'; }
   if (iWidow != '' && (iWidow == 'Yes' || iWidow == 'Widow')) { oWidow = 'Y'; } else { oWidow = 'N'; }
   if (iGovt != '' && iGovt == 'Yes') { oGovt = 'Y' + '_' + $('#txtEmpDuration').val() + '_0_0'; } else { oGovt = 'N'; }
   if (iService != '' && iService == 'Yes') { oService = 'Y'; } else { oService = 'N'; }
   
   if (iExservice != '' && iExservice == 'Yes' && iPWD == 'No') { oExservice = 'Y' + '_' + iExserviceY + '_' + iExserviceM + '_' + iExserviceD } else { oExservice = 'N'; }
   
   if (iJnk != '' && iJnk == 'Yes') { oJnk = 'Y'; } else { oJnk = 'N'; }
   if (iInput1 != '' && iInput1 == 'Yes') { oInput1 = 'Y'; } else { oInput1 = 'N'; }
   if (iInput2 != '' && iInput2 == 'Yes') { oInput2 = 'Y'; } else { oInput2 = 'N'; }
   if (iInput3 != '' && iInput3 == 'Yes') { oInput3 = 'Y'; } else { oInput3 = 'N'; }
   if (iInput4 != '' && iInput4 == 'Yes') { oInput4 = 'Y'; } else { oInput4 = 'N'; }
   if (iInput5 != '' && iInput5 == 'Yes') { oInput5 = 'Y'; } else { oInput5 = 'N'; }
   var ageParameters = { 'Post': oPost, 'Category': oCategory, 'PWD': oPWD, 'Female': oFemale, 'Widow': oWidow, 'Govt': oGovt, 'Service': oService, 'ExService': oExservice, 'Jnk': oJnk, 'Input_1': oInput1, 'Input_2': oInput2, 'Input_3': oInput3, 'Input_4': oInput4, 'Input_5': oInput5, 'JsoN': AgeJson }
   if (getAge(age, ageMonths, ageDays, ageParameters) == false) {
      return false;
   }
   else { return true; }
}
// age relaxation code---------------------end--------------------
function fnFillAge() {
   var finalAge1 = checkAge1();
   var date1 = finalAge1[0] + " Years  " + finalAge1[1] + " Months  " + finalAge1[2] + " Days"
   if (finalAge1[0] != 'NaN' && finalAge1[0] != '') {
      $('#DOByears').html(date1); $('#DOByears').val(date1); $("#txtAyears").val(finalAge1[0]); $("#txtAMonths").val(finalAge1[1]); $("#txtADays").val(finalAge1[2]);
   }
}
function checkAge1() {
   var strDob = $("#appDob").val();
   var ageAsOn = "17/07/2023";
   var arrinp1 = strDob.split("/"); var arrinp2 = ageAsOn.split("/");
   var a = moment([arrinp1[2], Number(arrinp1[1] - 1), (arrinp1[0])]);
   var b = moment([arrinp2[2], Number(arrinp2[1] - 1), (arrinp2[0])]).add(0, "days");
   var years = b.diff(a, 'year');
   a.add(years, 'years');
   var months = b.diff(a, 'months');
   a.add(months, 'months');
   var days = b.diff(a, 'days');
   a.add(days, 'days');
   var age = new Array();
   age[0] = years; age[1] = months; age[2] = days;
   return age;
}
// address---------------------------------------
function setaddress() {
   if ($(txtPerAddress).val() == 'Yes') {
      $('#txtPerAddressLine1').val($('#txtAddressLine1').val()); $('#txtPerAddressLine2').val($('#txtAddressLine2').val()); $('#txtPerState').val($('#txtState').val()); $('#txtPerDistrict').val($('#txtDistrict').val()); $('#txtPerCountry').val($('#txtCountry').val()); showDistrict('txtPerState'); showDistrict('txtState'); $('#txtPerPinCode').val($('#txtPinCode').val()); document.getElementById('txtPerAddressLine1').readOnly = !0; document.getElementById('txtPerAddressLine2').readOnly = !0; document.getElementById('txtPerPinCode').readOnly = !0; document.getElementById('txtPerDistrict').readOnly = !0; $('#District').val($('#txtDistrict').val()); $('#PerDistrict').val($('#txtPerDistrict').val()); $("#PerDistrict").selectpicker("refresh"); $("#District").selectpicker("refresh"); if (document.getElementById('txtPerCountry').value == "OTHERS") { document.getElementById('txtOtherPerCountry').value = document.getElementById('txtOtherCountry').value; document.getElementById('txtOtherPerCountry').readOnly = !0; $('#OtherPerCountry').show(); document.getElementById('txtOtherPerState').value = document.getElementById('txtOtherState').value; document.getElementById('txtOtherPerState').readOnly = !0; $('#OtherPerState').show(); document.getElementById('txtPerCity').value = document.getElementById('txtOtherCity').value; document.getElementById('txtPerCity').readOnly = !0; $('#OtherPerCity').show(); $('#PerDist1').hide(); $('#PerState').hide() } else { $('#PerDist1').show(); $('#PerState').show(); $('#OtherPerCountry').hide(); $('#OtherPerState').hide(); $('#OtherPerCity').hide() }
      if (document.getElementById('txtDistrict').value == "Others") { document.getElementById('txtPerCity').value = document.getElementById('txtOtherCity').value; document.getElementById('txtPerCity').readOnly = !0; $('#OtherPerCity').show() }
   } else { showDistrict('txtPerState'); showDistrict('txtState'); $('#District').val($('#txtDistrict').val()); $('#PerDistrict').val($('#txtPerDistrict').val()); $("#PerDistrict").selectpicker("refresh"); $("#District").selectpicker("refresh") }
}

function setaddressedit() {
   if ($(txtPerAddress).val() == 'Yes') {
      $('#txtPerAddressLine1').val($('#txtAddressLine1').val()); $('#txtPerAddressLine2').val($('#txtAddressLine2').val()); $('#txtPerState').val($('#txtState').val()); $('#txtPerDistrict').val($('#txtDistrict').val()); $('#txtPerCountry').val($('#txtCountry').val()); showDistrict('txtPerState'); showDistrict('txtState'); document.getElementById('txtPerPinCode').value = document.getElementById('txtPinCode').value; document.getElementById('txtPerAddressLine1').readOnly = !0; document.getElementById('txtPerAddressLine2').readOnly = !0; document.getElementById('txtPerPinCode').readOnly = !0; document.getElementById('txtPerDistrict').readOnly = !0; document.getElementById('txtPerCity').readOnly = !0; $('#District').val($('#txtDistrict').val()); $('#PerDistrict').val($('#txtPerDistrict').val()); $("#PerDistrict").selectpicker("refresh"); $("#District").selectpicker("refresh"); if (document.getElementById('txtPerCountry').value == "OTHERS") { document.getElementById('txtOtherPerCountry').value = document.getElementById('txtOtherCountry').value; document.getElementById('txtOtherPerCountry').readOnly = !0; $('#OtherPerCountry').show(); document.getElementById('txtOtherPerState').value = document.getElementById('txtOtherState').value; document.getElementById('txtOtherPerState').readOnly = !0; $('#OtherPerState').show(); document.getElementById('txtPerCity').value = document.getElementById('txtOtherCity').value; document.getElementById('txtPerCity').readOnly = !0; $('#OtherPerCity').show(); $('#PerDist1').hide(); $('#PerState').hide() } else { $('#PerDist1').show(); $('#PerState').show(); $('#OtherPerCountry').hide(); $('#OtherPerState').hide(); $('#OtherPerCity').hide() }
      if (document.getElementById('txtPerDistrict').value == "Others") { document.getElementById('txtPerCity').value = document.getElementById('txtOtherCity').value; document.getElementById('txtPerCity').readOnly = !0; $('#OtherPerCity').show() }
      $("#txtPerState").next().removeClass('mandatoryselect'); $("[data-id='txtPerCountry']").addClass('responsive-drop-pointer responsive-drop-readonly'); $("[data-id='txtPerCountry']").children('span').eq(1).hide(); $("[data-id='txtPerState']").addClass('responsive-drop-pointer responsive-drop-readonly'); $("[data-id='txtPerState']").children('span').eq(1).hide(); $("#txtPerCountry").next().removeClass('mandatoryselect'); $("[data-id='PerDistrict']").addClass('responsive-drop-pointer  responsive-drop-readonly'); $("[data-id='PerDistrict']").children('span').eq(1).hide(); $("#PerDistrict").next().removeClass('mandatoryselect')
   } else { showDistrict('txtPerState'); showDistrict('txtState'); $('#District').val($('#txtDistrict').val()); $('#PerDistrict').val($('#txtPerDistrict').val()); $("#PerDistrict").selectpicker("refresh"); $("#District").selectpicker("refresh"); $('[data-id="txtPerCountry"]').removeClass('responsive-drop-pointer responsive-drop-readonly'); $('[data-id="txtPerCountry"]').children('span').eq(1).show(); $('[data-id="txtPerState"]').removeClass('responsive-drop-pointer responsive-drop-readonly'); $('[data-id="txtPerState"]').children('span').eq(1).show(); $('[data-id="PerDistrict"]').removeClass('responsive-drop-pointer responsive-drop-readonly'); $('[data-id="PerDistrict"]').children('span').eq(1).show() }
}
function showState() {
   var country = $('#txtCountry').val(); if (country != "OTHERS") { $('#state').show(); $('#txtState').val(''); $('#txtState').selectpicker('refresh'); $('#Dist1').show(); $('#txtDistrict').val(""); $('#District').val(''); $('#District').selectpicker('refresh'); $('#OtherCountry').hide(); $('#txtOtherCountry').val(''); $('#txtOtherCountry').selectpicker('refresh'); $('#OtherState').hide(); $('#txtOtherState').val(''); $('#OtherCity').hide(); $('#txtOtherCity').val('') } else {
      $('#OtherCountry').show(); $('#txtOtherCountry').val(''); $('#OtherState').show(); $('#txtOtherState').val(''); $('#OtherCity').show(); $('#txtOtherCity').val(''); $('#state').hide(); $('#Dist1').hide(); $('#txtState').val('');
      $('#txtState').selectpicker('refresh');
      $('#txtDistrict').val("");
      $('#District').val('');
      $('#District').selectpicker('refresh');
   }
   if (country == "India") { $("#txtPinCode").attr('maxlength', '6'); $('#txtPinCode').val(''); $('#txtPinCode').addClass('mandatoryinput') } else { $("#txtPinCode").attr('maxlength', '12'); $('#txtPinCode').val(''); $('#txtPinCode').removeClass('mandatoryinput') }
   $('.selectpicker').selectpicker('refresh')
}
function showStates1() {//reffer backup 8.1
}
function showPerStates1() {//reffer backup 8.1
}
function showPerState() {
   var country = $('#txtPerCountry').val(); if (country != "OTHERS") { $('#OtherPerCountry').hide(); $('#OtherPerState').hide(); $('#OtherPerCity').hide(); $('#txtPerCity').val(''); $('#txtOtherPerState').val(''); $('#txtOtherPerCountry').val(''); $('#txtOtherPerCountry').selectpicker('refresh'); $('#PerDist1').show(); $('#txtPerDistrict').val(""); $('#PerDistrict').val(''); $('#PerDistrict').selectpicker('refresh'); $('#PerState').show(); $('#txtPerState').val(''); $('#txtPerState').selectpicker('refresh') } else {
      $('#OtherPerCountry').show(); $('#txtOtherPerCountry').val(''); $('#OtherPerState').show(); $('#txtOtherPerState').val(''); $('#OtherPerCity').show(); $('#txtPerCity').val(''); $('#PerDist1').hide(); $('#PerState').hide(); $('#txtPerState').val('');
      $('#txtPerState').selectpicker('refresh');
      $('#txtPerDistrict').val("");
      $('#PerDistrict').val('');
      $('#PerDistrict').selectpicker('refresh');
   }
   if (country == "India") { $("#txtPerPinCode").attr('maxlength', '6'); $('#txtPerPinCode').val(''); $('#txtPerPinCode').addClass('mandatoryinput') } else { $("#txtPerPinCode").attr('maxlength', '12'); $('#txtPerPinCode').val(''); $('#txtPerPinCode').removeClass('mandatoryinput') }
   $('.selectpicker').selectpicker('refresh')
}
function setdistrict() {
   $('#District').val(""); $('#txtDistrict').val(""); $('#District').selectpicker('refresh'); $('#PerDistrict').val(""); $('#txtPerDistrict').val(""); $('#PerDistrict').selectpicker('refresh');
}
function setdistrict1() {
   $('#PerDistrict').val(""); $('#txtPerDistrict').val(""); $('#PerDistrict').selectpicker('refresh');
}
function showDistrict(id) {
   var selbox1 = null; if (id == "txtPerState") { if (document.getElementById('txtPerState').value != "") { selbox1 = document.getElementById('PerDistrict'); selbox1.options.length = 1 } } else if (id == "txtState") { if (document.getElementById('txtState').value != "") { selbox1 = document.getElementById('District'); selbox1.options.length = 1 } }
   if (selbox1 != null) {
      if (document.getElementById(id).value == "Andhra Pradesh") { var myArray1 = ["---Select---", "Anantapur", "Chittoor", "Cuddaph", "East Godavari", "Guntur", "Krishna", "Kurnool", "Prakasam", "Nellore", "Srikakulam", "Visakhapatnam", "Vizianagaram", "West Godavari"]; myArray1.sort(); for (var i = 1; i < myArray1.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray1[i], myArray1[i]) } }
      if (document.getElementById(id).value == "Arunachal Pradesh") { var myArray2 = ["---Select---", "Anjaw", "Changlang", "East Kameng", "East Siang", "Lohit", "Longding", "Lower Subansiri", "Papum Pare", "Tawang", "Tirap", "Lower Dibang Valley", "Upper Siang", "Upper Subansiri", "West Kameng", "West Siang", "Upper Dibang Valley", "Kurung Kumey"]; myArray2.sort(); for (var i = 1; i < myArray2.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray2[i], myArray2[i]) } }
      if (document.getElementById(id).value == "Assam") { var myArray3 = ["---Select---", "Barpeta", "Bongaigaon", "Cachar", "Darrang", "Dhemaji", "Dhubri", "Dibrugarh", "Goalpara", "Golaghat", "Hailakandi", "Jorhat", "Kamrup", "Karbi Anglong", "Karimganj", "Kokrajhar", "Lakhimpur", "Marigaon", "Nagaon", "Nalbari", "Dima Hasao", "Sivasagar", "Sonitpur", "Tinsukia", "Kamrup Metro", "Udalguri", "Baksa", "Chirang"]; myArray3.sort(); for (var i = 1; i < myArray3.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray3[i], myArray3[i]) } }
      if (document.getElementById(id).value == "Bihar") { var myArray4 = ["---Select---", "Araria", "Arwal", "Aurangabad", "Banka", "Begusarai", "Bhagalpur", "Bhojpur", "Buxar", "Darbhanga", "East Champaran", "Gaya", "Gopalganj", "Jamui", "Jehanabad", "Khagaria", "Kishanganj", "Kaimur", "Katihar", "Lakhisarai", "Madhubani", "Munger", "Madhepura", "Muzaffarpur", "Nalanda", "Nawada", "Patna", "Purnia", "Rohtas", "Saharsa", "Samastipur", "Sheohar", "Sheikhpura", "Saran", "Sitamarhi", "Supaul", "Siwan", "Vaishali", "West Champaran"]; myArray4.sort(); for (var i = 1; i < myArray4.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray4[i], myArray4[i]) } }
      if (document.getElementById(id).value == "Chhattisgarh") { var myArray5 = ["---Select---", "Balod", "Baloda Bazar", "Balrampur", "Bastar", "Bemetara", "Bijapur", "Bilaspur", "Dantewada", "Dhamtari", "Durg", "Gariaband", "Jashpur", "Janjgir-Champa", "Kondagaon", "Korba", "Koriya", "Kanker", "Kabirdham", "Mahasamund", "Mungeli", "Narayanpur", "Raigarh", "Rajnandgaon", "Raipur", "Surajpur", "Sukma", "Surguja"]; myArray5.sort(); for (var i = 1; i < myArray5.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray5[i], myArray5[i]) } }
      if (document.getElementById(id).value == "Goa") { var myArray6 = ["---Select---", "North Goa", "South Goa"]; myArray6.sort(); for (var i = 1; i < myArray6.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray6[i], myArray6[i]) } }
      if (document.getElementById(id).value == "Gujarat") { var myArray7 = ["---Select---", "Ahmedabad", "Amreli", "Anand", "Aravalli", "Banaskantha", "Bharuch", "Bhavnagar", "Botad", "Chhota Udaipur", "Dahod", "Dang", "Devbhoomi Dwarka", "Gandhinagar", "Gir Somnath", "Jamnagar", "Junagadh", "Kheda", "Kutch", "Mahisagar", "Mehsana", "Morbi", "Narmada", "Navsari", "Panchmahal", "Patan", "Porbandar", "Rajkot", "Sabarkantha", "Surat", "Surendranagar", "Tapi", "Vadodara", "Valsad"]; myArray7.sort(); for (var i = 1; i < myArray7.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray7[i], myArray7[i]) } }
      if (document.getElementById(id).value == "Haryana") { var myArray8 = ["---Select---", "Ambala", "Bhiwani", "Faridabad", "Fatehabad", "Gurgaon", "Hisar", "Jhajjar", "Jind", "Kaithal", "Karnal", "Kurukshetra", "Mahendragarh", "Mewat", "Palwal", "Panchkula", "Panipat", "Rewari", "Rohtak", "Sirsa", "Sonipat", "Yamuna Nagar"]; myArray8.sort(); for (var i = 1; i < myArray8.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray8[i], myArray8[i]) } }
      if (document.getElementById(id).value == "Himachal Pradesh") { var myArray9 = ["---Select---", "Bilaspur", "Chamba", "Hamirpur", "Kangra", "Kinnaur", "Kullu", "Lahaul and Spiti", "Mandi", "Shimla", "Sirmaur", "Solan", "Una"]; myArray9.sort(); for (var i = 1; i < myArray9.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray9[i], myArray9[i]) } }
      if (document.getElementById(id).value == "Jammu and Kashmir") { var myArray10 = ["---Select---", "Jammu", "Doda", "Kishtwar", "Rajouri", "Reasi", "Udhampur", "Ramban", "Kathua", "Samba", "Poonch", "Srinagar", "Anantnag", "Kulgam", "Pulwama", "Shopian", "Budgam", "Ganderbal", "Bandipora", "Baramulla", "Kupwara"]; myArray10.sort(); for (var i = 1; i < myArray10.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray10[i], myArray10[i]) } }
      if (document.getElementById(id).value == "Jharkhand") { var myArray11 = ["---Select---", "Garhwa", "Palamu", "Latehar", "Chatra", "Hazaribagh", "Koderma", "Giridih", "Ramgarh", "Bokaro", "Dhanbad", "Lohardaga", "Gumla", "Simdega", "Ranchi", "Khunti", "West Singhbhum", "Saraikela Kharsawan", "East Singhbhum", "Jamtara", "Deoghar", "Dumka", "Pakur", "Godda", "Sahebganj"]; myArray11.sort(); for (var i = 1; i < myArray11.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray11[i], myArray11[i]) } }
      if (document.getElementById(id).value == "Karnataka") { var myArray12 = ["---Select---", "Chamarajanagar", "Chikamagalur", "Dakshina Kannada", "Hassan", "Kodagu", "Mandya", "Mysore", "Udupi", "Bellary", "Bidar", "Gulbarga", "Koppal", "Raichur", "Yadgir", "Bagalkot", "Belgaum", "Bijapur", "Dharwad", "Gadag", "Haveri", "Uttara Kannada", "Bangalore Urban", "Bangalore Rural", "Chikkaballapur", "Chitradurga", "Davanagere", "Kolar", "Ramanagara", "Shimoga", "Tumakuru"]; myArray12.sort(); for (var i = 1; i < myArray12.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray12[i], myArray12[i]) } }
      if (document.getElementById(id).value == "Kerala") { var myArray13 = ["---Select---", "Alappuzha", "Ernakulam", "Idukki", "Kannur", "Kasaragod", "Kollam", "Kottayam", "Kozhikode", "Malappuram", "Palakkad", "Pathanamthitta", "Thiruvananthapuram", "Thrissur", "Wayanad"]; myArray13.sort(); for (var i = 1; i < myArray13.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray13[i], myArray13[i]) } }
      if (document.getElementById(id).value == "Madhya Pradesh") { var myArray14 = ["---Select---", "Bhopal", "Raisen", "Rajgarh", "Sehore", "Vidisha", "Morena", "Sheopur", "Bhind", "Ashoknagar", "Shivpuri", "Datia", "Guna", "Gwalior", "Alirajpur", "Barwani", "Burhanpur", "Dhar", "Indore", "Jhabua", "Khandwa", "Khargone West Nimar", "Balaghat", "Chhindwara", "Jabalpur", "Katni", "Mandla", "Narsinghpur", "Seoni", "Betul", "Harda", "Hoshangabad", "Rewa", "Satna", "Sidhi", "Singrauli", "Chhatarpur", "Damoh", "Panna", "Sagar", "Tikamgarh", "Anuppur", "Shahdol", "Umaria", "Dindori", "Agar Malwa", "Dewas", "Mandsaur", "Neemuch", "Ratlam", "Shajapur", "Ujjain"]; myArray14.sort(); for (var i = 1; i < myArray14.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray14[i], myArray14[i]) } }
      if (document.getElementById(id).value == "Maharashtra") { var myArray15 = ["---Select---", "Ahmednagar", "Akola", "Amravati", "Aurangabad", "Beed", "Bhandara", "Buldhana", "Chandrapur", "Dhule", "Gadchiroli", "Gondia", "Hingoli", "Jalgaon", "Jalna", "Kolhapur", "Latur", "Mumbai City", "Mumbai Suburban", "Nagpur", "Nanded", "Nandurbar", "Nashik", "Osmanabad", "Parbhani", "Pune", "Raigad", "Ratnagiri", "Sangli", "Satara", "Sindhudurg", "Solapur", "Thane", "Wardha", "Washim", "Yavatmal", "Palghar"]; myArray15.sort(); for (var i = 1; i < myArray15.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray15[i], myArray15[i]) } }
      if (document.getElementById(id).value == "Manipur") { var myArray16 = ["---Select---", "Bishnupur", "Churachandpur", "Chandel", "Imphal East", "Senapati", "Tamenglong", "Thoubal", "Ukhrul", "Imphal West"]; myArray16.sort(); for (var i = 1; i < myArray16.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray16[i], myArray16[i]) } }
      if (document.getElementById(id).value == "Meghalaya") { var myArray17 = ["---Select---", "Jowai", "Khliehriat", "Shillong", "Nongstoin", "Mawkyrwat", "Nongpoh", "Resubelpara", "Williamnagar", "Baghmara", "Tura", "Ampati"]; myArray17.sort(); for (var i = 1; i < myArray17.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray17[i], myArray17[i]) } }
      if (document.getElementById(id).value == "Mizoram") { var myArray18 = ["---Select---", "Aizawl", "Kolasib", "Lawngtlai", "Lunglei", "Mamit", "Saiha", "Serchhip", "Champhai"]; myArray18.sort(); for (var i = 1; i < myArray18.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray18[i], myArray18[i]) } }
      if (document.getElementById(id).value == "Nagaland") { var myArray19 = ["---Select---", "Dimapur", "Kiphire", "Kohima", "Longleng", "Mokokchung", "Mon", "Peren", "Phek", "Tuensang", "Wokha", "Zunheboto"]; myArray19.sort(); for (var i = 1; i < myArray19.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray19[i], myArray19[i]) } }
      if (document.getElementById(id).value == "Odisha") { var myArray20 = ["---Select---", "Anugul", "Bargarh", "Bhadrak", "Balasore", "Balangir", "Boudh", "Cuttack", "Deogarh", "Dhenkanal", "Gajapati", "Ganjam", "Jagatsinghapur", "Jajpur", "Jharsuguda", "Kalahandi", "Kandhamal", "Kendrapara", "Keonjhar", "Khurda", "Koraput", "Malkangiri", "Mayurbhanj", "Nuapada", "Nabarangpur", "Nayagarh", "Puri", "Rayagada", "Sambalpur", "Subarnapur", "Sundargarh"]; myArray20.sort(); for (var i = 1; i < myArray20.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray20[i], myArray20[i]) } }
      if (document.getElementById(id).value == "Puducherry") { var myArray21 = ["---Select---", "Karaikal", "Mahe", "Puducherry", "Yanam"]; myArray21.sort(); for (var i = 1; i < myArray21.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray21[i], myArray21[i]) } }
      if (document.getElementById(id).value == "Rajasthan") { var myArray22 = ["---Select---", "Ajmer", "Alwar", "Banswara", "Baran", "Barmer", "Bharatpur", "Bhilwara", "Bikaner", "Bundi", "Chittorgarh", "Churu", "Dausa", "Dholpur", "Dungarpur", "Hanumangarh", "Jaipur", "Jaisalmer", "Jalor", "Jhalawar", "Jhunjhunu", "Jodhpur", "Karauli", "Kota", "Nagaur", "Pali", "Pratapgarh", "Rajsamand", "Sawai Madhopur", "Sikar", "Sirohi", "Sri Ganganagar", "Tonk", "Udaipur"]; myArray22.sort(); for (var i = 1; i < myArray22.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray22[i], myArray22[i]) } }
      if (document.getElementById(id).value == "Sikkim") { var myArray23 = ["---Select---", "East Sikkim", "North Sikkim", "South Sikkim", "West Sikkim"]; myArray23.sort(); for (var i = 1; i < myArray23.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray23[i], myArray23[i]) } }
      if (document.getElementById(id).value == "Tamil Nadu") { var myArray24 = ["---Select---", "Ariyalur", "Chennai", "Coimbatore", "Cuddalore", "Dharmapuri", "Dindigul", "Erode", "Kanchipuram", "Kanniyakumari", "Karur", "Krishnagiri", "Madurai", "Nagapattinam", "Namakkal", "The Nilgiris", "Perambalur", "Pudukkottai", "Ramanathapuram", "Salem", "Sivagangai", "Thanjavur", "Theni", "Thoothukudi", "Tiruchirappalli", "Thirunelveli", "Tiruppur", "Thiruvallur", "Tiruvannamalai", "Thiruvarur", "Vellore", "Villupuram", "Virudhunagar"]; myArray24.sort(); for (var i = 1; i < myArray24.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray24[i], myArray24[i]) } }
      if (document.getElementById(id).value == "Telangana") { var myArray25 = ["---Select---", "Adilabad", "Hyderabad", "Karimnagar", "Khammam", "Mahbubnagar", "Medak", "Nalgonda", "Nizamabad", "Rangareddy", "Warangal"]; myArray25.sort(); for (var i = 1; i < myArray25.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray25[i], myArray25[i]) } }
      if (document.getElementById(id).value == "Uttar Pradesh") { var myArray26 = ["---Select---", "Agra", "Aligarh", "Allahabad", "Ambedkar Nagar", "Auraiya", "Azamgarh", "Bagpat", "Bahraich", "Ballia", "Balrampur", "Banda", "Barabanki", "Bareilly", "Basti", "Bijnor", "Budaun", "Bulandshahr", "Chandauli", "Chitrakoot", "Deoria", "Etah", "Etawah", "Faizabad", "Farrukhabad", "Fatehpur", "Firozabad", "Gautam Buddha Nagar", "Ghaziabad", "Ghazipur", "Gonda", "Gorakhpur", "Hamirpur", "Hardoi", "Hathras", "Jalaun", "Jaunpur", "Jhansi", "Jyotiba Phule Nagar", "Kannauj", "Kanpur Dehat", "Kanpur Nagar", "Kaushambi", "Kheri", "Kushinagar", "Lalitpur", "Lucknow", "Mahoba", "Maharajganj", "Mainpuri", "Mathura", "Mau", "Meerut", "Mirzapur", "Moradabad", "Muzaffarnagar", "Pilibhit", "Pratapgarh", "RaeBareli", "Rampur", "Saharanpur", "Sant Kabir Nagar", "Sant Ravidas Nagar", "Shahjahanpur", "Shravasti", "Siddharthnagar", "Sitapur", "Sonbhadra", "Sultanpur", "Unnao", "Varanasi", "Manyavar Kanshiram Nagar", "Prabuddha Nagar", "Panchsheel Nagar", "Bhim Nagar", "Chhatrapati Shahuji Maharaj Nagar"]; myArray26.sort(); for (var i = 1; i < myArray26.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray26[i], myArray26[i]) } }
      if (document.getElementById(id).value == "Uttarakhand") { var myArray27 = ["---Select---", "Almora", "Bageshwar", "Chamoli", "Champawat", "Dehradun", "Pauri Garhwal", "Haridwar", "Nainital", "Pithoragarh", "Rudraprayag", "Tehri Garhwal", "Udham Singh Nagar", "Uttarkashi"]; myArray27.sort(); for (var i = 1; i < myArray27.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray27[i], myArray27[i]) } }
      if (document.getElementById(id).value == "Tripura") { var myArray28 = ["---Select---", "Dhalai", "North Tripura", "South Tripura", "West Tripura", "Gomati", "Khowai", "Sepahijala", "Unakoti"]; myArray28.sort(); for (var i = 1; i < myArray28.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray28[i], myArray28[i]) } }
      if (document.getElementById(id).value == "West Bengal") { var myArray29 = ["---Select---", "Bankura", "Bardhaman", "Birbhum", "East Midnapore Purba Medinipur", "Hooghly", "Purulia", "West Midnapore Paschim Medinipur", "Cooch Behar", "Darjeeling", "Alipurduar", "Jalpaiguri", "Malda", "North Dinajpur Uttar Dinajpur", "South Dinajpur Dakshin Dinajpur", "Howrah", "Kolkata", "Murshidabad", "Nadia", "North 24 Parganas Uttar 24 Parganas", "South 24 Parganas Dakshin 24 Parganas"]; myArray29.sort(); for (var i = 1; i < myArray29.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray29[i], myArray29[i]) } }
      if (document.getElementById(id).value == "Andaman and Nicobar Islands") { var myArray30 = ["---Select---", "North and Middle Andaman", "Nicobar", "South Andaman"]; myArray30.sort(); for (var i = 1; i < myArray30.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray30[i], myArray30[i]) } }
      if (document.getElementById(id).value == "Chandigarh") { var myArray31 = ["---Select---", "Chandigarh"]; myArray31.sort(); for (var i = 1; i < myArray31.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray31[i], myArray31[i]) } }
      if (document.getElementById(id).value == "Dadra and Nagar Haveli") { var myArray32 = ["---Select---", "Dadra and Nagar Haveli"]; myArray32.sort(); for (var i = 1; i < myArray32.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray32[i], myArray32[i]) } }
      if (document.getElementById(id).value == "Daman and Diu") { var myArray33 = ["---Select---", "Daman", "Diu"]; myArray33.sort(); for (var i = 1; i < myArray33.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray33[i], myArray33[i]) } }
      if (document.getElementById(id).value == "Lakshadweep") { var myArray34 = ["---Select---", "Lakshadweep"]; myArray34.sort(); for (var i = 1; i < myArray34.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray34[i], myArray34[i]) } }
      if (document.getElementById(id).value == "Delhi - NCR") { var myArray35 = ["---Select---", "Central Delhi", "East Delhi", "New Delhi", "North Delhi", "North East Delhi", "North West Delhi", "South Delhi", "South West Delhi", "West Delhi", "Shahdara", "South East Delhi"]; myArray35.sort(); for (var i = 1; i < myArray35.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray35[i], myArray35[i]) } }
      if (document.getElementById(id).value == "PUDUCHERRY") { var myArray36 = ["---Select---", "Karaikal", "Mahe", "Puducherry", "Yanam"]; myArray36.sort(); for (var i = 1; i < myArray36.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray36[i], myArray36[i]) } }
      if (document.getElementById(id).value == "Punjab") { var myArray37 = ["---Select---", "Amritsar", "Barnala", "Bathinda", "Firozpur", "Faridkot", "Fatehgarh Sahib", "Fazilka", "Gurdaspur", "Hoshiarpur", "Jalandhar", "Kapurthala", "Ludhiana", "Mansa", "Malerkotla", "Moga", "Sri Muktsar Sahib", "Pathankot", "Patiala", "Rupnagar", "Sahibzada Ajit Singh Nagar", "Sangrur", "Shahid Bhagat Singh Nagar", "Tarn Taran"]; myArray37.sort(); for (var i = 1; i < myArray37.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray37[i], myArray37[i]) } }
      if (document.getElementById(id).value == "Ladakh") { var myArray39 = ["---Select---", "Kargil", "Leh"]; myArray39.sort(); for (var i = 1; i < myArray39.length; ++i) { selbox1.options[selbox1.options.length] = new Option(myArray39[i], myArray39[i]) } }
      selbox1.options[selbox1.options.length] = new Option('Others', 'Others')
   }
   $('.selectpicker').selectpicker('refresh')
}
function showOtherCity() {
   var City = $('#District').val();
   if (City == 'Others') { $('#OtherCity').show(); }
   else { $('#OtherCity').hide(); document.getElementById('txtOtherCity').value = ""; }
}
function showOtherPerCity() {
   var City = $('#PerDistrict').val();
   if (City == 'Others') { $('#OtherPerCity').show(); }
   else { $('#OtherPerCity').hide(); document.getElementById('txtPerCity').value = ""; }
}
function SetCAdressInEdit() {
   var country = $('#txtCountry').val();
   if (country != "OTHERS") {
      $('#state').show(); $('#Dist1').show(); $('#OtherCountry').hide(); $('#OtherState').hide(); $('#OtherCity').hide();
      var City = $('#District').val();
      if (City == 'Others') {
         $('#OtherCity').show();
      }
      else { $('#OtherCity').hide(); }
   }
   else {
      $('#OtherCountry').show(); $('#OtherState').show(); $('#OtherCity').show(); $('#state').hide(); $('#Dist1').hide();
   }
}
function SetPAddressInEdit() {
   var country = $('#txtPerCountry').val();
   if (country != "OTHERS") {
      $('#OtherPerCountry').hide(); $('#OtherPerState').hide(); $('#OtherPerCity').hide(); $('#PerDist1').show(); $('#PerState').show();
      var City = $('#PerDistrict').val();
      if (City == 'Others') { $('#OtherPerCity').show(); }
      else { $('#OtherPerCity').hide(); }
   }
   else {
      $('#OtherPerCountry').show(); $('#OtherPerState').show(); $('#OtherPerCity').show(); $('#PerDist1').hide(); $('#PerState').hide();
   }
}
function clearIsperm() {
   $('#txtPerAddress').val(''); $("input[name=txtPerAddress_R]").attr('checked', false);
}
//address ends here=========
let onloadCheckForFreeze = false;
function freezeForm(id) {
   if (id == "txtMatricSubject") {
      if ($('#txtMatricSubject').val() != "Yes" && $('#txtMatricSubject').val() != "") {
         if (onloadCheckForFreeze) {
            alert_if('You are not Elligible for this post.');
         }
         onloadCheckForFreeze = true;
         $('#SSCDetails,#HscDetails,#DiplomaDetails,#GraduationDetails,#PGDegreeDET,#HighQual1HigherQual,#HighQual2HigherQual').collapse('hide');
         $('[href="#SSCDetails"],[href="#HscDetails"],[href="#DiplomaDetails"],[href="#GraduationDetails"],[href="#PGDegreeDET"],[href="#HighQual1HigherQual"],[href="#HighQual2HigherQual"]').addClass("tabli");
         return false;
      } else {
         $('#SSCDetails,#HscDetails,#DiplomaDetails,#GraduationDetails,#PGDegreeDET,#HighQual1HigherQual,#HighQual2HigherQual').collapse('show');
         $('[href="#SSCDetails"],[href="#HscDetails"],[href="#DiplomaDetails"],[href="#GraduationDetails"],[href="#PGDegreeDET"],[href="#HighQual1HigherQual"],[href="#HighQual2HigherQual"]').removeClass("tabli");
         return true;
      }
   }
   else if (id == "txtDomicile_R" || id == "txtNationality_R" || id == "txtTwinChild_R") {
      if ($('#txtDomicile').val() == "No" || $('#txtNationality').val() == "Others" || $('#txtTwinChild').val() == "No") {
         alert_if('You are not Elligible for this post.');
         $('#CategoryDetails,#DomicileDetails,#IdentificationDetails').collapse('hide');
         $('[href="#CategoryDetails"],[href="#DomicileDetails"],[href="#IdentificationDetails"],[data-id="Category"]').addClass("tabli");
         $('#save-tab-28,#forward-tab-28').hide();
         // return false;
      } else {
         $('#CategoryDetails,#DomicileDetails,#IdentificationDetails').collapse('show');
         $('[href="#CategoryDetails"],[href="#DomicileDetails"],[href="#IdentificationDetails"],[data-id="Category"]').removeClass("tabli");
         $('#save-tab-28,#forward-tab-28').show();
         // return true;
      }
      if (id == "txtNationality_R" && $('#txtNationality').val() == "Others") {
         disableCheck('txtDomicile')
      } else if (id == "txtNationality_R" && $('#txtNationality').val() == "Indian") {
         removedisableCheck('txtDomicile');
      }
      // if (id == "txtTwinChild_R" && $('#txtTwinChild').val() == "No") {
         // disableCheck('txtNationality');
         // disableCheck('txtDomicile');
      // } else if (id == "txtTwinChild_R" && $('#txtTwinChild').val() == "Yes") {
         // removedisableCheck('txtNationality');
         // removedisableCheck('txtDomicile');
      // }
   }
   
   if (id == "txtTwinChild_R") {
	   if($('#txtTwinChild').val() == "No"){
		   alert_if('You are not Elligible for this post. आपण परिक्षेसाठी अपात्र आहात.');
		   $("#txtTwinChild").val(""); removeCheck('txtTwinChild');
	   }
   }
   
   if (id == "txt789thper") {
    if ($('#txt789thper').val() == "No") {
		alert_if('You cannot apply for PESA sector / आपल्याला पेसा क्षेत्रात अर्ज भरता येणार नाही ');
	    $(".PesaID1 select").val(""); $(".PesaID1 select").selectpicker('refresh');
	}
   }
   if (id == "txtExServiceman_R" || id == "txtExSerSecuredEmp_R") {
    if ($('#txtExServiceman').val() == "Yes" && $('#txtExSerSecuredEmp').val() == "Yes") {
		alert_if('Both "Are you an Ex Servicemen?" and "Are You ward of Ex-Servicemen?" cannot be "Yes"');
	    $("#txtExServiceman").val(""); removeCheck('txtExServiceman');
	    $("#txtExSerSecuredEmp").val(""); removeCheck('txtExSerSecuredEmp');
	}
   }
   
   
}

function showEAlert(id) {
}
function setSportCategory() {
   var selbox = null;
   var SportTLevel = $('#txtSportTLevel').val();
   selbox = document.getElementById('SportTLevel');
   selbox.options.length = 0;
   $('#SportTLevel').selectpicker('refresh');
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   if ($("#txtSportAchievmntLvl").val() == "International Level") {
      selbox.options[selbox.options.length] = new Option("Olympics Games", "Olympics Games"); selbox.options[selbox.options.length] = new Option("World Cup/World Championship (After 4 Years)", "World Cup/World Championship (After 4 Years)"); selbox.options[selbox.options.length] = new Option("Asian Games", "Asian Games"); selbox.options[selbox.options.length] = new Option("Commonwealth Games/World Championships (2 years)", "Commonwealth Games/World Championships (2 years)"); selbox.options[selbox.options.length] = new Option("Asian Championship/ Asian Track and Field / Commonwealth Championship", "Asian Championship/ Asian Track and Field / Commonwealth Championship"); selbox.options[selbox.options.length] = new Option("SAF Games/World University Games/Junior World Cup/Junior World Championship/Junior Asian Championship", "SAF Games/World University Games/Junior World Cup/Junior World Championship/Junior Asian Championship"); selbox.options[selbox.options.length] = new Option("Others", "Others");
   } else if ($("#txtSportAchievmntLvl").val() == "National Level") {
      selbox.options[selbox.options.length] = new Option("National Games/Senior National Championships/Inter-State Championships", "National Games/Senior National Championships/Inter-State Championships"); selbox.options[selbox.options.length] = new Option("All India Inter-University /Junior National Championships (Under-19 and above age-group only)", "All India Inter-University /Junior National Championships (Under-19 and above age-group only)"); selbox.options[selbox.options.length] = new Option("Others", "Others");
   } else if ($("#txtSportAchievmntLvl").val() == "State Level") {
      selbox.options[selbox.options.length] = new Option("Senior State Championship/Inter District Senior Championship", "Senior State Championship/Inter District Senior Championship"); selbox.options[selbox.options.length] = new Option("Junior State Championship/Inter District Junior Championship (Under-19 and above age group only)", "Junior State Championship/Inter District Junior Championship (Under-19 and above age group only)"); selbox.options[selbox.options.length] = new Option("Others", "Others");
   } $('#SportTLevel').selectpicker('refresh'); $('#SportTLevel').val(SportTLevel); $('#SportTLevel').selectpicker('refresh');
}
function hideShowReg() {
   if ($("#txtNameChanged").val() == "Yes") {
      $("#txtAppChangedName").parents(".efmCls").show();
   } else {
      $("#txtAppChangedName").parents(".efmCls").hide(); $("#txtAppChangedName").val("");
   }
}
function hideShowApp() {
   if ($("#app_seq_no").val() != "") {
      $("#childnumber").show();
   }
   if ($("#txtAltMobile").val() != "") {
      $(".altMob").show();
   }
   if ($("#txtNameChanged").val() == "Yes") {
      $("#txtAppChangedName").parents(".efmCls").show();
   } else {
      $("#txtAppChangedName").parents(".efmCls").hide(); $("#txtAppChangedName").val("");
   }
   if ($("#txtMaritialStatus").val() != "Unmarried") {
      // $("#txtMaritialDate").parents(".efmCls").show();
      $("#txtNumberofChilds").parents(".efmCls").show();
   } else {
      // $("#txtMaritialDate").parents(".efmCls").hide(); $("#txtMaritialDate").val("");
      $("#txtNumberofChilds").parents(".efmCls").hide(); $("#txtNumberofChilds").val(""); $("#txtNumberofChilds").selectpicker('refresh');
   }
   if ($("#txtNumberofChilds").val() == "More than 2") {
      $("#txtTwinChild").parents(".efmCls").show();
   } else {
      $("#txtTwinChild").parents(".efmCls").hide(); $("#txtTwinChild").val(""); removeCheck('txtTwinChild');
   }
   // if ($("#txtTwinChild").val() == "Yes") {
      // $("#txtLastBornDoB").parents(".efmCls").show();
   // } else {
      // $("#txtLastBornDoB").parents(".efmCls").hide(); $("#txtLastBornDoB").val("");
   // }
   //Non Creamy caste validations
  if($('#txtCategory').val() == 'Open' || $('#txtCategory').val() == 'Schedule Caste (SC)' || $('#txtCategory').val() == 'Schedule Tribe (ST)' || $('#txtCategory').val() == 'Economically Weaker Section (EWS)'){
       $('[href="#JAndKDetails"],#JAndKDetails').css("display", "none"); $('#txtKMigrant').val("");removeCheck('txtKMigrant');
   }else{
       $('[href="#JAndKDetails"],#JAndKDetails').css("display", "");
   }
   if ($("#txtKMigrant").val() == "Yes") {
      $("#txtFarmCertAuthority").parents(".efrmgen-flexrow").show();
   } else if ($("#txtKMigrant").val() == "No" || $("#txtKMigrant").val() == "") {
      $("#txtFarmCertAuthority").parents(".efrmgen-flexrow").hide(); $(".farmer_det input").val(""); $(".farmer_det input:not([type='radio'])").val("");
   }
   if ($("#txtGender").val() == "Female") {
      $('[href="#WomResDetails"],#WomResDetails').css("display", "none");
   } else {
      $('[href="#WomResDetails"],#WomResDetails').css("display", "none");
	  $("#WomResDetails input:not([type='radio'])").val(""); $("#WomResDetails input[type='checkbox']").prop("checked", false); $("#WomResDetails input[type='radio']").prop("checked", false); $("#WomResDetails select").val(""); $("#WomResDetails select").selectpicker('refresh');
   }
   if ($("#txtWomensRes").val() == "Yes") {
      $("#txtWomenResCertAuthority").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtWomenResCertAuthority").parents(".efrmgen-flexrow").hide(); $(".WomResCert_det input").val("");
   }
   // if ($("#txtNationality").val() == "Others") {//-n-
   //    $("#txtONationality").parents(".efmCls").show();
   // } else {
   //    $("#txtONationality").parents(".efmCls").hide(); $("#txtONationality").val(""); $("#txtONationality").selectpicker('refresh');
   // }//-n-
   if ($('#txtDomicile').val() == "No") {
      // $("#txtODomicileState").parents(".efmCls").show();
      $('[href="#DomicileDetails"],#DomicileDetails').css("display", "none"); $('#DomicileDetails input').val("");
   } else {
      $("#txtODomicileState").parents(".efmCls").hide(); $(".otherdomstate_tr select").val(""); $(".otherdomstate_tr select").selectpicker('refresh');
      if (ConfigurationObj.DomcileDetailsReq.split('~')[1] == 'YY' || ConfigurationObj.DomcileDetailsReq.split('~')[1] == 'YN') {
         $('[href="#DomicileDetails"],#DomicileDetails').css("display", "");
      }
   }
   if (ConfigurationObj.DomcileDetailsReq.split('~')[0] == 'NN' || ConfigurationObj.DomcileDetailsReq.split('~')[1] == 'NN') {
      $('[href="#DomicileDetails"],#DomicileDetails').css("display", "none"); $('#DomicileDetails input').val("");
   }
   //-n- no domicile category loggic
   var getIn1 = $('#txtCategory').val();
   var sel1 = document.getElementById('Category'); sel1.options.length = 0;
   var ele = ConfigurationObj.Category; var splite1 = ele.split("~"); sel1.options[sel1.options.length] = new Option("--Select--", "");
   var getIn2 = $('#txtApplyCategory').val();
   var sel2 = document.getElementById('ApplyCategory'); sel2.options.length = 0;
   var ele = ConfigurationObj.ApplyCategory; var splite2 = ele.split("~"); sel2.options[sel2.options.length] = new Option("--Select--", "");
   if ($('#txtNationality').val() == "Others" || $('#txtDomicile').val() == "No") {
      for (var i = 3, j = 1; i < 4; i++) {
         sel1.options[sel1.options.length] = new Option(splite1[i], splite1[i]);
         sel2.options[sel2.options.length] = new Option(splite2[j], splite2[j]);
      }
      $('#Category,#ApplyCategory').selectpicker('refresh');
      if (getIn1 == splite1[3]) { $('#Category').val(getIn1); } else { $('#Category,#txtCategory').val(""); }
      if (getIn2 == splite2[1]) { $('#ApplyCategory').val(getIn2); } else { $('#ApplyCategory,#txtApplyCategory').val(""); }
   } else {
      for (var i = 3; i < splite1.length; i++) { sel1.options[sel1.options.length] = new Option(splite1[i], splite1[i]); }
      for (var i = 1; i < splite2.length; i++) { sel2.options[sel2.options.length] = new Option(splite2[i], splite2[i]); }
      $('#Category,#ApplyCategory').selectpicker('refresh');
      $('#Category').val(getIn1); $('#ApplyCategory').val(getIn2);
   } $('#Category,#ApplyCategory').selectpicker('refresh');
   // Single value for applying category--
   if ($('#txtCategory').val() == "Open" || $('#txtCategory').val() == "Economically Weaker Section (EWS)") {
      sel2.options.length = 0; sel2.options[sel2.options.length] = new Option("--Select--", "");
      sel2.options[sel2.options.length] = new Option(splite2[1], splite2[1]);
      $('#ApplyCategory').selectpicker('refresh');
      if (getIn2 == splite2[1]) { $('#ApplyCategory').val(getIn2); } else { $('#ApplyCategory,#txtApplyCategory').val(""); }
      $('#ApplyCategory').selectpicker('refresh');
   }//-n-
   if ($('#txtCategory').val() == "Open") {
      $('[href="#CategoryDetails"],#CategoryDetails,#catnote').css("display", "none"); $('#CategoryDetails input').val("");
   } else {
      if (ConfigurationObj.Category.split('~')[1] == 'YY' || ConfigurationObj.Category.split('~')[1] == 'YN') {
         $('[href="#CategoryDetails"],#CategoryDetails,#catnote').css("display", "");
      } else { $('[href="#CategoryDetails"],#CategoryDetails,#catnote').css("display", "none"); $('#CategoryDetails input').val(""); }
   }
   
   if ($('#txtCategory').val() == "Schedule Tribe (ST)") {
	    $('.PesaID').css("display", "");
   }else{
	    $('.PesaID').css("display", "none");$('.PesaID1').css("display", "none");
	    $(".PesaID select").val(""); $(".PesaID select").selectpicker('refresh');$(".PesaID1 select").val(""); $(".PesaID1 select").selectpicker('refresh');
   }
   
   if ($('#txt789thGrade').val() == "Yes") {
	    $('.PesaID1').css("display", "");
   }else{
	    $('.PesaID1').css("display", "none");
	    $(".PesaID1 select").val(""); $(".PesaID1 select").selectpicker('refresh');
   }
   
   // Ex Servicemen Details-------
   if ($('#txtExServiceman').val() == "Yes" || $('#txtExSerSecuredEmp').val() == "Yes") {
      $('.ExServiceman_tr').css("display", "");
   } else {
      $('.ExServiceman_tr').css("display", "none"); $(".ExServiceman_tr input:not([type='radio'])").val(""); $(".ExServiceman_tr input[type='checkbox']").prop("checked", false); $(".ExServiceman_tr input[type='radio']").prop("checked", false);
   }
   //Project Affected
   if ($('#txtProjAffected').val() == "Yes") {
      $('.ProjAffectCert_det').css("display", "");
   } else {
      $('.ProjAffectCert_det').css("display", "none"); $(".ProjAffectCert_det input:not([type='radio'])").val(""); $(".ProjAffectCert_det input[type='checkbox']").prop("checked", false); $(".ProjAffectCert_det input[type='radio']").prop("checked", false);
   }
   //Earthquake Affected
   if ($('#txtEarthAffected').val() == "Yes") {
      $('.EarthAffectCert_det').css("display", "");
   } else {
      $('.EarthAffectCert_det').css("display", "none"); $(".EarthAffectCert_det input:not([type='radio'])").val(""); $(".EarthAffectCert_det input[type='checkbox']").prop("checked", false); $(".EarthAffectCert_det input[type='radio']").prop("checked", false);
   }
   // Sports Person Details-------
   if ($('#txtSportPerson').val() == "Yes") {
      $('.SportPerson_tr').css("display", "");
   } else {
      $('.SportPerson_tr').css("display", "none"); $(".SportPerson_tr input:not([type='radio'])").val(""); $(".SportPerson_tr input[type='checkbox']").prop("checked", false); $(".SportPerson_tr input[type='radio']").prop("checked", false); $(".SportPerson_tr select").val(""); $(".SportPerson_tr select").selectpicker('refresh');
   }
   // Part Time employee
   if ($('#txtPartTimeEmp').val() == "Yes") {
      $('.PartTime_tr').css("display", "");
   } else {
      $('.PartTime_tr').css("display", "none"); $(".PartTime_tr input:not([type='radio'])").val(""); $(".PartTime_tr input[type='checkbox']").prop("checked", false); $(".PartTime_tr input[type='radio']").prop("checked", false); $(".PartTime_tr select").val(""); $(".PartTime_tr select").selectpicker('refresh');
   }
   // Debarred
   if ($('#txtShortHandSpeed').val() == "Yes") {
      $('.PreExDeta_tr').css("display", "");
   } else {
      $('.PreExDeta_tr').css("display", "none"); $(".PreExDeta_tr input:not([type='radio'])").val(""); $(".PreExDeta_tr input[type='checkbox']").prop("checked", false); $(".PreExDeta_tr input[type='radio']").prop("checked", false); $(".PreExDeta_tr select").val(""); $(".PreExDeta_tr select").selectpicker('refresh');
   }
   // Person with Benchmark disability Details------
   if ($('#txtPWD').val() == "Yes") {
      $('.PWD_tr').css("display", "");

      if (ConfigurationObj.DisabilityType.split('~')[2] == 'YY' || ConfigurationObj.DisabilityType.split('~')[2] == 'YN')
		{
			$('.Wheelchair_tr').css("display", "");
			
			if ($('#txtDisabilityType').val() != "b) D - Deaf, HH - Hearing Handicapped") 
			{
				$('.Scribe_tr').css("display", "");
			}else{
				$('.Scribe_tr').css("display", "none"); $(".Scribe_tr input:not([type='radio'])").val(""); $(".Scribe_tr input[type='checkbox']").prop("checked", false); $(".Scribe_tr input[type='radio']").prop("checked", false);
			}
      } else { $('.Wheelchair_tr').css("display", "none");$('.Scribe_tr').css("display", "none"); }
   } else {
      $('.PWD_tr').css("display", "none"); $(".PWD_tr input:not([type='radio'])").val(""); $(".PWD_tr input[type='checkbox']").prop("checked", false); $(".PWD_tr input[type='radio']").prop("checked", false); $(".PWD_tr select").val(""); $(".PWD_tr select").selectpicker('refresh');
      $('.Scribe_tr').css("display", "none"); $(".Scribe_tr input:not([type='radio'])").val(""); $(".Scribe_tr input[type='checkbox']").prop("checked", false); $(".Scribe_tr input[type='radio']").prop("checked", false);
      $('.Wheelchair_tr').css("display", "none"); $(".Wheelchair_tr input:not([type='radio'])").val(""); $(".Wheelchair_tr input[type='checkbox']").prop("checked", false); $(".Wheelchair_tr input[type='radio']").prop("checked", false);
   }
   // if ($('#txtDisabilityType').val() == "(d) CP - Cerebral Palsy" || $('#txtDisabilityType').val() == "(e) MD - Multiple disabilities involving (a) to (d) above") {
      // if (ConfigurationObj.DisabilityType.split('~')[1] == 'YY' || ConfigurationObj.DisabilityType.split('~')[1] == 'YN') {
         // $('.Scribe_tr').css("display", "");
      // } else { $('.Scribe_tr').css("display", "none"); }
   // } else {
      // $('.Scribe_tr').css("display", "none"); $(".Scribe_tr input:not([type='radio'])").val(""); $(".Scribe_tr input[type='checkbox']").prop("checked", false); $(".Scribe_tr input[type='radio']").prop("checked", false);
   // }

   if ($('#txtScribe').val() == "Yes") {
      $('#txtOwnScribe').parents(".efmCls").hide();$('.ScribeNote').css("display", "");
   } else {
      $('.ScribeNote').css("display", "none");$('#txtOwnScribe').parents(".efmCls").hide(); $("#txtOwnScribe").val(""); $("#txtOwnScribe").prop("checked", false);
   }
   if ($('#txtWarHero').val() == "Yes") {
      $('.WarHero_tr').css("display", "");
   } else {
      $('.WarHero_tr').css("display", "none"); $(".WarHero_tr input:not([type='radio'])").val(""); $(".WarHero_tr input[type='checkbox']").prop("checked", false); $(".WarHero_tr input[type='radio']").prop("checked", false); $(".WarHero_tr select").val(""); $(".WarHero_tr select").selectpicker('refresh');
   }
   if ($('#txtGovtEmp').val() == "Yes") {
      $('.GovtEmp_tr').css("display", "");
   } else {
      $('.GovtEmp_tr').css("display", "none"); $(".GovtEmp_tr input:not([type='radio'])").val(""); $(".GovtEmp_tr input[type='checkbox']").prop("checked", false); $(".GovtEmp_tr input[type='radio']").prop("checked", false); $(".GovtEmp_tr select").val(""); $(".GovtEmp_tr select").selectpicker('refresh');
   }
   if ($('#txtEmploymentType').val() == "Contractual") {
      $('.Contractual_Note').css("display", "");
   } else {
      $('.Contractual_Note').css("display", "none");
   }
   
   //Current Emp org
   if ($('#txtCurrentOrgEmp').val() == "Yes") {
      $('.CurrentOrgEmp_tr').css("display", "");
   } else {
      $('.CurrentOrgEmp_tr').css("display", "none"); $(".CurrentOrgEmp_tr input:not([type='radio'])").val(""); $(".CurrentOrgEmp_tr input[type='checkbox']").prop("checked", false); $(".CurrentOrgEmp_tr input[type='radio']").prop("checked", false); $(".CurrentOrgEmp_tr select").val(""); $(".CurrentOrgEmp_tr select").selectpicker('refresh');
   }
   if ($('#txtPanCard').val() == "Yes") {
      $('.PanCard_tr').css("display", "");
   } else {
      $('.PanCard_tr').css("display", "none"); $(".PanCard_tr input:not([type='radio'])").val(""); $(".PanCard_tr input[type='checkbox']").prop("checked", false); $(".PanCard_tr input[type='radio']").prop("checked", false); $(".PanCard_tr select").val(""); $(".PanCard_tr select").selectpicker('refresh');
   }
   if ($('#txtDrivingLicense').val() == "Yes") {
      $('.DrivingLicense_tr').css("display", "");
   } else if($('#txtPostName').val() == "Constable Cum Driver" && $('#txtDrivingLicense').val() == "No"){
	   alert_if('Driving License is Mandatory for "Constable Cum Driver" post. You are not Eligible.');
	   $(".DrivingCls input[type='radio']").prop("checked", false); $(".DrivingCls select").val("");
   } else if($('#txtPostName').val() != "Constable Cum Driver" && ($('#txtDrivingLicense').val() == "No"|| $('#txtDrivingLicense').val() == "")){
      $('.DrivingLicense_tr').css("display", "none"); $(".DrivingLicense_tr input:not([type='radio'])").val(""); $(".DrivingLicense_tr input[type='checkbox']").prop("checked", false); $(".DrivingLicense_tr input[type='radio']").prop("checked", false); $(".DrivingLicense_tr select").val(""); $(".DrivingLicense_tr select").selectpicker('refresh');
   }
   if ($('#txtVoterId').val() == "Yes") {
      $('.VoterId_tr').css("display", "");
   } else {
      $('.VoterId_tr').css("display", "none"); $(".VoterId_tr input:not([type='radio'])").val(""); $(".VoterId_tr input[type='checkbox']").prop("checked", false); $(".VoterId_tr input[type='radio']").prop("checked", false); $(".VoterId_tr select").val(""); $(".VoterId_tr select").selectpicker('refresh');
   }
   if ($('#txtPassport').val() == "Yes") {
      $('.Passport_tr').css("display", "");
   } else {
      $('.Passport_tr').css("display", "none"); $(".Passport_tr input:not([type='radio'])").val(""); $(".Passport_tr input[type='checkbox']").prop("checked", false); $(".Passport_tr input[type='radio']").prop("checked", false); $(".Passport_tr select").val(""); $(".Passport_tr select").selectpicker('refresh');
   }
   if ($('#payment_mode').val() == "Challan") {
      $('.offline_tr').css("display", "");
   } else {
      $('.offline_tr').css("display", "none"); $(".offline_tr input:not([type='radio'])").val(""); $(".offline_tr input[type='checkbox']").prop("checked", false); $(".offline_tr input[type='radio']").prop("checked", false); $(".offline_tr select").val(""); $(".offline_tr select").selectpicker('refresh');
   }
   if ($('#txtIsFIR').val() == "Yes") {
      $('.FIR_tr').css("display", "");
   } else {
      $('.FIR_tr').css("display", "none"); $(".FIR_tr input:not([type='radio'])").val(""); $(".FIR_tr input[type='checkbox']").prop("checked", false); $(".FIR_tr input[type='radio']").prop("checked", false); $(".FIR_tr select").val(""); $(".FIR_tr select").selectpicker('refresh');
   }
   if ($('#txtFIRStatus').val() == "Open") {
      $('.FIRCasedet_tr').css("display", "");
   } else {
      $('.FIRCasedet_tr').css("display", "none"); $(".FIRCasedet_tr input:not([type='radio'])").val("");
   }
   if ($('#txtIsCriminalCase').val() == "Yes") {
      $('.Criminal_tr').css("display", "");
   } else {
      $('.Criminal_tr').css("display", "none"); $(".Criminal_tr input:not([type='radio'])").val(""); $(".Criminal_tr input[type='checkbox']").prop("checked", false); $(".Criminal_tr input[type='radio']").prop("checked", false); $(".Criminal_tr select").val(""); $(".Criminal_tr select").selectpicker('refresh');
   }
   if ($('#txtIsCriminalByCourt').val() == "Yes") {
      $('.CriminalByCourt_tr').css("display", "");
   } else {
      $('.CriminalByCourt_tr').css("display", "none"); $(".CriminalByCourt_tr input:not([type='radio'])").val(""); $(".CriminalByCourt_tr input[type='checkbox']").prop("checked", false); $(".CriminalByCourt_tr input[type='radio']").prop("checked", false); $(".CriminalByCourt_tr select").val(""); $(".CriminalByCourt_tr select").selectpicker('refresh');
   }
   
   if ($('#txtIsDepCourtEnq').val() == "Yes") {
      $('.DepEnq_tr').css("display", "");
   } else {
      $('.DepEnq_tr').css("display", "none"); $(".DepEnq_tr input:not([type='radio'])").val(""); $(".DepEnq_tr input[type='checkbox']").prop("checked", false); $(".DepEnq_tr input[type='radio']").prop("checked", false); $(".DepEnq_tr select").val(""); $(".DepEnq_tr select").selectpicker('refresh');
   }
   
   // typing details
   if ($("#txtPostName").val() == 'Commissioner Land Records') {
      $('.Typing_tr').css("display", "");
   } else {
      $('.Typing_tr').css("display", "none"); $(".Typing_tr input:not([type='radio'])").val(""); $(".Typing_tr input[type='checkbox']").prop("checked", false); $(".Typing_tr input[type='radio']").prop("checked", false); $(".Typing_tr select").val(""); $(".Typing_tr select").selectpicker('refresh');
   }
   
    // var post=$("#txtPostName").val();
   
   // if ($("#txtPostName").val() == 'Commissioner Land Records' && $("#txtTyMSC").val() == 'No') {
	   // alert_if('You are not eligible as mandatory criteria is not getting fulfilled for '+post+'.');
	   // $(".Typing_tr input[type='radio']").prop("checked", false);$("#txtTyMSC").val("");
   // }
   
   /////////////Document Hide Show//////////
   
   //Family Planning
    // if ($("#txtNumberofChilds").val() != '' && ($("#txtNumberofChilds").val() > 0 || $("#txtNumberofChilds").val() == 'More than 2')) {
		// $("#txtFamilyPlan_span").parents(".efrmgen-flexrow").show();
	// }else{
		// $("#txtFamilyPlan_span").parents(".efrmgen-flexrow").hide();
	// }
	
	//$("#txt789thper").val() == 'Yes'
	if($("#txt789thper").val() == 'Yes'){
		$("#txt789ClassMarksheet_span").parents(".efrmgen-flexrow").show();
	}else{
		$("#txt789ClassMarksheet_span").parents(".efrmgen-flexrow").hide();
	}
	
	//Part Time Employee
    if ($("#txtPartTimeEmp").val() == 'Yes') {
		$("#txtPartTimeCerti_span").parents(".efrmgen-flexrow").show();
	}else{
		$("#txtPartTimeCerti_span").parents(".efrmgen-flexrow").hide();
	}

   //Matriculation 
   if (ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YN') {
      $("#txt10thCert_span").parents(".efrmgen-flexrow").show(); $("#txt10ClassMarksheet_span").parents(".efrmgen-flexrow").hide();
   } else {
      $("#txt10thCert_span").parents(".efrmgen-flexrow").hide(); $("#txt10ClassMarksheet_span").parents(".efrmgen-flexrow").hide();
   }
   if (ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YY') {
      $("#txt10thCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txt10ClassMarksheet_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txt10thCert_span").parents(".efrmgen-flexrow").find('sup').html(''); $("#txt10ClassMarksheet_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Intermediate
   if ((ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY' && $('#txtExServiceman').val() == 'No') || ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YN') {
      $("#txt12thCert_span").parents(".efrmgen-flexrow").show(); $("#txt12ClassMarksheet_span").parents(".efrmgen-flexrow").hide();
   } else {
      $("#txt12thCert_span").parents(".efrmgen-flexrow").hide(); $("#txt12ClassMarksheet_span").parents(".efrmgen-flexrow").hide();
   }
   if (ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY' && $('#txtExServiceman').val() == 'No') {
      $("#txt12thCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txt12ClassMarksheet_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txt12thCert_span").parents(".efrmgen-flexrow").find('sup').html(''); $("#txt12ClassMarksheet_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Diploma 
   if ((ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YN')) {
      $("#txtDiplomaCert_span").parents(".efrmgen-flexrow").show(); $("#txtDiplomaMark_span").parents(".efrmgen-flexrow").hide();
   } else {
      $("#txtDiplomaCert_span").parents(".efrmgen-flexrow").hide(); $("#txtDiplomaMark_span").parents(".efrmgen-flexrow").hide();
   }
   if (ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YY' || ($('#txtDiplomaName').val() != '' || $('#txtDiplomaInsti').val() != '' || $('#txtDipPerMarkCGPA').val() != '' || $('#txtDipPassDate').val() != '')) {
      $("#txtDiplomaCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txtDiplomaMark_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtDiplomaCert_span").parents(".efrmgen-flexrow").find('sup').html(''); $("#txtDiplomaMark_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Graduation 
   if ((ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YN')) {
      $("#xtGraduationCert_span").parents(".efrmgen-flexrow").show(); $("#txtGraduationMark_span").parents(".efrmgen-flexrow").hide();
   } else {
      $("#xtGraduationCert_span").parents(".efrmgen-flexrow").hide(); $("#txtGraduationMark_span").parents(".efrmgen-flexrow").hide();
   }
   if ((ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YY') || ($('#txtGradDegree').val() != '' || $('#txtGradInsti').val() != '' || $('#txtGradPrMarkCGPA').val() != '' || $('#txtgraddate').val() != '')) {
      $("#txtGraduationCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txtGraduationMark_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtGraduationCert_span").parents(".efrmgen-flexrow").find('sup').html(''); $("#txtGraduationMark_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Post Graduation
   if (ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YN') {
      $("#txtPostGradCert_span").parents(".efrmgen-flexrow").show(); $("#txtPostGradMark_span").parents(".efrmgen-flexrow").hide();
   } else {
      $("#txtPostGradCert_span").parents(".efrmgen-flexrow").hide(); $("#txtPostGradMark_span").parents(".efrmgen-flexrow").hide();
   }
   if (ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YY') {
      $("#txtPostGradCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txtPostGradMark_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtPostGradCert_span").parents(".efrmgen-flexrow").find('sup').html(''); $("#txtPostGradMark_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Higher qualification degree details certificate
   if (ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YY' || ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YN') {
      $("#txtOHigherQualCert_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtOHigherQualCert_span").parents(".efrmgen-flexrow").hide();
   }
   if (ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YY') {
      $("#txtOHigherQualCert_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtOHigherQualCert_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Additional Qualification Certificate
   if (ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YY' || ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YN') {
      $("#txtAddQualCert_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtAddQualCert_span").parents(".efrmgen-flexrow").hide();
   }
   if (ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YY') {
      $("#txtAddQualCert_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtAddQualCert_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Domicile 
   // if ($('#txtDomicile').val() == "Yes" && (ConfigurationObj.DomcileDetailsReq.split('~')[2] == 'YY' || ConfigurationObj.DomcileDetailsReq.split('~')[2] == 'YN')) {
      // $("#txtStateDomicile_span").parents(".efrmgen-flexrow").show();
   // } else {
      // $("#txtStateDomicile_span").parents(".efrmgen-flexrow").hide();
   // }
   // if (ConfigurationObj.DomcileDetailsReq.split('~')[2] == 'YY' && $('#txtDomicile').val() == "Yes") {
      // $("#txtStateDomicile_span").parents(".efrmgen-flexrow").find('sup').html('*');
   // } else {
      // $("#txtStateDomicile_span").parents(".efrmgen-flexrow").find('sup').html('');
   // }
   //-n-
   // if(($('#txtCategory').val()!="Open"&&$('#txtCategory').val()!="Economically Weaker Section (EWS)")&&$("#txtDomicile").val()=="Yes"){
   //    $('#DomicileDetails').find('sup').html('*');
   // }else{  
   //    $('#DomicileDetails').find('sup').html('');
   //    $("#txtStateDomicile_span").parents(".efrmgen-flexrow").find('sup').html(''); 
   // }
   //Experience related docs 
   if ((ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') && $("#ON1").val() != "") {
      $("#txtExpCerti_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtExpCerti_span").parents(".efrmgen-flexrow").hide();
   }
   if ((ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') && $("#ON2").val() != "") {
      $("#txtExpCerti2_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtExpCerti2_span").parents(".efrmgen-flexrow").hide();
   }
   if ((ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') && $("#ON3").val() != "") {
      $("#txtExpCerti3_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtExpCerti3_span").parents(".efrmgen-flexrow").hide();
   }
   if ((ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') && $("#ON1").val() != "") {
      $("#txtExpCerti_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtExpCerti_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   if ((ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') && $("#ON2").val() != "") {
      $("#txtExpCerti2_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtExpCerti2_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   if ((ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') && $("#ON3").val() != "") {
      $("#txtExpCerti3_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtExpCerti3_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
	   
   for (var i = 1; i <= maxExpRows; i++) {
	  if (document.getElementById("PartATableData_row" + i).style.display == "") {
		 if (document.getElementById("PS" + i).value == "Government" || document.getElementById("PS" + i).value == "Semi Government") {
			$(".OtherCourse" + i).show();
		 }
		 else {
			$(".OtherCourse" + i).hide();$('#NOC'+i).val('');$('#NOC' + i).selectpicker('refresh');
		 }
	  }
   }
   //Ex-servicemen docs
   if ($('#txtExServiceman').val() == "Yes") {
      $("#txtESMCerti_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtESMCerti_span").parents(".efrmgen-flexrow").hide();
   }

   if (ConfigurationObj.ExservicemenDetailsReq.split('~')[0] == 'YY' && $('#txtExServiceman').val() == "Yes") {
      $("#txtESMCerti_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtESMCerti_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //NAme cahnge docs
   if ($('#txtNameChanged').val() == "Yes") {
      $("#txtNameCerti_span").parents(".efrmgen-flexrow").show();
      $("#txtNameCerti_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtNameCerti_span").parents(".efrmgen-flexrow").hide();
      $("#txtNameCerti_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Orphange docs
   if (($('#txtCurrentOrgEmp').val() == "Yes")) {
      $("#txtOrphaneCert_span").parents(".efrmgen-flexrow").show();
      $("#txtOrphaneCert_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtOrphaneCert_span").parents(".efrmgen-flexrow").hide();
      $("#txtOrphaneCert_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Non-cremilyer docs
   if ($('#txtKMigrant').val() == "Yes") {
      $("#txtNonCreamLayerCert_span").parents(".efrmgen-flexrow").show();
      $("#txtNonCreamLayerCert_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtNonCreamLayerCert_span").parents(".efrmgen-flexrow").hide();
      $("#txtNonCreamLayerCert_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //ID Proof docs
   if (ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YY' || ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YN') {
      $("#txtIDProof1_span").parents(".efrmgen-flexrow").show();
      $("#txtIDProof1_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtIDProof1_span").parents(".efrmgen-flexrow").hide();
      $("#txtIDProof1_span").parents(".efrmgen-flexrow").find('sup').html('');
   }

   //Sport docs
   if ($('#txtSportPerson').val() == "Yes") {
      $("#txtSportCerti_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtSportCerti_span").parents(".efrmgen-flexrow").hide();
   }
   //ConfigurationObj.SportsPersonDetailsReq.split('~')[0]=='YY' &&
   if (ConfigurationObj.SportsPersonDetailsReq.split('~')[0] == 'YY' && $('#txtSportPerson').val() == "Yes") {
      $("#txtSportCerti_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtSportCerti_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //caste certi
   if (($('#txtCategory').val() != "Open") && (ConfigurationObj.Category.split('~')[2] == 'YY' || ConfigurationObj.Category.split('~')[2] == 'YN')) {
      $("#txtCastCerti_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtCastCerti_span").parents(".efrmgen-flexrow").hide();
   }
   // if (($('#txtCategory').val() == "Economically Weaker Section (EWS)")) {
      // $("#txtCastCerti_span").parents(".efrmgen-flexrow").hide();
   // }
   if ($('#txtCategory').val() != "Open" && ConfigurationObj.Category.split('~')[2] == 'YY') {
      $("#txtCastCerti_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtCastCerti_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Disability certi
   if ($('#txtPWD').val() == "Yes") {
      $("#txtDisabilityCert_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtDisabilityCert_span").parents(".efrmgen-flexrow").hide();
   }
   //Economically Weaker Section (EWS) certi
   if ($('#txtCategory').val() == "Economically Weaker Section (EWS)" && (ConfigurationObj.Category.split('~')[2] == 'YY' || ConfigurationObj.Category.split('~')[2] == 'YN')) {
      $("#txtEWSCerti_span").parents(".efrmgen-flexrow").show();
	  $("#txtCastCerti_span").parents(".efrmgen-flexrow").hide();
   } else {
      $("#txtEWSCerti_span").parents(".efrmgen-flexrow").hide();
   }
   if ($('#txtCategory').val() == "Economically Weaker Section (EWS)" && ConfigurationObj.Category.split('~')[2] == 'YY') {
      $("#txtEWSCerti_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtEWSCerti_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   //Noc certi
   if ($('#txtNoc').val() == "Yes") {
      $("#txtNocCert_span").parents(".efrmgen-flexrow").show();
   } else {
      $("#txtNocCert_span").parents(".efrmgen-flexrow").hide();
   }
   if ($('#txtNoc').val() == "Yes" && ConfigurationObj.DeptEmployeeDetailsReq.split('~')[0] == 'YY') {
      $("#txtNocCert_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtNocCert_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
 
   //12th or diploma
   if ((ConfigurationObj["12orDipReq"].split('~')[0] == 'YN' && $('#txtExServiceman').val() == 'No') && ($('#txtDiplomaName').val() != '' || $('#txtDiplomaInsti').val() != '' || $('#txtDipPerMarkCGPA').val() != '' || $('#txtDipPassDate').val() != '')) {
      $("#txtDiplomaCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txtDiplomaMark_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txtDiplomaCert_span").parents(".efrmgen-flexrow").find('sup').html(''); $("#txtDiplomaMark_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   if ((ConfigurationObj["12orDipReq"].split('~')[0] == 'YN' && $('#txtExServiceman').val() == 'No')&& ($('#txt12thBoard').val() != '' || $('#txt12thschool').val() != '' || $('#txt12PerMarkCGPA').val() != '' || $('#txt12thYOP').val() != '')) {
      $("#txt12thCert_span").parents(".efrmgen-flexrow").find('sup').html('*'); $("#txt12ClassMarksheet_span").parents(".efrmgen-flexrow").find('sup').html('*');
   } else {
      $("#txt12thCert_span").parents(".efrmgen-flexrow").find('sup').html(''); $("#txt12ClassMarksheet_span").parents(".efrmgen-flexrow").find('sup').html('');
   }
   if ((ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY'&& $('#txtExServiceman').val() == 'No') || ($('#txt12thBoard').val() != '' || $('#txt12thschool').val() != '' || $('#txt12PerMarkCGPA').val() != '' || $('#txt12thYOP').val() != '')) {
      $('.12thDetReq_tr').find('sup').html('*');
   } else {
      $('.12thDetReq_tr').find('sup').html('');
   }
   if ((ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YY' && $('#txtExServiceman').val() == 'No') || ($('#txtDiplomaName').val() != '' || $('#txtDiplomaInsti').val() != '' || $('#txtDipPerMarkCGPA').val() != '' || $('#txtDipPassDate').val() != '')) {
      $('.DiplomaDetReq_tr').find('sup').html('*');
   } else {
      $('.DiplomaDetReq_tr').find('sup').html('');
   }
   if ((ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YY') || ($('#txtGradDegree').val() != '' || $('#txtGradInsti').val() != '' || $('#txtGradPrMarkCGPA').val() != '' || $('#txtgraddate').val() != '')) {
      $('.GradDetReq_tr').find('sup').html('*');
   } else {
      $('.GradDetReq_tr').find('sup').html('');
   }
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ($('#ON1').val() != '' || $('#PN1').val() != '' || $('#SD1').val() != '' || $('#ED1').val() != ''|| $('#PS1').val() != '')) {
      $('#PartATableData_row1').find('sup').html('*');
   } else {
      $('#PartATableData_row1').find('sup').html('');
   }
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ($('#ON2').val() != '' || $('#PN2').val() != '' || $('#SD2').val() != '' || $('#ED2').val() != ''|| $('#PS2').val() != '')) {
      $('#PartATableData_row2').find('sup').html('*');
   } else {
      $('#PartATableData_row2').find('sup').html('');
   }
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ($('#ON3').val() != '' || $('#PN3').val() != '' || $('#SD3').val() != '' || $('#ED3').val() != ''|| $('#PS2').val() != '')) {
      $('#PartATableData_row3').find('sup').html('*');
   } else {
      $('#PartATableData_row3').find('sup').html('');
   }
   
   if($('#txtExServiceman').val() == 'Yes'){
	   $('.exid').html('');
   }
   ExServiceVal();
  
   // SetFormConfiguration();
}
// ======================================Qualification=============================
function hideShowQualDetails() {
	//7th/8th/9th/10th
	if($("#txtPostName").val() == 'Constable Cum Driver'){
		$('.789thDetReq_tr').css("display", "");
   } else {
      $('.789thDetReq_tr').css("display", "none"); $(".789thDetReq_tr input:not([type='radio'])").val(""); $(".789thDetReq_tr input[type='checkbox']").prop("checked", false); $(".789thDetReq_tr input[type='radio']").prop("checked", false);$(".789thDetReq_tr select").val(""); $(".789thDetReq_tr select").selectpicker('refresh');
   }
	
   if ($("#txtGradDegree").val() == "Any Other Graduate") { $("#GradODegree").show(); } else { $("#GradODegree").hide(); $("#txtGradODegree").val(""); }
   if ($("#txtPGDegree").val() == "Others") { $("#OHDegreeDet").show(); } else { $("#OHDegreeDet").hide(); $("#txtPGODegree").val(""); }
   if ($("#txtHighQual1Degree").val() == "Others") { $("#HighQual1ODegree").show(); } else { $("#HighQual1ODegree").hide(); $("#txtHighQual1ODegree").val(""); }
   if ($("#txtHighQual2Degree").val() == "Others") { $("#HighQual2ODegree").show(); } else { $("#HighQual2ODegree").hide(); $("#txtHighQual2ODegree").val(""); }
   if ($("#txt12Subject").val() == "Others") { $("#txt12OSubject").parents(".efmCls").show(); }
   else { $("#txt12OSubject").parents(".efmCls").hide(); $("#txt12OSubject").val(""); }
   if ($("#txtDiplomaName").val() == "Any Other") { $("#txtDipOSubject").parents(".efmCls").show(); }
   else { $("#txtDipOSubject").parents(".efmCls").hide(); $("#txtDipOSubject").val(""); }
   if ($("#txtGradSubject").val() == "Others") { $("#txtGradOSubject").parents(".efmCls").show(); }
   else { $("#txtGradOSubject").parents(".efmCls").hide(); $("#txtGradOSubject").val(""); }
   if ($("#txtPGSubject").val() == "Others") { $("#txtPGOSubject").parents(".efmCls").show(); }
   else { $("#txtPGOSubject").parents(".efmCls").hide(); $("#txtPGOSubject").val(""); }
   if ($("#txtHighQual1Subject").val() == "Others") { $("#txtHighQual1OSubject").parents(".efmCls").show(); }
   else { $("#txtHighQual1OSubject").parents(".efmCls").hide(); $("#txtHighQual1OSubject").val(""); }
   if ($("#txtHighQual2Subject").val() == "Others") { $("#txtHighQual2OSubject").parents(".efmCls").show(); }
   else { $("#txtHighQual2OSubject").parents(".efmCls").hide(); $("#txtHighQual2OSubject").val(""); }
   // 789th----------------
   // if ($('#txt789PerMarkCGPA').val() == "Percentage") {
      // $('#789thper').show(); $('.mand7').show();
   // } else {
      // $('.mand7').hide(); $('#789thper').hide(); $('#txt789thper').val('');
   // }
   // if ($('#txt789PerMarkCGPA').val() == "Grade of Marks") {
      // $('#789thGrade').show();
   // } else {
      // $('#789thGrade').hide(); $('#txt789thGrade').val('');
   // }
   // if ($('#txt789PerMarkCGPA').val() == "CGPA") {
      // $('.10thCGPA').show(); $('#789thMarksObt').hide(); $('#789thMaxMarks').hide(); $('#txt789thmarks').val(''); $('#txt789thtotalmarks').val('');
   // } else {
      // $('.10thCGPA').hide(); $('#789thMarksObt').show(); $('#789thMaxMarks').show(); $(".10thCGPA input:not([type='radio'])").val('');
   // }
   // 10th----------------
   if ($('#txt10PerMarkCGPA').val() == "Percentage") {
      $('#10thper').show(); $('.mand1').show();
   } else {
      $('.mand1').hide(); $('#10thper').hide(); $('#txt10thper').val('');
   }
   if ($('#txt10PerMarkCGPA').val() == "Grade of Marks") {
      $('#10thGrade').show();
   } else {
      $('#10thGrade').hide(); $('#txt10thGrade').val('');
   }
   if ($('#txt10PerMarkCGPA').val() == "CGPA") {
      $('.10thCGPA').show(); $('#10thMarksObt').hide(); $('#10thMaxMarks').hide(); $('#txt10thmarks').val(''); $('#txt10thtotalmarks').val('');
   } else {
      $('.10thCGPA').hide(); $('#10thMarksObt').show(); $('#10thMaxMarks').show(); $(".10thCGPA input:not([type='radio'])").val('');
   }
   // 12th--------------------------
   if ($('#txt12PerMarkCGPA').val() == "Percentage") {
      $('.mand12').show();$('.mand12new').show();
	  if($('#txtExServiceman').val() == 'Yes'){$('.mand12').hide();}
   } else {
      $('.mand12').hide();$('.mand12new').hide(); $('#txt12thper').val('');
   }
   if ($('#txt12PerMarkCGPA').val() == "Grade of Marks") {
      $('#12thGrade').show();
   } else {
      $('#12thGrade').hide(); $('#txt12thGrade').val('');
   }
   if ($('#txt12PerMarkCGPA').val() == "CGPA") {
      $('.12thCGPA').show(); $('#12thMarksObt').hide(); $('#12thMaxMarks').hide(); $('#txt12thmarks').val(''); $('#txt12thtotalmarks').val('');
   } else {
      $('.12thCGPA').hide(); $('#12thMarksObt').show(); $('#12thMaxMarks').show(); $(".12thCGPA input:not([type='radio'])").val('');
   }
   // Diploma-----------------------------------
   if ($('#txtDipPerMarkCGPA').val() == "Percentage") {
      $('.mandMrkDip').show();$('.mandMrkDipnew').show();
	  if($('#txtExServiceman').val() == 'Yes'){$('.mandMrkDip').hide();}
   } else {
      $('.mandMrkDip').hide();$('.mandMrkDipnew').hide(); $('#txtDipPer').val('');
   }
   if ($('#txtDipPerMarkCGPA').val() == "Grade of Marks") {
      $('#DipGrade').show();
   } else {
      $('#DipGrade').hide(); $('#txtDipGrade').val('');
   }
   if ($('#txtDipPerMarkCGPA').val() == "CGPA") {
      $('.DipCGPA').show(); $('#DipMarks').hide(); $('#Diptotalmarks').hide(); $('#txtDipMarks').val(''); $('#txtDiptotalmarks').val('');
   } else {
      $('.DipCGPA').hide(); $('#DipMarks').show(); $('#Diptotalmarks').show(); $(".DipCGPA input:not([type='radio'])").val('');
   }
   // Grad--------------------------------------
   if ($('#txtGradPrMarkCGPA').val() == "Percentage") {
      $('.mandGrad').show();
   } else {
      $('.mandGrad').hide(); $('#txtGradper').val('');
   }
   if ($('#txtGradPrMarkCGPA').val() == "Grade of Marks") {
      $('#txtGradGrade_tr').show();
   } else {
      $('#txtGradGrade_tr').hide(); $('#txtGradGrade').val('');
   }
   if ($('#txtGradPrMarkCGPA').val() == "CGPA") {
      $('.GradCGPA').show(); $('#GradMarksObt').hide(); $('#GradMaxMarks').hide(); $('#txtGradmarks').val(''); $('#txtGradtotalmarks').val('');
   } else {
      $('.GradCGPA').hide(); $('#GradMarksObt').show(); $('#GradMaxMarks').show(); $(".GradCGPA input:not([type='radio'])").val('');
   }
   // Other Higher Grad--------------------------------------
   if ($('#txtPGPrMarkCGPA').val() == "Percentage") {
      $('.mandOHGrad').show();
   } else {
      $('.mandOHGrad').hide(); $('#txtPGper').val('');
   }
   if ($('#txtPGPrMarkCGPA').val() == "Grade of Marks") {
      $('#txtPGGrade_tr').show();
   } else {
      $('#txtPGGrade_tr').hide(); $('#txtPGGrade').val('');
   }
   if ($('#txtPGPrMarkCGPA').val() == "CGPA") {
      $('.OHighCGPA').show(); $('#OHighMarksObt').hide(); $('#OHighMaxMarks').hide(); $('#txtPGmarks').val(''); $('#txtPGtotalMarks').val('');
   } else {
      $('.OHighCGPA').hide(); $('#OHighMarksObt').show(); $('#OHighMaxMarks').show(); $(".OHighCGPA input:not([type='radio'])").val('');
   }
   // Any other Qual---------111111--------------------------
   if ($('#txtHighQual1PrMarkCGPA').val() == "Percentage") {
      $('.mandMHighQual1').show();
   } else {
      $('.mandMHighQual1').hide(); $('#txtHighQual1per').val('');
   }
   if ($('#txtHighQual1PrMarkCGPA').val() == "Grade of Marks") {
      $('#HighQual1Grade').show();
   } else {
      $('#HighQual1Grade').hide(); $('#txtHighQual1Grade').val('');
   }
   if ($('#txtHighQual1PrMarkCGPA').val() == "CGPA") {
      $('.HighQual1QualCGPA').show(); $('#HighQual1marks').hide(); $('#HighQual1totalmarks').hide(); $('#txtHighQual1marks').val(''); $('#txtHighQual1totalmarks').val('');
   } else {
      $('.HighQual1QualCGPA').hide(); $('#HighQual1marks').show(); $('#HighQual1totalmarks').show(); $(".HighQual1QualCGPA input:not([type='radio'])").val('');
   }
   // Any other Qual---------222222--------------------------
   if ($('#txtHighQual2PrMarkCGPA').val() == "Percentage") {
      $('.mandMHighQual2').show();
   } else {
      $('.mandMHighQual2').hide(); $('#txtHighQual2per').val('');
   }
   if ($('#txtHighQual2PrMarkCGPA').val() == "Grade of Marks") {
      $('#HighQual2Grade').show();
   } else {
      $('#HighQual2Grade').hide(); $('#txtHighQual2Grade').val('');
   }
   if ($('#txtHighQual2PrMarkCGPA').val() == "CGPA") {
      $('.HighQual2QualCGPA').show(); $('#HighQual2marks').hide(); $('#HighQual2totalmarks').hide(); $('#txtHighQual2marks').val(''); $('#txtHighQual2totalmarks').val('');
   } else {
      $('.HighQual2QualCGPA').hide(); $('#HighQual2marks').show(); $('#HighQual2totalmarks').show(); $(".HighQual2QualCGPA input:not([type='radio'])").val('');
   }

   //Exp table
   if (document.getElementById('expTtl').value != '') {
      $('#TotalExperience_span').val($('#expTtl').val());
      $('#TotalExperience_span').html($('#expTtl').val());
      for (i = 1; i <= maxExpRows; i++) {
         if (document.getElementById("YoS" + i).value != 'NaN' && document.getElementById("YoS" + i).value != '') {
            document.getElementById("YoS" + i + "_span").value = document.getElementById("YoS" + i).value;
            document.getElementById("YoS" + i + "_span").innerHTML = document.getElementById("YoS" + i).value;
            document.getElementById("PartATableData_row" + i).style.display = '';
         }
      }
   }
   setFeeWithRespectiveCourse();
}
function compareDates1(toDateId, fromDateId) {
   if (toDateId != "" && fromDateId != "") {
      var toDate = $("#" + toDateId).val();
      var fromDate = $("#" + fromDateId).val();
      if (toDate != "" && fromDate != "") {
         var splitToDate = toDate.split("/"); var splitFromDate = fromDate.split("/"); var todd = splitToDate[0]; var tomm = splitToDate[1]; var toyy = splitToDate[2]; var fromdd = splitFromDate[0]; var frommm = splitFromDate[1]; var fromyy = splitFromDate[2]; var rearrangedToDate = tomm + "/" + todd + "/" + toyy; var rearrangedFromDate = frommm + "/" + fromdd + "/" + fromyy; var selectedToDate = new Date(rearrangedToDate); var selectedFromDate = new Date(rearrangedFromDate); var currentDate = new Date();
         if (selectedFromDate >= selectedToDate) {
            alert_if("Please select correct dates");
            $("#" + fromDateId).val("");
            $("#" + toDateId).val("");
         }
      }
   }
}
function compareDates1New(toDateId, fromDateId) {
   if (toDateId != "" && fromDateId != "") {
      var toDate = $("#" + toDateId).val();
      var fromDate = $("#" + fromDateId).val();
      if (toDate != "" && fromDate != "") {
         var splitToDate = toDate.split("/"); 
		 var splitFromDate = fromDate.split("/"); 
		 var todd = splitToDate[0]; 
		 var tomm = splitToDate[1]; 
		 var toyy = splitToDate[2]; 
		 var fromdd = splitFromDate[0]; 
		 var frommm = splitFromDate[1]; 
		 var fromyy = splitFromDate[2]; 
		 var rearrangedToDate = tomm + "/" + todd + "/" + toyy; 
		 var rearrangedFromDate = frommm + "/" + fromdd + "/" + fromyy; 
		 var selectedToDate = new Date(rearrangedToDate); 
		 var selectedFromDate = new Date(rearrangedFromDate); 
		 var currentDate = new Date();
         if (toyy == fromyy) {
            alert_if("Selected Date of Issue year and Validity year cannot be same.");
            $("#" + fromDateId).val("");
            $("#" + toDateId).val("");
         }
		 else if (selectedFromDate >= selectedToDate) {
            alert_if("Please select correct dates");
            $("#" + fromDateId).val("");
            $("#" + toDateId).val("");
         }
      }
   }
}
function checkmark(id, id1, id2) {
   if (($("#" + id).val() != "") && ($("#" + id1).val() != "")) {
      if (parseInt($("#" + id).val()) > parseInt($("#" + id1).val())) {
         alert_if('Enter Proper Total Marks Obtained ');
         $("#" + id).val(""); $("#" + id1).val("");
         validate = false; return false;
      } else {
         $("#" + id2).val((($("#" + id).val() / $("#" + id1).val()) * 100).toFixed(2));
      }
   } else {
      $("#" + id2).val("");
   }
}
function checkmark2(id, id1, id2, id3) {
   if ($("#" + id3).val() == "Percentage") {
      if (($("#" + id).val() != "") && ($("#" + id1).val() != "")) {
         if (parseInt($("#" + id).val()) > parseInt($("#" + id1).val())) {
            alert_if('Enter Proper Total Marks Obtained ');
            $("#" + id).val(""); $("#" + id1).val("");
            validate = false; return false;
         } else {
            $("#" + id2).val((($("#" + id).val() / $("#" + id1).val()) * 100).toFixed(2));
            var k = id3.slice(3);
            // if (Number($("#" + id2).val()) < Number(ConfigurationObj[k].split("~")[0])) {
               // alert_if('Percentage should not be less than ' + ConfigurationObj[k].split("~")[0]);
               // $("#" + id).val("");
               // $("#" + id1).val("");
               // $("#" + id2).val("");
            // }
         }
      } else {
         $("#" + id2).val("");
      }
   } else {
      $("#" + id2).val("");
   }
}
function checkmark1(id, id1) {
   if (($("#" + id).val() != "") && ($("#" + id1).val() != "")) {
      if (parseInt($("#" + id).val()) > parseInt($("#" + id1).val())) {
         alert_if('Enter Proper Total Marks Obtained ');
         $("#" + id).val("");
         $("#" + id1).val("");
         validate = false;
         return false;
      } else {
      }
   } else {
   }
}
function checkcgpa(id) {
   if (Number(document.getElementById(id).value) > 10) {
      alert_if("Please enter correct CGPA.It cannot be greater than ten.");
      document.getElementById(id).value = ''; document.getElementById(id).focus(); validate = false; return false;
   } else {
      validate = true;
   }
}
function checkcgpa1(id, id1) {
   if (($("#" + id).val() != "") && ($("#" + id1).val() != "")) {
      if (Number($("#" + id).val()) > Number($("#" + id1).val())) {
         alert_if('CGPA obtained cannot be greater then Maximum CGPA');
         $("#" + id).val("");
         $("#" + id1).val("");
         validate = false;
      } else {
      }
   } else {
   }
}
function checkPerc(id) {
   if (document.getElementById(id).value != '') {
      if (/^[0-9.]+$/.test(document.getElementById(id).value)) {
         var perc2decimal = /^[0-9]{1,2}\.[0-9]{1,2}$/
         var perc10 = document.getElementById(id).value;
         var per10position = perc10.indexOf('0');
         if (per10position == 0) {
            alert_if("Percentage cannot start with zero. Please enter correct percentage.");
            document.getElementById(id).value = ''; document.getElementById(id).focus(); validate = false; return false;
         } else {
            validate = true;
         }
         if (Number(document.getElementById(id).value) > 100) {
            alert_if("Please enter correct Percentage.It cannot be greater than hundred.");
            document.getElementById(id).value = ''; document.getElementById(id).focus(); validate = false; return false;
         } else {
            validate = true;
         }
      }
   }
}
function calPerFromCGPA(cgpa, multiF, cgpaToPer) {
   var n1 = $("#" + cgpa).val();
   var n2 = $("#" + multiF).val();
   if (n1 != "" && n2 != "") {
      $("#" + cgpaToPer).val((Number(n1) * Number(n2)).toFixed(2));
   } else {
      $("#" + cgpaToPer).val("");
   }
}
function compareExpFromYearWithappDob1(dobId, expFromYearId) {
   if ($("#" + dobId).val() != "" && $("#" + expFromYearId).val() != "") {
      if ($("#" + expFromYearId).val().split('/')[$("#" + expFromYearId).val().split('/').length - 1] < $("#" + dobId).val().split('/')[2]) {
         alert_if("Selected date should not be before Date of Birth.");
         $("#" + expFromYearId).val("");
         return false;
      }
   }
   return true;
}
function checkWithDOB(id) {
   const dobCheckArr = ['txtDateOfMar', 'txtDateOfLastBorn', 'txtExameDate'];
   var dojMar = "Date of Marriage cannot be before Date of Birth."; var dojCas = "Case Date cannot be before Date of Birth."; var dojBirth = "Date of Birth of Last Born Child cannot be before Date of Birth."; var dojCas1 = "Case Date 2 cannot be before Date of Birth."; var dojCas2 = "Case Date 3 cannot be before Date of Birth."; var dojCas3 = "Case Date 4 cannot be before Date of Birth."; var dojCas4 = "Case Date 5 cannot be before Date of Birth."; var dojExam = "Exam Date under CPCT Details cannot be before Date of Birth.";
   const aletMessage = [dojMar, dojCas, dojBirth, dojCas1, dojCas2, dojCas3, dojCas4, dojExam];
   for (i = 0; i < dobCheckArr.length; i++) {
      if (document.getElementById(dobCheckArr[i]).value != "") {
         if (id == dobCheckArr[i] && id.value != '') {
            if (check_with_Dob(id, aletMessage[i])) {
               return true;
            }
            else {
               return false;
            }
         }
      }
   }
}
function check_with_Dob(id, statement) {
   if ($('#appDob').val() != "" && ($('#' + id).val() != "" || $('#' + id).val() != "NA")) {
      var dateString = $('#appDob').val();
      var AppliDob = dateString.split('/');
      var AppliYear = AppliDob[2];
      var AppliMonth = AppliDob[1];
      var AppliDate = AppliDob[0];
      var dateStringToDate = new Date(AppliYear + "-" + AppliMonth + "-" + AppliDate);
      var EdateString = $('#' + id).val();
      var EAppliDob = EdateString.split('/');
      var EAppliYear = EAppliDob[2];
      var EAppliMonth = EAppliDob[1];
      var EAppliDate = EAppliDob[0];
      var EdateStringToDate = new Date(EAppliYear + "-" + EAppliMonth + "-" + EAppliDate);
      if (dateStringToDate >= EdateStringToDate) {
         alert_if("" + statement);
         $('#' + id).val("");
         $('#' + id).focus();
         return false;
      } else {
         return true;
      }
   }
}
function isNotNumber(id, statement) {
   if ($('#' + id).val() != "") {
      if (/^\d+$/.test($('#' + id).val())) {
         alert_if("" + statement); $('#' + id).val("");
      }
   }
}
function Dob_Year(id) {
   Year_Check2(id, 'appDob', 'Year of Passing cannot be before Date of Birth.');
}
function Year_Check2(id, id1, statement) {
   if ($('#' + id1).val() != "" && $('#' + id).val() != "") {
      var AppliYear = '';
      var dateString = $('#' + id1).val();
      if (dateString.includes('/')) {
         var AppliDob = dateString.split('/'); AppliYear = AppliDob[2];
      }
      else {
         AppliYear = dateString;
      }
      var EdateString = $('#' + id).val();
      if (EdateString <= AppliYear) {
         alert_if("" + statement); $('#' + id).val(""); $('#' + id).selectpicker('refresh'); $('#' + id).focus();
		 $('.selectpicker').selectpicker('refresh');
      }
   }
}
function compareDDMMYY(id, compare, errmsg)//dates with format dd/mm/yyyy compare=less value
{
   if ($("#" + id).val() != "" && $("#" + compare).val() != "") {
      var dd = moment($("#" + id).val(), "DD/MM/YYYY");
      var dd1 = moment($("#" + compare).val(), "DD/MM/YYYY");
      if (Date.parse(dd) <= Date.parse(dd1)) {
         alert_if("Selected Date should not be less than " + errmsg);
         $("#" + id).val("");
		 $('.selectpicker').selectpicker('refresh');
      }
   }
}
function compareDDMMYYNew(id, compare, errmsg)//dates with format dd/mm/yyyy compare=less value
{
   if ($("#" + id).val() != "" && $("#" + compare).val() != "") {
      var dd = moment($("#" + id).val(), "DD/MM/YYYY");
      var dd1 = moment($("#" + compare).val(), "DD/MM/YYYY");
      if (Date.parse(dd) < Date.parse(dd1)) {
         alert_if("Selected Date should not be less than " + errmsg);
         $("#" + id).val("");
		 $('.selectpicker').selectpicker('refresh');
      }
   }
}
function compareYearDiff(id, compare, errmsg, diff) { //greater date, smaller date, err msg, diff needs to be in between
   if ($("#" + id).val() != "" && $("#" + compare).val() != "") {
      var dd = $("#" + id).val().split("/");
      var aa = dd[dd.length - 1];
      var dd1 = $("#" + compare).val().split("/");
      var aa1 = dd1[dd1.length - 1];
      if ((Number(aa) - Number(diff) + 1) <= Number(aa1)) {
         alert_if("There should be minimum year gap of " + diff + " years between " + errmsg);
         $("#" + id).val("");
		 $('.selectpicker').selectpicker('refresh');
      }
   }
}
function compareYearOnly(id, compare, errmsg) { //greater date, smaller date, err msg,
   if ($("#" + id).val() != "" && $("#" + compare).val() != "") {
      var dd = $("#" + id).val().split("/"); var aa = dd[dd.length - 1]; var dd1 = $("#" + compare).val().split("/"); var aa1 = dd1[dd1.length - 1];
      if ((Number(aa)) <= Number(aa1)) {
         alert_if("Selected Date should not be less than " + errmsg);
         $("#" + id).val("");
		 $('.selectpicker').selectpicker('refresh');
      }
   }
}
//////////// Additional Details Functions//////////////
function displayYearsOfService_ExSer(fromId, toId, rownum) {
   var fromDate = $("#" + fromId).val(); var toDate = $("#" + toId).val();
   if ((fromDate.trim() != "" && toDate.trim() == "") || (fromDate.trim() == "" && toDate.trim() != "")) {
      $("#" + rownum).val("");
   }
   if (fromDate.trim() != "" && toDate.trim() != "") {
      var ageArray = getMyDateDifferenceExp(fromDate, toDate);
      if (ageArray[0] == -1) { $("#" + rownum).val(""); }
      else {
         $("#" + rownum).val(ageArray[0] + " Year(s) " + ageArray[1] + " Month(s) " + ageArray[2] + " Day(s)");
         if (rownum == "txtExSerDuration") {
            $("#txtExseryears").val(ageArray[0]); $("#txtExserMonths").val(ageArray[1]); $("#txtExserDays").val(ageArray[2]);
         }
         if (rownum == "txtCurrentEmpDuration") {
            $("#txtCurrEmpyears").val(ageArray[0]); $("#txtCurrEmpMonths").val(ageArray[1]); $("#txtCurrEmpDays").val(ageArray[2]);
         }
         if (rownum == "txtDeptEmpDuration") {
            $("#txtDeptEmpyears").val(ageArray[0]); $("#txtDeptEmpMonths").val(ageArray[1]); $("#txtDeptEmpDays").val(ageArray[2]);
         }
      }
   } else if (fromDate.trim() != "" && toDate.trim() == "") {
      //"15/04/2022"
      toDate = datepicker_arr[0].split('_')[1] //if reliving date is not present , duration will be calculated using this date.
      var ageArray = getMyDateDifferenceExp(fromDate, toDate);
      if (ageArray[0] == -1) { $("#" + rownum).val(""); }
      else {
         $("#" + rownum).val(ageArray[0] + " Year(s) " + ageArray[1] + " Month(s) " + ageArray[2] + " Day(s)");
         if (rownum == "txtCurrentEmpDuration") {
            $("#txtCurrEmpyears").val(ageArray[0]); $("#txtCurrEmpMonths").val(ageArray[1]); $("#txtCurrEmpDays").val(ageArray[2]);
         }
         if (rownum == "txtDeptEmpDuration") {
            $("#txtDeptEmpyears").val(ageArray[0]); $("#txtDeptEmpMonths").val(ageArray[1]); $("#txtDeptEmpDays").val(ageArray[2]);
         }
         if (rownum == "txtExSerDuration") {
            $("#txtExseryears").val(ageArray[0]); $("#txtExserMonths").val(ageArray[1]); $("#txtExserDays").val(ageArray[2]);
         }
      }
   }
}

function compareExpFromYearWithappDob2(dobId, expFromYearId) {
   if ($("#" + dobId).val() != "" && $("#" + expFromYearId).val() != "") {
      if (!datecomparision1(dobId, expFromYearId)) {
         alert_if("Selected date should be more than Date of Birth");
         $("#" + expFromYearId).val("");
         return false;
      }
   }
   return true;
}

function DateComp_Exser(dobId, expFromYearId) {
   if ($("#" + dobId).val() != "" && $("#" + expFromYearId).val() != "" && $('#txtExSerSecuredEmp').val()=='No') {
      if (!datecomparision1(dobId, expFromYearId)) {
         alert_if("Selected date should be more than Date of Birth");
         $("#" + expFromYearId).val("");
         return false;
      }
   }
   return true;
}
/////////// EXPERIENCE VALIDATIONS STARTS HERE//////////
function displayYearsOfService(fromId, toId, rownum) {
   var fromDate = $("#" + fromId).val();
   var toDate = $("#" + toId).val();
   if ((fromDate.trim() != "" && toDate.trim() == "") || (fromDate.trim() == "" && toDate.trim() != "")) {
      $("#YoS" + rownum + "_span").html("");
   }
   if (fromDate.trim() != "" && toDate.trim() != "") {
      var ageArray = checkDateDifference3(fromDate, toDate);
      if (ageArray[0] == -1) {
         $("#YoS" + rownum + "_span").html("");
      }
      else {
         $("#YoS" + rownum + "_span").html(ageArray[0] + " Year(s) " + ageArray[1] + " Month(s) " + ageArray[2] + " Day(s)");
      }
      for (var i = 1; i <= maxExpRows; i++) {
         if (i == rownum) {
            document.getElementById("YoS" + i).value = ageArray[0] + " Year(s) " + ageArray[1] + " Month(s) " + ageArray[2] + " Day(s)";
         }
      }
   }
   displayTotalExperience();
}
function compareDates(toDateId, fromDateId) {
   if (toDateId != "" && fromDateId != "") {
      var toDate = $("#" + toDateId).val();
      var fromDate = $("#" + fromDateId).val();
      if (toDate != "" && fromDate != "") {
         var splitToDate = toDate.split("/"); var splitFromDate = fromDate.split("/"); var todd = splitToDate[0]; var tomm = splitToDate[1]; var toyy = splitToDate[2]; var fromdd = splitFromDate[0]; var frommm = splitFromDate[1]; var fromyy = splitFromDate[2]; var rearrangedToDate = tomm + "/" + todd + "/" + toyy; var rearrangedFromDate = frommm + "/" + fromdd + "/" + fromyy; var selectedToDate = new Date(rearrangedToDate); var selectedFromDate = new Date(rearrangedFromDate); var currentDate = new Date();
         if (selectedToDate > selectedFromDate) {
            alert_if("Please select correct dates");
            $("#" + toDateId).val("");
            $("#" + fromDateId).val("");
         }
      }
   }
}
function compareExpFromYearWithappDob(dobId, expFromYearId) {
   if ($("#" + dobId).val() != "" && $("#" + expFromYearId).val() != "") {
      var rowcount = expFromYearId.substr(expFromYearId.length - 1);
      if (!datecomparision1(dobId, expFromYearId)) {
         alert_if("'From Date' in row "
            + rowcount
            + " in Work Experience Details should be more than Date of Birth");
         $("#" + expFromYearId).val("");
         return false;
      }
   }
   return true;
}
function compareFromYearWithToYear(key, expYearFromId, expYearToId) {
   if ($("#" + expYearFromId).val() != "" && $("#" + expYearToId).val() != "") {
      var rowcount = expYearFromId.substr(expYearFromId.length - 1);
      if (!datecomparision1(expYearFromId, expYearToId)) {
         if (key == "from") {
            alert_if("'From Date' should be less than 'To Date' in row "
               + rowcount + " in Work Experience Details.");
            $("#" + expYearFromId).val("");
            return false;
         }
         if (key == "to") {
            alert_if("'To Date' should be more than 'From Date' in row "
               + rowcount + " in Work Experience Details.");
            $("#" + expYearToId).val("");
            return false;
         }
      }
   }
}
function compareFromYearWithToYearOfPrevCol(expYearToId, expYearFromId) {
   if ($("#" + expYearToId).val() != "" && $("#" + expYearFromId).val() != "") {
      var rowcount = expYearFromId.substr(expYearFromId.length - 1);
      if (!datecomparision(expYearToId, expYearFromId)) {
         alert_if("'From Date' in row " + rowcount + " should be Less than 'To Date' in row " + (rowcount - 1) + " in Work Experience Details.");
         $("#" + expYearFromId).val("");
         return false;
      }
   }
   return true;
}
function datecomparision(fromDate, toDate) {
   var date1 = document.getElementById(fromDate).value;
   var date2 = document.getElementById(toDate).value;
   if (date1 != '' && date2 != '') {
      if (process(date1) < process(date2))
         return false;
      else
         return true;
   }
}
function datecomparision1(fromDate, toDate) {
   var date1 = document.getElementById(fromDate).value;
   var date2 = document.getElementById(toDate).value;
   if (date1 != '' && date2 != '') {
      if (process(date1) > process(date2))
         return false;
      else
         return true;
   }
}
function process(dateValue) {
   var parts = dateValue.split("/");
   return new Date(parts[2], parts[1] - 1, parts[0]);
}
function addExpRow(id, maxsize, columnarray, suffix) {
   for (var a = 1; a <= maxExpRows; a++) {
      if (document.getElementById(id + a).style.display == '') {
         for (var columnid = 0; columnarray != null && columnid < columnarray.length; columnid++) {
            if (0 == document.getElementById(columnarray[columnid] + a).value.length) {
               if (suffix != null) {
                  alert_if("Please completely fill row " + a + " of " + suffix + ".");
               } else {
                  alert_if("Please first fill all rows of " + suffix + ".");
               }
               return;
            }
         }
         $("#A" + a).removeClass("in");
      } else {
         break;
      }
   }
   //$("#PN1").val('Driver');$("#PN2").val('Driver');$("#PN3").val('Driver');$("#PN4").val('Driver');$("#PN5").val('Driver');
   if (a == (maxExpRows + 1))
      alert_if("You cannot add any more experience details. Please click on Delete last row if any experience details needs to be replaced.");
   else {
      if (document.getElementById(id + a).style.display == 'none') {
         $("#A" + a).addClass("in");
         $("#A" + a).css("height", 'inherit');
         document.getElementById(id + a).style.display = '';
      }
   }
}
function deleteExpRow(id, id_array, maxsize) {
   a = maxExpRows;
   while (a > 1) {
      if (document.getElementById(id + a).style.display == '') {
         document.getElementById(id + a).style.display = 'none';
         for (var index = 0; index < id_array.length; index++) {
            document.getElementById(id_array[index] + a).value = '';
         }
         document.getElementById("YoS" + a + "_span").innerHTML = '';
         break;
      }
      a--;
   }
   displayTotalExperience();
}
function checkDateDifference3(date1, date2) {
   var arrinp1 = date1.split("/"); var arrinp2 = date2.split("/");
   var a = moment([arrinp1[2], Number(arrinp1[1] - 1), (arrinp1[0])]); var b = moment([arrinp2[2], Number(arrinp2[1] - 1), (arrinp2[0])]).add(1, "days");
   var years = b.diff(a, 'year');
   a.add(years, 'years');
   var months = b.diff(a, 'months');
   a.add(months, 'months');
   var days = b.diff(a, 'days');
   a.add(days, 'days');
   var age = new Array();
   age[0] = years; age[1] = months; age[2] = days;
   return age;
}
function displayTotalExperience() {
   var totalExperienceInYears = 0; var totalExperienceInMonth = 0; var totalExperienceInDays = 0; var totalExperience = 0;
   for (var i = 1; i <= maxExpRows; i++) {
      var fromDate = $("#SD" + i).val();
      var toDate = $("#ED" + i).val();
      if ($("#PreviousExperince_row" + i).css("display") != "none" && fromDate.trim() != "" && toDate.trim() != "") {
         totalExperienceInYears = totalExperienceInYears + checkDateDifference3(fromDate, toDate)[0]; totalExperienceInMonth = totalExperienceInMonth + checkDateDifference3(fromDate, toDate)[1]; totalExperienceInDays = totalExperienceInDays + checkDateDifference3(fromDate, toDate)[2];
      }
   }
   if (totalExperienceInYears >= 0 || totalExperienceInMonth >= 0) {
      if (totalExperienceInMonth >= 12) {
         var yearsFromMonth = Math.floor(totalExperienceInMonth / 12); totalExperienceInYears = totalExperienceInYears + yearsFromMonth; totalExperienceInMonth = totalExperienceInMonth - yearsFromMonth * 12;
      }
      document.getElementById('exYr').value = totalExperienceInYears;
      document.getElementById('expMth').value = totalExperienceInMonth;
      document.getElementById('expDys').value = totalExperienceInDays;
      var year = document.getElementById('exYr').value;
      var month = document.getElementById('expMth').value;
      var d2 = document.getElementById('expDys').value;
      var a = moment([year, Number(month), 1]).add(d2, "days");
      a = a.subtract(1, "days");
      var newy = a.get('Year'); var newm = a.get('month'); var newd = a.get('date');
      if (newd >= 31) {
         var MonthFromDays = Math.floor(newd / 31); newm = newm + MonthFromDays; newd = newd - MonthFromDays * 31;
      }
      if (newm >= 12) {
         var yearsFromMonth1 = Math.floor(newm / 12); newy = newy + yearsFromMonth1; newm = newm - yearsFromMonth1 * 12;
      }
      $('#expTtl').html(newy + ' Year(s),' + newm + ' Month(s)' + newd + ' Day(s)');
      var exp = newy + ' Year(s),' + newm + ' Month(s),' + newd + ' Day(s)';
      document.getElementById('expTtl').value = exp;
      $("#TotalExperience_span").html(exp);
      document.getElementById('exYr').value = newy;
      if ($("#ED1").val() == "" || $("#SD1").val() == "") {
         $("#expTtl").html("");
         document.getElementById('expTtl').value = "";
         $("#TotalExperience_span").html("");
      }
   }
   else {
      $("#expTtl").html("");
      document.getElementById('expTtl').value = "";
      $("#TotalExperience_span").html("");
   }
}
function getMyDateDifferenceExp(date1, date2) {
   var arrinp1 = date1.split("/"); var arrinp2 = date2.split("/"); var a = moment([arrinp1[2], Number(arrinp1[1] - 1), (arrinp1[0])]); var b = moment([arrinp2[2], Number(arrinp2[1] - 1), (arrinp2[0])]); var years = b.diff(a, 'year');
   a.add(years, 'years');
   var months = b.diff(a, 'months');
   a.add(months, 'months');
   var days = b.diff(a, 'days');
   a.add(days, 'days');
   var age = new Array(); age[0] = years; age[1] = months; age[2] = days;
   return age;
}
///////////// exp ends here/////////////
// ***************Data manupulation******
//Form Configuration 
let ConfigurationObj = null;
function getConfigurationDetails() {
   var fields = 'txtWhereClauseId,txtAppNo,MaritialStatus,Religion,FatherName,MotherName,HusbandName,PostCategory,PostName,PostCode,DeptName,AdvtNo,AdvtDate,CorrigendumDate,DomcileDetailsReq,Category,ApplyCategory,marksIdentify,NoOfIdentificationProofReq,Licensetype,Kmigrant,ExservicemenDetailsReq,SportsPersonDetailsReq,DisabilityType,DefenceServiceDetailsReq,SpecifyWarHero,DeptEmployeeDetailsReq,CurrentEmpDetReq,MatricSubject,MatriculationDetailsReq,10PerMarkCGPA,IntermediateDetailsReq,12Subject,12PerMarkCGPA,DiplomaDetailsReq,DipSubject,DipPerMarkCGPA,GraduationDetailsReq,GradDegree,GradSubject,GradPrMarkCGPA,PostGraduationDetailsReq,PGDegree,PGSubject,PGPrMarkCGPA,AnyOtherQual1DetailsReq,HighQual1Degree,HighQual1Subject,HighQual1PrMarkCGPA,AnyOtherQual2DetailsReq,HighQual2Degree,HighQual2Subject,HighQual2PrMarkCGPA,ExperienceDetailsReq,TestCityReq,TestCityValues,TestStateValues,Amount,PaymentReq,PaymentGatewayType,12orDipReq,Datepicker';
   var Sess = $("#sessChk").val();
   var AppNo = $('#app_seq_no').val();
   var WhereClauseId = '83978';
   if ($("#txtPostName").val() != "") {
      WhereClauseId = WhereClauseId + $("#txtPostName").val();
   }
   $.ajax({
      type: "POST",
      url: "/EForms/cdmsservlet",
      data: {
         actionId: "fnGetFormConfigurations",
         argnum: "0",
         formId: "83977",//Config formID
         masterFormId: "83978",
         orgId: "32664",
         Para1: fields,
         appNo: AppNo,
         WhereClauseId: WhereClauseId,
         sessChk: Sess
      },
      dataType: "json",
      success: function (result) {
         ConfigurationObj = result;
         SetFormConfiguration();
      },
      error: function (result) {
         if (result == 'Not a valid user session') {
            alert('Invalid User');
         }
      }
   });
}
let NoofTestCitiesReq = null;
let datepicker_arr = null;
function SetFormConfiguration() {
   $('#txtWhereClauseId').val('83978');
   //dates
   datepicker_arr = ConfigurationObj.Datepicker.split('~');
   //Marital Status config
   var getInval = $('#txtMaritialStatus').val(); var selbox = document.getElementById('MaritialStatus');
   selbox.options.length = 0;
   $('#MaritialStatus').selectpicker('refresh');
   var ele = ConfigurationObj.MaritialStatus; var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#MaritialStatus').selectpicker('refresh'); $('#MaritialStatus').val(getInval);

   if (ConfigurationObj.MaritialStatus.split('~')[0] == 'YY' || ConfigurationObj.MaritialStatus.split('~')[0] == 'YN') {
      $('#txtMaritialStatus').parents(".efmCls").show();
   } else {
      $('#txtMaritialStatus').parents(".efmCls").hide();
      $('#txtMaritialStatus').val('');
   }
   if (ConfigurationObj.MaritialStatus.split('~')[0] == 'YY') {
      $('#txtMaritialStatus').parents(".efmCls").find('sup').html('*');

   } else {
      $('#txtMaritialStatus').parents(".efmCls").find('sup').html('');
   }
   //Religion config
   var getInval = $('#txtReligion').val(); var selbox = document.getElementById('Religion');
   selbox.options.length = 0;
   $('#Religion').selectpicker('refresh');
   var ele = ConfigurationObj.Religion; var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#Religion').selectpicker('refresh'); $('#Religion').val(getInval);

   if (ConfigurationObj.Religion.split('~')[0] == 'YY' || ConfigurationObj.Religion.split('~')[0] == 'YN') {
      $('#txtReligion').parents(".efmCls").show();
   } else {
      $('#txtReligion').parents(".efmCls").hide();
      $('#txtReligion').val('');
   }
   if (ConfigurationObj.Religion.split('~')[0] == 'YY') {
      $('#txtReligion').parents(".efmCls").find('sup').html('*');

   } else {
      $('#txtReligion').parents(".efmCls").find('sup').html('');
   }
   //Fathers Name config
   if (ConfigurationObj.FatherName.split('~')[0] == 'YY' || ConfigurationObj.FatherName.split('~')[0] == 'YN') {
      $('#txtFatherName').parents(".efmCls").show();
   } else {
      $('#txtFatherName').parents(".efmCls").hide();
      $('#txtFatherName').val('');
   }
   if (ConfigurationObj.FatherName.split('~')[0] == 'YY') {
      $('#txtFatherName').parents(".efmCls").find('sup').html('*');

   } else {
      $('#txtFatherName').parents(".efmCls").find('sup').html('');
   }
   //Mothers Name config
   if (ConfigurationObj.MotherName.split('~')[0] == 'YY' || ConfigurationObj.MotherName.split('~')[0] == 'YN') {
      $('#txtMotherName').parents(".efmCls").show();
   } else {
      $('#txtMotherName').parents(".efmCls").hide();
      $('#txtMotherName').val('');
   }
   if (ConfigurationObj.MotherName.split('~')[0] == 'YY') {
      $('#txtMotherName').parents(".efmCls").find('sup').html('*');

   } else {
      $('#txtMotherName').parents(".efmCls").find('sup').html('');
   }
   //Husbands Name config
   if (ConfigurationObj.HusbandName.split('~')[0] == 'YY' || ConfigurationObj.HusbandName.split('~')[0] == 'YN') {
      $('#txtHusbandsName').parents(".efmCls").show();
   } else {
      $('#txtHusbandsName').parents(".efmCls").hide();
      $('#txtHusbandsName').val('');
   }
   if (ConfigurationObj.HusbandName.split('~')[0] == 'YY') {
      $('#txtHusbandsName').parents(".efmCls").find('sup').html('*');

   } else {
      $('#txtHusbandsName').parents(".efmCls").find('sup').html('');
   }
   
   //Post Category config
   var getInval = $('#txtPostCategory').val();
   var selbox = document.getElementById('PostCategory');
   selbox.options.length = 0;
   $('#PostCategory').selectpicker('refresh');
   var ele = ConfigurationObj.PostCategory;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#PostCategory').selectpicker('refresh');
   $('#PostCategory').val(getInval);
   if (ConfigurationObj.PostCategory.split('~')[0] == 'YY' || ConfigurationObj.PostCategory.split('~')[0] == 'YN') {
      $('#txtPostCategory').parents(".efmCls").show();
   } else {
      $('#txtPostCategory').parents(".efmCls").hide();
      $('#txtPostCategory').val('');
   }
   if (ConfigurationObj.PostCategory.split('~')[0] == 'YY') {
      $('#txtPostCategory').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtPostCategory').parents(".efmCls").find('sup').html('');
   }
   //Post Name config
   var getInval = $('#txtPostName').val();
   var selbox = document.getElementById('PostName');
   selbox.options.length = 0;
   $('#PostName').selectpicker('refresh');
   var ele = ConfigurationObj.PostName;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) {
      selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]);
   }
   // $("#PostName").prop("selectedIndex", 2);
   $('#PostName').selectpicker('refresh');
   $('#PostName').val(getInval);
   // $('[data-id="PostName"]').addClass('tabli');

   if (ConfigurationObj.PostName.split('~')[0] == 'YY' || ConfigurationObj.PostName.split('~')[0] == 'YN') {
      $('#txtPostName').parents(".efmCls").show();
   } else {
      $('#txtPostName').parents(".efmCls").hide();
      $('#txtPostName').val('');
   }
   if (ConfigurationObj.PostName.split('~')[0] == 'YY') {
      $('#txtPostName').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtPostName').parents(".efmCls").find('sup').html('');
   }
   //Post Code Config
   var ele = ConfigurationObj.PostCode;
   var splitele = ele.split("~");
   $('#txtPostCode').val(splitele[1]);
   if (ConfigurationObj.PostCode.split('~')[0] == 'YY' || ConfigurationObj.PostCode.split('~')[0] == 'YN') {
      $('#txtPostCode').parents(".efmCls").show();
   } else {
      $('#txtPostCode').parents(".efmCls").hide();
      $('#txtPostCode').val('');
   }
   if (ConfigurationObj.PostCode.split('~')[0] == 'YY') {
      $('#txtPostCode').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtPostCode').parents(".efmCls").find('sup').html('');
   }
   //Department Name config
   var ele = ConfigurationObj.DeptName;
   var splitele = ele.split("~");
   $('#txtDeptName').val(splitele[1]);
   if (ConfigurationObj.DeptName.split('~')[0] == 'YY' || ConfigurationObj.DeptName.split('~')[0] == 'YN') {
      $('#txtDeptName').parents(".efmCls").show();
   } else {
      $('#txtDeptName').parents(".efmCls").hide();
      $('#txtDeptName').val('');
   }
   if (ConfigurationObj.DeptName.split('~')[0] == 'YY') {
      $('#txtDeptName').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtDeptName').parents(".efmCls").find('sup').html('');
   }
   //Advertisement Number config
   var ele = ConfigurationObj.AdvtNo;
   var splitele = ele.split("~");
   $('#txtAdvtNo').val(splitele[1]);
   if (ConfigurationObj.AdvtNo.split('~')[0] == 'YY' || ConfigurationObj.AdvtNo.split('~')[0] == 'YN') {
      $('#txtAdvtNo').parents(".efmCls").show();
   } else {
      $('#txtAdvtNo').parents(".efmCls").hide();
      $('#txtAdvtNo').val('');
   }
   if (ConfigurationObj.AdvtNo.split('~')[0] == 'YY') {
      $('#txtAdvtNo').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtAdvtNo').parents(".efmCls").find('sup').html('');
   }
   //Advertisement Date config
   var ele = ConfigurationObj.AdvtDate;
   var splitele = ele.split("~");
   $('#txtAdvtDate').val(splitele[1]);
   if (ConfigurationObj.AdvtDate.split('~')[0] == 'YY' || ConfigurationObj.AdvtDate.split('~')[0] == 'YN') {
      $('#txtAdvtDate').parents(".efmCls").show();
   } else {
      $('#txtAdvtDate').parents(".efmCls").hide();
      $('#txtAdvtDate').val('');
   }
   if (ConfigurationObj.AdvtDate.split('~')[0] == 'YY') {
      $('#txtAdvtDate').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtAdvtDate').parents(".efmCls").find('sup').html('');
   }
   //Corrigendum Date config
   var ele = ConfigurationObj.CorrigendumDate;
   var splitele = ele.split("~");
   $('#txtCorrigendumDate').val(splitele[1]);
   if (ConfigurationObj.CorrigendumDate.split('~')[0] == 'YY' || ConfigurationObj.CorrigendumDate.split('~')[0] == 'YN') {
      $('#txtCorrigendumDate').parents(".efmCls").show();
   } else {
      $('#txtCorrigendumDate').parents(".efmCls").hide();
      $('#txtCorrigendumDate').val('');
   }
   if (ConfigurationObj.CorrigendumDate.split('~')[0] == 'YY') {
      $('#txtCorrigendumDate').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtCorrigendumDate').parents(".efmCls").find('sup').html('');
   }
   //Domicile Details config
   if (ConfigurationObj.DomcileDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.DomcileDetailsReq.split('~')[0] == 'YN') {
      $('#txtDomicile').parents(".efmCls").show();
   } else {
      $('#txtDomicile').parents(".efmCls").hide();
      $('#txtDomicile').val('');
   }
   if (ConfigurationObj.DomcileDetailsReq.split('~')[0] == 'YY') {
      $('#txtDomicile').parents(".efmCls").find('sup').html('*');
      $('.otherdomstate_tr').find('sup').html('*');
      //$('#DomicileDetails').find('sup').html('*');
   } else {
      $('#txtDomicile').parents(".efmCls").find('sup').html('');
   }
   if (ConfigurationObj.DomcileDetailsReq.split('~')[1] == 'YY') {
      $('#DomicileDetails').find('sup').html('*');
   } else {
      $('#DomicileDetails').find('sup').html('');
   }
   //Reservation Category config
   var getInval = $('#txtCategory').val();
   var selbox = document.getElementById('Category');
   selbox.options.length = 0;
   $('#Category').selectpicker('refresh');
   var ele = ConfigurationObj.Category;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#Category').selectpicker('refresh');
   $('#Category').val(getInval);
   if (ConfigurationObj.Category.split('~')[0] == 'YY' || ConfigurationObj.Category.split('~')[0] == 'YN') {
      $('#txtCategory_tr').css("display", "");
   } else {
      $('#txtCategory_tr').css("display", "none"); $("#txtCategory_tr input:not([type='radio'])").val(""); $("#txtCategory_tr input[type='radio']").prop("checked", false); $("#txtCategory_tr input[type='checkbox']").prop("checked", false); $("#txtCategory_tr select").val(""); $("#txtCategory_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.Category.split('~')[0] == 'YY') {
      $('#txtCategory_tr').find('sup').html('*');
   } else {
      $('#txtCategory_tr').find('sup').html('');
   } if (ConfigurationObj.Category.split('~')[1] == 'YY') {
      $('#CategoryDetails').find('sup').html('*');
   } else {
      $('#CategoryDetails').find('sup').html('');
   }
   //Applying category config
   var getInval = $('#txtApplyCategory').val();
   var selbox = document.getElementById('ApplyCategory');
   selbox.options.length = 0;
   $('#ApplyCategory').selectpicker('refresh');
   var ele = ConfigurationObj.ApplyCategory;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#ApplyCategory').selectpicker('refresh');
   $('#ApplyCategory').val(getInval);
   if (ConfigurationObj.ApplyCategory.split('~')[0] == 'YY' || ConfigurationObj.ApplyCategory.split('~')[0] == 'YN') {
      $('#txtApplyCategory_tr').css("display", "");
   } else {
      $('#txtApplyCategory_tr').css("display", "none"); $("#txtApplyCategory_tr input:not([type='radio'])").val(""); $("#txtApplyCategory_tr input[type='radio']").prop("checked", false); $("#txtApplyCategory_tr input[type='checkbox']").prop("checked", false); $("#txtApplyCategory_tr select").val(""); $("#txtApplyCategory_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.ApplyCategory.split('~')[0] == 'YY') {
      $('#txtApplyCategory_tr').find('sup').html('*');
   } else {
      $('#txtApplyCategory_tr').find('sup').html('');
   }
   //Mark of identofication config
   if (ConfigurationObj.marksIdentify.split('~')[0] == 'YY' || ConfigurationObj.marksIdentify.split('~')[0] == 'YN') {
      $('#txtmarksIdentify').parents(".efmCls").show();
   } else {
      $('#txtmarksIdentify').parents(".efmCls").hide(); $('#txtmarksIdentify').val('');
   }
   if (ConfigurationObj.marksIdentify.split('~')[0] == 'YY') {
      $('#txtmarksIdentify').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtmarksIdentify').parents(".efmCls").find('sup').html('');
   }
   //identofication proofs
   if (ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YY' || ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YN') {
      $(".identityProofs_tr").show();
   } else {
      $(".identityProofs_tr").hide();
      $(".identityProofs_tr input:not([type='radio'])").val(""); $(".identityProofs_tr input[type='radio']").prop("checked", false); $(".identityProofs_tr input[type='checkbox']").prop("checked", false); $(".identityProofs_tr select").val(""); $(".identityProofs_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YY' || ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'YN') {
      $(".identityProofs_tr").find('sup').html('*');
   } else {
      $(".identityProofs_tr").find('sup').html('');
   }
   if (ConfigurationObj.NoOfIdentificationProofReq.split('~')[0] == 'NN' && ConfigurationObj.marksIdentify.split('~')[0] == 'NN') {
      $('[href="#IdentificationDetails"],#IdentificationDetails').css("display", "none");
   } else {
      $('[href="#IdentificationDetails"],#IdentificationDetails').css("display", "");
   }
   //J&K config
   // if (ConfigurationObj.Kmigrant.split('~')[0] == 'YY' || ConfigurationObj.Kmigrant.split('~')[0] == 'YN') {
      // $('[href="#JAndKDetails"],#JAndKDetails').css("display", "");
   // } else {
      // $('[href="#JAndKDetails"],#JAndKDetails').css("display", "none");
      // $('#txtKMigrant').val('');
   // }
   // if (ConfigurationObj.Kmigrant.split('~')[0] == 'YY') {
      // $('#JAndKDetails').find('sup').html('*');
   // } else {
      // $('#JAndKDetails').find('sup').html('');
   // }
   //Ex-servicemen Config
   if (ConfigurationObj.ExservicemenDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExservicemenDetailsReq.split('~')[0] == 'YN') {
      $('[href="#ExServicemenDetails"],#ExServicemenDetails').css("display", "");
   } else {
      $('[href="#ExServicemenDetails"],#ExServicemenDetails').css("display", "none"); $('#txtExServiceman').val(''); $(".ExServiceman_tr input:not([type='radio'])").val(""); $(".ExServiceman_tr input[type='checkbox']").prop("checked", false); $(".ExServiceman_tr input[type='radio']").prop("checked", false); $("#txtExseryears").val(""); $("#txtExserMonths").val(""); $("#txtExserDays").val("");
   }
   if (ConfigurationObj.ExservicemenDetailsReq.split('~')[0] == 'YY') {
      $('#ExServicemenDetails').find('sup').html('*');
   } else {
      $('#ExServicemenDetails').find('sup').html('');
   }

   //Sports Person Config
   if (ConfigurationObj.SportsPersonDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.SportsPersonDetailsReq.split('~')[0] == 'YN') {
      $('[href="#SportsPersonDetails"],#SportsPersonDetails').css("display", "");
   } else {
      $('[href="#SportsPersonDetails"],#SportsPersonDetails').css("display", "none"); $('#txtSportPerson').val(''); $(".SportPerson_tr input:not([type='radio'])").val(""); $(".SportPerson_tr input[type='checkbox']").prop("checked", false); $(".SportPerson_tr input[type='radio']").prop("checked", false);
   }
   if (ConfigurationObj.SportsPersonDetailsReq.split('~')[0] == 'YY') {
      $('#SportsPersonDetails').find('sup').html('*');
   } else {
      $('#SportsPersonDetails').find('sup').html('');
   }
   //PWD Config
   if (ConfigurationObj.DisabilityType.split('~')[0] == 'YY' || ConfigurationObj.DisabilityType.split('~')[0] == 'YN') {
      $('[href="#PWbDDetails"],#PWbDDetails').css("display", "");
   } else {
      $('[href="#PWbDDetails"],#PWbDDetails').css("display", "none"); $('#txtPWD').val(''); $(".PWD_tr input:not([type='radio'])").val(""); $(".PWD_tr input[type='checkbox']").prop("checked", false); $(".PWD_tr input[type='radio']").prop("checked", false);
   }
   if (ConfigurationObj.DisabilityType.split('~')[0] == 'YY') {
      $('#PWbDDetails').find('sup').html('*');
   } else {
      $('#PWbDDetails').find('sup').html('');
   }
   //Scribe config
   if (ConfigurationObj.DisabilityType.split('~')[1] == 'YY' || ConfigurationObj.DisabilityType.split('~')[1] == 'YN') {
      $('.Scribe_tr').css("display", "");
   } else {
      $('.Scribe_tr').css("display", "none"); $('#txtScribe').val(''); $('#txtOwnScribe').val(''); $(".Scribe_tr input:not([type='radio'])").val(""); $(".Scribe_tr input[type='checkbox']").prop("checked", false); $(".Scribe_tr input[type='radio']").prop("checked", false);
   }
   if (ConfigurationObj.DisabilityType.split('~')[1] == 'YY') {
      $('.Scribe_tr').find('sup').html('*');
   } else {
      $('.Scribe_tr').find('sup').html('');
   }
   //Wheelchair config
   if (ConfigurationObj.DisabilityType.split('~')[2] == 'YY' || ConfigurationObj.DisabilityType.split('~')[2] == 'YN') {
      $('.Wheelchair_tr').css("display", "");
   } else {
      $('.Wheelchair_tr').css("display", "none"); $('#txtWheelchairSupport').val(''); $(".Wheelchair_tr input:not([type='radio'])").val(""); $(".Wheelchair_tr input[type='checkbox']").prop("checked", false); $(".Wheelchair_tr input[type='radio']").prop("checked", false);
   }
   if (ConfigurationObj.DisabilityType.split('~')[2] == 'YY') {
      $('.Wheelchair_tr').find('sup').html('*');
   } else {
      $('.Wheelchair_tr').find('sup').html('');
   }
   //Type of disability
   var getInval = $('#txtDisabilityType').val();
   var selbox = document.getElementById('DisabilityType');
   selbox.options.length = 0;
   $('#DisabilityType').selectpicker('refresh');
   var ele = ConfigurationObj.DisabilityType;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 3; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#DisabilityType').selectpicker('refresh');
   $('#DisabilityType').val(getInval);
   //Defence service config
   if (ConfigurationObj.DefenceServiceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.DefenceServiceDetailsReq.split('~')[0] == 'YN') {
      $('[href="#DefenceSerPerDetails"],#DefenceSerPerDetails').css("display", "");
   } else {
      $('[href="#DefenceSerPerDetails"],#DefenceSerPerDetails').css("display", "none"); $('#txtWarHero').val(''); $(".WarHero_tr input:not([type='radio'])").val(""); $(".WarHero_tr input[type='checkbox']").prop("checked", false); $(".WarHero_tr input[type='radio']").prop("checked", false);
   }
   if (ConfigurationObj.DefenceServiceDetailsReq.split('~')[0] == 'YY') {
      $('#DefenceSerPerDetails').find('sup').html('*');
   } else {
      $('#DefenceSerPerDetails').find('sup').html('');
   }
   var getInval = $('#txtSpecifyWarHero').val();
   var selbox = document.getElementById('SpecifyWarHero');
   selbox.options.length = 0;
   $('#SpecifyWarHero').selectpicker('refresh');
   var ele = ConfigurationObj.SpecifyWarHero;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#SpecifyWarHero').selectpicker('refresh');
   $('#SpecifyWarHero').val(getInval);
   //Dept Emp details config
   if (ConfigurationObj.DeptEmployeeDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.DeptEmployeeDetailsReq.split('~')[0] == 'YN') {
      $('[href="#DepartEmpDetails"],#DepartEmpDetails').css("display", "");
   } else {
      $('[href="#DepartEmpDetails"],#DepartEmpDetails').css("display", "none"); $('#txtGovtEmp').val(''); $(".GovtEmp_tr input:not([type='radio'])").val(""); $(".GovtEmp_tr input[type='checkbox']").prop("checked", false); $(".GovtEmp_tr input[type='radio']").prop("checked", false);
   }
   if (ConfigurationObj.DeptEmployeeDetailsReq.split('~')[0] == 'YY') {
      $('#DepartEmpDetails').find('sup').html('*');
   } else {
      $('#DepartEmpDetails').find('sup').html('');
   }
   //curreent org Emp details config
   if (ConfigurationObj.CurrentEmpDetReq.split('~')[0] == 'YY' || ConfigurationObj.CurrentEmpDetReq.split('~')[0] == 'YN') {
      $('[href="#CurrentEmpDetails"],#CurrentEmpDetails').css("display", "");
   } else {
      $('[href="#CurrentEmpDetails"],#CurrentEmpDetails').css("display", "none"); $('#txtCurrentOrgEmp').val(''); $(".CurrentOrgEmp_tr input:not([type='radio'])").val(""); $(".CurrentOrgEmp_tr input[type='checkbox']").prop("checked", false); $(".CurrentOrgEmp_tr input[type='radio']").prop("checked", false);
   }
   if (ConfigurationObj.CurrentEmpDetReq.split('~')[0] == 'YY') {
      $('#CurrentEmpDetails').find('sup').html('*');
   } else {
      $('#CurrentEmpDetails').find('sup').html('');
   }
   //Matric Subject config
   if (ConfigurationObj.MatricSubject.split('~')[0] == 'YY' || ConfigurationObj.MatricSubject.split('~')[0] == 'YN') {
      $('#txtMatricSubject').parents(".efmCls").show();
   } else {
      $('#txtMatricSubject').parents(".efmCls").hide();
      $('#txtMatricSubject').val('');
   }
   if (ConfigurationObj.MatricSubject.split('~')[0] == 'YY') {
      $('#txtMatricSubject').parents(".efmCls").find('sup').html('*');
   } else {
      $('#txtMatricSubject').parents(".efmCls").find('sup').html('');
   }
   //Matriculation config
   if (ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YN') {
      $('.10thDetReq_tr').css("display", "");
   } else {
      $('.10thDetReq_tr').css("display", "none"); $(".10thDetReq_tr input:not([type='radio'])").val(""); $(".10thDetReq_tr input[type='radio']").prop("checked", false); $(".10thDetReq_tr input[type='checkbox']").prop("checked", false); $(".10thDetReq_tr select").val(""); $(".10thDetReq_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.MatriculationDetailsReq.split('~')[0] == 'YY') {
      $('.10thDetReq_tr').find('sup').html('*');
   } else {
      $('.10thDetReq_tr').find('sup').html('');
   }
   var getInval = $('#txt10PerMarkCGPA').val();
   var selbox = document.getElementById('txt10PerMarkCGPA');
   selbox.options.length = 0;
   $('#txt10PerMarkCGPA').selectpicker('refresh');
   var ele = ConfigurationObj["10PerMarkCGPA"];
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txt10PerMarkCGPA').selectpicker('refresh');
   $('#txt10PerMarkCGPA').val(getInval);



   //Intermediate config
   if (ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YN') {
      $('.12thDetReq_tr').css("display", "");
   } else {
      $('.12thDetReq_tr').css("display", "none"); $(".12thDetReq_tr input:not([type='radio'])").val(""); $(".12thDetReq_tr input[type='radio']").prop("checked", false); $(".12thDetReq_tr input[type='checkbox']").prop("checked", false); $(".12thDetReq_tr select").val(""); $(".12thDetReq_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.IntermediateDetailsReq.split('~')[0] == 'YY' || ($('#txt12thBoard').val() != '' || $('#txt12thschool').val() != '' || $('#txt12PerMarkCGPA').val() != '' || $('#txt12thYOP').val() != '')) {
      $('.12thDetReq_tr').find('sup').html('*');
   } else {
      $('.12thDetReq_tr').find('sup').html('');
   }
   var getInval = $('#txt12PerMarkCGPA').val();
   var selbox = document.getElementById('txt12PerMarkCGPA');
   selbox.options.length = 0;
   $('#txt12PerMarkCGPA').selectpicker('refresh');
   var ele = ConfigurationObj["12PerMarkCGPA"];
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txt12PerMarkCGPA').selectpicker('refresh');
   $('#txt12PerMarkCGPA').val(getInval);
   var getInval = $('#txt12Subject').val();
   var selbox = document.getElementById('12Subject');
   selbox.options.length = 0;
   $('#12Subject').selectpicker('refresh');
   var ele = ConfigurationObj["12Subject"];
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#12Subject').selectpicker('refresh');
   $('#12Subject').val(getInval);


   //License Type
   var getInval = $('#txtLicensetype').val();
   var selbox = document.getElementById('txtLicensetype');
   selbox.options.length = 0;
   $('#txtLicensetype').selectpicker('refresh');
   var ele = ConfigurationObj.Licensetype;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txtLicensetype').selectpicker('refresh');
   $('#txtLicensetype').val(getInval);
   //Diploama config
   if (ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YN') {
      $('.DiplomaDetReq_tr').css("display", "");
   } else {
      $('.DiplomaDetReq_tr').css("display", "none"); $(".DiplomaDetReq_tr input:not([type='radio'])").val(""); $(".DiplomaDetReq_tr input[type='radio']").prop("checked", false); $(".DiplomaDetReq_tr input[type='checkbox']").prop("checked", false); $(".DiplomaDetReq_tr select").val(""); $(".DiplomaDetReq_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.DiplomaDetailsReq.split('~')[0] == 'YY' || ($('#txtDiplomaName').val() != '' || $('#txtDiplomaInsti').val() != '' || $('#txtDipPerMarkCGPA').val() != '' || $('#txtDipPassDate').val() != '')) {
      $('.DiplomaDetReq_tr').find('sup').html('*');
   } else {
      $('.DiplomaDetReq_tr').find('sup').html('');
   }
   var getInval = $('#txtDipPerMarkCGPA').val();
   var selbox = document.getElementById('txtDipPerMarkCGPA');
   selbox.options.length = 0;
   $('#txtDipPerMarkCGPA').selectpicker('refresh');
   var ele = ConfigurationObj.DipPerMarkCGPA;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txtDipPerMarkCGPA').selectpicker('refresh');
   $('#txtDipPerMarkCGPA').val(getInval);
   var getInval = $('#txtDipSubject').val();
   var selbox = document.getElementById('DipSubject');
   selbox.options.length = 0;
   $('#DipSubject').selectpicker('refresh');
   var ele = ConfigurationObj.DipSubject;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#DipSubject').selectpicker('refresh');
   $('#DipSubject').val(getInval);
   //Graduation config
   if (ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YN') {
      $('.GradDetReq_tr').css("display", "");
   } else {
      $('.GradDetReq_tr').css("display", "none"); $(".GradDetReq_tr input:not([type='radio'])").val(""); $(".GradDetReq_tr input[type='radio']").prop("checked", false); $(".GradDetReq_tr input[type='checkbox']").prop("checked", false); $(".GradDetReq_tr select").val(""); $(".GradDetReq_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.GraduationDetailsReq.split('~')[0] == 'YY' || ($('#txtGradDegree').val() != '' || $('#txtGradInsti').val() != '' || $('#txtGradPrMarkCGPA').val() != '' || $('#txtgraddate').val() != '')) {
      $('.GradDetReq_tr').find('sup').html('*');
   } else {
      $('.GradDetReq_tr').find('sup').html('');
   }
   var getInval = $('#txtGradPrMarkCGPA').val();
   var selbox = document.getElementById('txtGradPrMarkCGPA');
   selbox.options.length = 0;
   $('#txtGradPrMarkCGPA').selectpicker('refresh');
   var ele = ConfigurationObj.GradPrMarkCGPA;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txtGradPrMarkCGPA').selectpicker('refresh');
   $('#txtGradPrMarkCGPA').val(getInval);
   var getInval = $('#txtGradSubject').val();
   var selbox = document.getElementById('GradSubject');
   selbox.options.length = 0;
   $('#GradSubject').selectpicker('refresh');
   var ele = ConfigurationObj.GradSubject;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#GradSubject').selectpicker('refresh');
   $('#GradSubject').val(getInval);
   var getInval = $('#txtGradDegree').val();
   var selbox = document.getElementById('GradDegree');
   selbox.options.length = 0;
   $('#GradDegree').selectpicker('refresh');
   var ele = ConfigurationObj.GradDegree;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#GradDegree').selectpicker('refresh');
   $('#GradDegree').val(getInval);

   //Post Graduation config
   if (ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YN') {
      $('.PostGradDetReq_tr').css("display", "");
   } else {
      $('.PostGradDetReq_tr').css("display", "none"); $(".PostGradDetReq_tr input:not([type='radio'])").val(""); $(".PostGradDetReq_tr input[type='radio']").prop("checked", false); $(".PostGradDetReq_tr input[type='checkbox']").prop("checked", false); $(".PostGradDetReq_tr select").val(""); $(".PostGradDetReq_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.PostGraduationDetailsReq.split('~')[0] == 'YY') {
      $('.PostGradDetReq_tr').find('sup').html('*');
   } else {
      $('.PostGradDetReq_tr').find('sup').html('');
   }
   var getInval = $('#txtPGPrMarkCGPA').val();
   var selbox = document.getElementById('txtPGPrMarkCGPA');
   selbox.options.length = 0;
   $('#txtPGPrMarkCGPA').selectpicker('refresh');
   var ele = ConfigurationObj.PGPrMarkCGPA;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txtPGPrMarkCGPA').selectpicker('refresh');
   $('#txtPGPrMarkCGPA').val(getInval);
   var getInval = $('#txtPGSubject').val();
   var selbox = document.getElementById('PGSubject');
   selbox.options.length = 0;
   $('#PGSubject').selectpicker('refresh');
   var ele = ConfigurationObj.PGSubject;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#PGSubject').selectpicker('refresh');
   $('#PGSubject').val(getInval);
   // var getInval = $('#txtPGDegree').val();
   // var selbox = document.getElementById('PGDegree');
   // selbox.options.length = 0;
   // $('#PGDegree').selectpicker('refresh');
   // var ele = ConfigurationObj.PGDegree;
   // var splitele = ele.split("~");
   // selbox.options[selbox.options.length] = new Option("--Select--", "");
   // for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   // $('#PGDegree').selectpicker('refresh');
   // $('#PGDegree').val(getInval);

   //Any other 1 qualification config
   if (ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YY' || ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YN') {
      $('.HighQual1Req_tr').css("display", "");
   } else {
      $('.HighQual1Req_tr').css("display", "none"); $(".HighQual1Req_tr input:not([type='radio'])").val(""); $(".HighQual1Req_tr input[type='radio']").prop("checked", false); $(".HighQual1Req_tr input[type='checkbox']").prop("checked", false); $(".HighQual1Req_tr select").val(""); $(".HighQual1Req_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.AnyOtherQual1DetailsReq.split('~')[0] == 'YY') {
      $('.HighQual1Req_tr').find('sup').html('*');
   } else {
      $('.HighQual1Req_tr').find('sup').html('');
   }
   var getInval = $('#txtHighQual1PrMarkCGPA').val();
   var selbox = document.getElementById('txtHighQual1PrMarkCGPA');
   selbox.options.length = 0;
   $('#txtHighQual1PrMarkCGPA').selectpicker('refresh');
   var ele = ConfigurationObj.HighQual1PrMarkCGPA;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txtHighQual1PrMarkCGPA').selectpicker('refresh');
   $('#txtHighQual1PrMarkCGPA').val(getInval);
   var getInval = $('#txtHighQual1Subject').val();
   var selbox = document.getElementById('HighQual1Subject');
   selbox.options.length = 0;
   $('#HighQual1Subject').selectpicker('refresh');
   var ele = ConfigurationObj.HighQual1Subject;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#HighQual1Subject').selectpicker('refresh');
   $('#HighQual1Subject').val(getInval);
   var getInval = $('#txtHighQual1Degree').val();
   var selbox = document.getElementById('HighQual1Degree');
   selbox.options.length = 0;
   $('#HighQual1Degree').selectpicker('refresh');
   var ele = ConfigurationObj.HighQual1Degree;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#HighQual1Degree').selectpicker('refresh');
   $('#HighQual1Degree').val(getInval);
   //Any other 2 qualification config
   if (ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YY' || ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YN') {
      $('.HighQual2Req_tr').css("display", "");
   } else {
      $('.HighQual2Req_tr').css("display", "none"); $(".HighQual2Req_tr input:not([type='radio'])").val(""); $(".HighQual2Req_tr input[type='radio']").prop("checked", false); $(".HighQual2Req_tr input[type='checkbox']").prop("checked", false); $(".HighQual2Req_tr select").val(""); $(".HighQual2Req_tr select").selectpicker('refresh');
   }
   if (ConfigurationObj.AnyOtherQual2DetailsReq.split('~')[0] == 'YY') {
      $('.HighQual2Req_tr').find('sup').html('*');
   } else {
      $('.HighQual2Req_tr').find('sup').html('');
   }
   var getInval = $('#txtHighQual2PrMarkCGPA').val();
   var selbox = document.getElementById('txtHighQual2PrMarkCGPA');
   selbox.options.length = 0;
   $('#txtHighQual2PrMarkCGPA').selectpicker('refresh');
   var ele = ConfigurationObj.HighQual2PrMarkCGPA;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#txtHighQual2PrMarkCGPA').selectpicker('refresh');
   $('#txtHighQual2PrMarkCGPA').val(getInval);
   var getInval = $('#txtHighQual2Subject').val();
   var selbox = document.getElementById('HighQual2Subject');
   selbox.options.length = 0;
   $('#HighQual2Subject').selectpicker('refresh');
   var ele = ConfigurationObj.HighQual2Subject;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#HighQual2Subject').selectpicker('refresh');
   $('#HighQual2Subject').val(getInval);
   var getInval = $('#txtHighQual2Degree').val();
   var selbox = document.getElementById('HighQual2Degree');
   selbox.options.length = 0;
   $('#HighQual2Degree').selectpicker('refresh');
   var ele = ConfigurationObj.HighQual2Degree;
   var splitele = ele.split("~");
   selbox.options[selbox.options.length] = new Option("--Select--", "");
   for (var i = 1; i < splitele.length; i++) { selbox.options[selbox.options.length] = new Option(splitele[i], splitele[i]); }
   $('#HighQual2Degree').selectpicker('refresh');
   $('#HighQual2Degree').val(getInval);

   //Experience Details config
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YN') {
      $('[href="#ExperienceDetails"],#ExperienceDetails').css("display", "");
   } else {
      $('[href="#ExperienceDetails"],#ExperienceDetails').css("display", "none"); $("#ExperienceDetails input:not([type='radio'])").val(""); $("#ExperienceDetails input[type='radio']").prop("checked", false); $("#ExperienceDetails input[type='checkbox']").prop("checked", false); $("#ExperienceDetails select").val(""); $("#ExperienceDetails select").selectpicker('refresh');
   }
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ($('#ON1').val() != '' || $('#PN1').val() != '' || $('#SD1').val() != '' || $('#ED1').val() != '')) {
      $('#PartATableData_row1').find('sup').html('*');
   } else {
      $('#PartATableData_row1').find('sup').html('');
   }
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ($('#ON2').val() != '' || $('#PN2').val() != '' || $('#SD2').val() != '' || $('#ED2').val() != '')) {
      $('#PartATableData_row2').find('sup').html('*');
   } else {
      $('#PartATableData_row2').find('sup').html('');
   }
   if (ConfigurationObj.ExperienceDetailsReq.split('~')[0] == 'YY' || ($('#ON3').val() != '' || $('#PN3').val() != '' || $('#SD3').val() != '' || $('#ED3').val() != '')) {
      $('#PartATableData_row3').find('sup').html('*');
   } else {
      $('#PartATableData_row3').find('sup').html('');
   }
   //Test city config
   NoofTestCitiesReq = Number(ConfigurationObj.TestCityReq.split('~')[1]);
   if (NoofTestCitiesReq == NaN) {
      NoofTestCitiesReq = 1;
   }
   // var getInval1=$('#txtTestCity1').val();var getInval2=$('#txtTestCity2').val();var getInval3=$('#txtTestCity3').val();var getInval4=$('#txtTestCity4').val();var getInval5=$('#txtTestCity5').val();var getInval6=$('#txtTestCity6').val();

   //Test State
   var getStateInval1 = $('#txtTestState1').val(); var getStateInval2 = $('#txtTestState2').val(); var getStateInval3 = $('#txtTestState3').val(); var getStateInval4 = $('#txtTestState4').val(); var getStateInval5 = $('#txtTestState5').val(); var getStateInval6 = $('#txtTestState6').val();

   var selbox7 = document.getElementById('TestState1'); var selbox8 = document.getElementById('TestState2'); var selbox9 = document.getElementById('TestState3'); var selbox10 = document.getElementById('TestState4'); var selbox11 = document.getElementById('TestState5'); var selbox12 = document.getElementById('TestState6');

   // var selbox1=document.getElementById('TestCity1');var selbox2=document.getElementById('TestCity2');var selbox3=document.getElementById('TestCity3');var selbox4=document.getElementById('TestCity4');var selbox5=document.getElementById('TestCity5');var selbox6=document.getElementById('TestCity6');
   // selbox1.options.length=0;selbox2.options.length=0;selbox3.options.length=0;selbox4.options.length=0;selbox5.options.length=0;selbox6.options.length=0;
   //state
   selbox7.options.length = 0; selbox8.options.length = 0; selbox9.options.length = 0; selbox10.options.length = 0; selbox11.options.length = 0; selbox12.options.length = 0;
   //$('#TestCity1,#TestCity2,#TestCity3,#TestCity4,#TestCity5,#TestCity6').selectpicker('refresh');
   $('#TestState1,#TestState2,#TestState3,#TestState4,#TestState5,#TestState6').selectpicker('refresh');

   var ele = ConfigurationObj.TestStateValues;
   var splitele = ele.split("~");
   var statesVal = splitele[1];
   var states = JSON.parse(statesVal);
   selbox7.options[selbox7.options.length] = new Option("--Select--", ""); selbox8.options[selbox8.options.length] = new Option("--Select--", ""); selbox9.options[selbox9.options.length] = new Option("--Select--", ""); selbox10.options[selbox10.options.length] = new Option("--Select--", ""); selbox11.options[selbox11.options.length] = new Option("--Select--", ""); selbox12.options[selbox12.options.length] = new Option("--Select--", "");
   for (var i = 0; i < Object.keys(states).length; i++) {
      selbox7.options[selbox7.options.length] = new Option(Object.keys(states)[i], Object.keys(states)[i]); selbox8.options[selbox8.options.length] = new Option(Object.keys(states)[i], Object.keys(states)[i]); selbox9.options[selbox9.options.length] = new Option(Object.keys(states)[i], Object.keys(states)[i]); selbox10.options[selbox10.options.length] = new Option(Object.keys(states)[i], Object.keys(states)[i]); selbox11.options[selbox11.options.length] = new Option(Object.keys(states)[i], Object.keys(states)[i]); selbox12.options[selbox12.options.length] = new Option(Object.keys(states)[i], Object.keys(states)[i]);
   }
   $('#TestState1,#TestState2,#TestState3,#TestState4,#TestState5,#TestState6').selectpicker('refresh');
   $('#TestState1').val(getStateInval1); $('#TestState2').val(getStateInval2); $('#TestState3').val(getStateInval3); $('#TestState4').val(getStateInval4); $('#TestState5').val(getStateInval5); $('#TestState6').val(getStateInval6);
   //--------------
   // var ele=ConfigurationObj.TestCityValues;
   // var splitele=ele.split("~");
   // selbox1.options[selbox1.options.length]=new Option("--Select--","");selbox2.options[selbox2.options.length]=new Option("--Select--","");selbox3.options[selbox3.options.length]=new Option("--Select--","");selbox4.options[selbox4.options.length]=new Option("--Select--","");selbox5.options[selbox5.options.length]=new Option("--Select--","");selbox6.options[selbox6.options.length]=new Option("--Select--","");
   // for(var i=1;i<splitele.length;i++){
   //    selbox1.options[selbox1.options.length]=new Option(splitele[i], splitele[i]); selbox2.options[selbox1.options.length]=new Option(splitele[i], splitele[i]); selbox3.options[selbox1.options.length]=new Option(splitele[i], splitele[i]); selbox4.options[selbox1.options.length]=new Option(splitele[i], splitele[i]); selbox5.options[selbox1.options.length]=new Option(splitele[i], splitele[i]); selbox6.options[selbox1.options.length]=new Option(splitele[i], splitele[i]); 
   // }
   // $('#TestCity1,#TestCity2,#TestCity3,#TestCity4,#TestCity5,#TestCity6').selectpicker('refresh');
   // $('#TestCity1').val(getInval1);$('#TestCity2').val(getInval2);$('#TestCity3').val(getInval3);$('#TestCity4').val(getInval4);$('#TestCity5').val(getInval5);$('#TestCity6').val(getInval6);

   if (ConfigurationObj.TestCityReq.split('~')[0] == 'YY' || ConfigurationObj.TestCityReq.split('~')[0] == 'YN') {
      $('[href="#testcity"],#testcity,#fragment-32,[href="#fragment-32"]').css("display", "");
   } else {
      $('[href="#testcity"],#testcity,#fragment-32,[href="#fragment-32"]').css("display", "none"); 
	  // $("#testcity input:not([type='radio'])").val(""); $("#testcity input[type='radio']").prop("checked", false); $("#testcity input[type='checkbox']").prop("checked", false); $("#testcity select").val(""); $("#testcity select").selectpicker('refresh');
   }
   if (ConfigurationObj.TestCityReq.split('~')[0] == 'YY') {
      $('#testcity').find('sup').html('*');
   } else {
      $('#testcity').find('sup').html('');
   }
   // for (i = NoofTestCitiesReq + 1; i <= 6; i++) {
      // $('#txtTestCity' + i).parents(".efmCls").hide();
      // $('#txtTestCity' + i).val(''); $('#TestCity' + i).val('');
      // $('#txtTestState' + i).parents(".efmCls").hide();
      // $('#txtTestState' + i).val(''); $('#TestState' + i).val('');
   // }
   $('.selectpicker').selectpicker('refresh');
   //To blank the dropdown if value is not present 
   // var findDropDown = $('.selectpicker');
   // for (var i = 0; i < findDropDown.length; i++) {
      // if ($(findDropDown[i]).prop('selectedIndex') < 0) {
         // $(findDropDown[i]).val('');
         // $(findDropDown[i]).selectpicker('refresh');
         // var DropDownValueID = $(findDropDown[i]).attr('id');
         // if (!DropDownValueID.includes('txt')) {
            // $('#txt' + DropDownValueID).val('');
         // }
      // }
   // }
}


function setTestCity(id, c) {
   var ele = ConfigurationObj.TestStateValues;
   var splitele = ele.split("~");
   var statesVal = splitele[1];//state n city
   var states = JSON.parse(statesVal);
   //
   var state = $("#" + id).val();
   var selb1 = document.getElementById(c);
   selb1.options.length = 0; selb1.options[selb1.options.length] = new Option('--Select--', '');
   if (state != "") {
      var j = c.split('TestCity')[1];
      for (var i = 0; i < states[state]['PREF' + j].length; i++) {
         selb1.options[selb1.options.length] = new Option(states[state]['PREF' + j][i], states[state]['PREF' + j][i]);
      }
   } else {
      $("#txt" + c).val("");
   }
   $("#" + c).selectpicker("refresh");
   $("#" + c).val($("#txt" + c).val());
   $("#" + c).selectpicker("refresh");

   //To blank the dropdown if value is not present 
   if ($("#" + c).prop('selectedIndex') < 0) {
      $("#" + c).val('');
      $("#" + c).selectpicker('refresh');
      $('#txt' + c).val('');
   }
}
function onloadSetDetails() {
   // fnGetSecureDependentDataBasedOnOrgForm('', $("#app_seq_no").val(),'','','SearchResult','SearchResult');
}
//bizApp response
function fnPopulateDependentDataCustomAfterPopulate() {
}
//IMP function
function fnCustomizeFramworkGrid() {
   ss = document.styleSheets;
   for (var i = 0; i < ss.length; i++) {
      try {
         if (ss[i].href.includes("custommenu.css"))
            ss[i].disabled = true;
      }
      catch (exception) { }
   }
   $("#container").css("width", "90%"); $("#container-11").css("border", "0"); $("#container-11").removeClass("wrpdashboard").addClass("efrmgen-tabswrapper efrmgen-cmn-panelwrapper"); $(".customMenuH").css("background-color", "#FFFFFF"); $(".customMenuH ul").css("background-color", "#FFFFFF"); $(".customMenuH ul").removeClass("nav nav-pills demoForResponsiveTabs tabLi responsive-tabs").addClass("nav nav-pills efrmgen-navul"); $(".customMenuH").addClass("customMenuHNewUI"); $(".tabs-container").addClass("efrmgen-navli"); $(".customMenuHNewUI").removeClass("customMenuH"); $(".nav li").addClass("efrmgen-navli"); $("#tabDropdown").empty();
   switchView();
   //vertical UI code start
   $(".clearfix").removeClass("responsive-tabs-container");
   var bannerHeight = Number($(".efrmgen-header").css("height").replace("px", "")) + 70;
   if (($(".efrmgen-container-nav-sticky").css('border-right')).includes("2px solid")) {
      if (window.pageYOffset > bannerHeight - 70) {
         $(".efrmgen-container-nav-sticky").css("top", "70px");
      } else if (window.pageYOffset < bannerHeight) {
         $(".efrmgen-container-nav-sticky").css("top", bannerHeight - window.pageYOffset + "px");
      }
      else {
         $(".efrmgen-container-nav-sticky").css("top", bannerHeight - window.pageYOffset + "px");
      }
   }
   window.onscroll = () => {
      if (window.pageYOffset > bannerHeight - 70) {
         $(".efrmgen-container-nav-sticky").css("top", "70px");
      } else if (window.pageYOffset < bannerHeight) {
         $(".efrmgen-container-nav-sticky").css("top", bannerHeight - window.pageYOffset + "px");
      }
      else {
         $(".efrmgen-container-nav-sticky").css("top", bannerHeight - window.pageYOffset + "px");
      }
   }
   //vertical UI code end
}

//edit windiow code start===========
let editWindowCheckReq = false;
let editWindowCheckFlag = false;
let idEArr = []; let lblEArr = []; let valEArr = [];
function fnEditWindowConfig() {
   if (editWindowCheckReq) {
      $("[id^='save-tab-']").hide();
   } else {
      $("[id^='save-tab-']").show();
   }
   var idsPresentInForm = $(".efrmgen-tabcontainer [id]");
   for (var i = 0; i < idsPresentInForm.length; i++) {
      var tagName = $(idsPresentInForm[i]).prop('tagName');
      var ssId = $(idsPresentInForm[i]).attr('id').replace("_R", "");
      if ((tagName == "INPUT" || tagName == "SELECT") && (!idEArr.includes(ssId))) {
         if ($("#" + ssId).parents(".efmCls").find("label.efrmgen-label").length > 0) {
            var ssLbl = $($("#" + ssId).closest(".efmCls").find("label.efrmgen-label")[0]).text();
            var ssVal = $("#" + ssId).val();
            if (tagName == "SELECT" && (!ssId.includes('txt'))) {
               if ($("#txt" + ssId).length > 0) {
                  idEArr.push("txt" + ssId);
               } else {
                  idEArr.push(ssId);
               }
            } else {
               idEArr.push(ssId);
            }
            lblEArr.push(ssLbl.replaceAll("\n", "").replace("*", "").trim().split("  ").filter(n => n).join(' '));
            valEArr.push(ssVal);
         } else {
            // console.log(ssId);
         }
      }
   }
   console.log(lblEArr.length, valEArr.length, idEArr.length);
   // lblEArr
}
function fnSetEditWindowFields() {
   $("#reverifydiv table tbody").html("");
   if (editWindowCheckReq) {
      for (var j = 0; j < idEArr.length; j++) {
         if ($("#" + idEArr[j]).val() != valEArr[j]) {
            var temp = `<tr>
                  <td>`+ lblEArr[j] + `</td>
                  <td>`+ valEArr[j] + `</td>
                  <td>`+ $("#" + idEArr[j]).val() + `</td>
                  </tr>`;
            $("#reverifydiv table tbody").append(temp);
         }
      }
   }
   var editCheckbox = `
   <tr>
      <td colspan="3">
         <table><tbody><tr>
                     <td style="position:relative;padding-right: 20px;">
                     <input type="checkbox" name="editCheckbox" id="editCheckbox" class="efrmgen-check-input" required="" style="position:absolute;top: 1px;">
                     </td>
                     <td>
                     <div class="efrmgen-group" >
                        <label for="editCheckbox" class="efrmgen-check-label" style="font-size:18px;color:blue;">
                        I hereby declare that all the above details are correct and I wish to update them in my application form. 
                        </label>
                        <br>
                     </div>
                     </td>
         </tr></tbody></table>
      </td>
   </tr>`;

   if ($("#reverifydiv table tbody tr").length > 0) {
      $("#reverifydiv").show();
      editWindowCheckFlag = true;
      $("#reverifydiv table tbody").append(editCheckbox);
      document.getElementById("editCheckbox").checked = false;
   } else {
      $("#reverifydiv").hide();
      editWindowCheckFlag = false;
   }

}
//edit windiow code end=============
function SetDropdownValues() {
   Dropdown = $("select");
   for (var i = 0; i < Dropdown.length; i++) {
      if (!$(Dropdown[i]).attr('id').includes('txt')) {
         var id = $(Dropdown[i]).attr('id');
         if ($("#txt" + id).length > 0) {
            $("#" + id).val($("#txt" + id).val());
         }
      }
   }
   $('.selectpicker').selectpicker('refresh');
}
//Akash
//code for count down timmer in js?
function startTimer(duration, display) {
   var timer = duration;
   var minutes;
   var seconds;
   var fnTimer = setInterval(function () {
      minutes = parseInt(timer / 60);
      seconds = parseInt(timer % 60);

      minutes = minutes < 10 ? "0" + minutes : minutes;
      seconds = seconds < 10 ? "0" + seconds : seconds;

      display.val(minutes + ":" + seconds);
      display.attr("disabled", "disabled").css('color', "red");
      display

      if (--timer < 0) {
         //timer = duration;
         // alert("timer Over!!")
         display.removeAttr('disabled');
         display.val('Resend').css('color', "white");
         clearInterval(fnTimer);
      }
   }, 1000);
   fnTimer;
}

function checkIDProof(id){
   if(id=='txtPanCardNo' && $('#txtPanCardNo').val().length<10){
      alert_if('Pan Card Number should be of 10 characters.');
      $('#txtPanCardNo').val('');
   }
   if(id=='txtPassportNo' && $('#txtPassportNo').val().length<8){
      alert_if('Passport Number should be of 8 characters.');
      $('#txtPassportNo').val('');
   }
   if(id=='txtVoterIdNo' && $('#txtVoterIdNo').val().length<10){
      alert_if('Voter ID Number should be of 10 characters.');
      $('#txtVoterIdNo').val('');
   }
   if(id=='txtDrivingLNo' && $('#txtDrivingLNo').val().length<15){
      alert_if('Driving License Number should be of 10 characters.');
      $('#txtDrivingLNo').val('');
   }
}
function onlyAlphaNumWithSCharAdd(key,e){
if (navigator.appName =="Microsoft Internet Explorer"){
    var oKey = event.keyCode;
    if((oKey > 64 && oKey < 91) || (oKey > 96 && oKey < 123) || (oKey == 32)  || (oKey >= 44 && oKey <= 57)||oKey==35)
    {
        return true;
    }
    else
    {
        return false;
    }
}else{
    var oKey = e.charCode;
   if((oKey > 64 && oKey < 91) || (oKey > 96 && oKey < 123) || (oKey == 0) || (oKey == 32)  || (oKey >= 44 && oKey <= 57)||oKey==35)
    {
        return true;
    }
    else
    {
        return false;
    }
}  
}


function ExServiceVal(){
	if($('#txtExServiceman').val() == 'Yes' && $('#txtGradDegree').val() == 'Any Other Graduate'){
	   $('.exidP').html('');
    }else if($('#txtExServiceman').val() == 'Yes' && $('#txtGradDegree').val() != 'Any Other Graduate'){
		$('.exidP').html('*');$('.exidP').show();
	}
}